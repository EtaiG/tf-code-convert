{"prompt":"define(['vega-hierarchy','tsutils','vega-scale','vega-crossfilter','@types\/fast-json-stable-stringify','unicode-property-value-aliases-ecmascript','arg','microbundle','cpr','tr46','hashish','@types\/proper-lockfile'], function(vegaHierarchy,tsutils,vegaScale,vegaCrossfilter,typesFastJsonStableStringify,unicodePropertyValueAliasesEcmascript,arg,microbundle,cpr,tr46,hashish,typesProperLockfile){\n\n})","completion":" import vegaHierarchy from 'vega-hierarchy'\nimport tsutils from 'tsutils'\nimport vegaScale from 'vega-scale'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport arg from 'arg'\nimport microbundle from 'microbundle'\nimport cpr from 'cpr'\nimport tr46 from 'tr46'\nimport hashish from 'hashish'\nimport typesProperLockfile from '@types\/proper-lockfile'\n\n"}
{"prompt":"define(['vega-parser','tslint-plugin-prettier','hashish','verup','tr46','get-stream','vega-time','gulp-insert','vega-scale','vega-functions','vega-hierarchy','@types\/tape','from','vega-loader','vinyl','@types\/gulp','yaml-front-matter','vega-schema-url-parser','@sindresorhus\/tsconfig','xml2js'], function(vegaParser,tslintPluginPrettier,hashish,verup,tr46,getStream,vegaTime,gulpInsert,vegaScale,vegaFunctions,vegaHierarchy,typesTape,from,vegaLoader,vinyl,typesGulp,yamlFrontMatter,vegaSchemaUrlParser,sindresorhusTsconfig,xml2Js){\n\n})","completion":" import vegaParser from 'vega-parser'\nimport tslintPluginPrettier from 'tslint-plugin-prettier'\nimport hashish from 'hashish'\nimport verup from 'verup'\nimport tr46 from 'tr46'\nimport getStream from 'get-stream'\nimport vegaTime from 'vega-time'\nimport gulpInsert from 'gulp-insert'\nimport vegaScale from 'vega-scale'\nimport vegaFunctions from 'vega-functions'\nimport vegaHierarchy from 'vega-hierarchy'\nimport typesTape from '@types\/tape'\nimport from from 'from'\nimport vegaLoader from 'vega-loader'\nimport vinyl from 'vinyl'\nimport typesGulp from '@types\/gulp'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport xml2Js from 'xml2js'\n\n"}
{"prompt":"define(['highlight.js','d3-force','vega-canvas','eslint-plugin-no-null','vows','browser-sync','vega-encode'], function(highlightJs,d3Force,vegaCanvas,eslintPluginNoNull,vows,browserSync,vegaEncode){\n\n})","completion":" import highlightJs from 'highlight.js'\nimport d3Force from 'd3-force'\nimport vegaCanvas from 'vega-canvas'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport vows from 'vows'\nimport browserSync from 'browser-sync'\nimport vegaEncode from 'vega-encode'\n\n"}
{"prompt":"define(['vega-view-transforms','detect-indent','path','vega-crossfilter','pretty-quick','tslint-test-config-non-relative','@octokit\/rest'], function(vegaViewTransforms,detectIndent,path,vegaCrossfilter,prettyQuick,tslintTestConfigNonRelative,octokitRest){\n\n})","completion":" import vegaViewTransforms from 'vega-view-transforms'\nimport detectIndent from 'detect-indent'\nimport path from 'path'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport prettyQuick from 'pretty-quick'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport octokitRest from '@octokit\/rest'\n\n"}
{"prompt":"define(['tslint-consistent-codestyle','@types\/gulp','ini','rollup-plugin-bundle-size','vega-event-selector','svg2png-many','npm-packlist','detect-indent','@tsconfig\/node10','tslint-config-prettier','webidl2js','start-server-and-test','decamelize'], function(tslintConsistentCodestyle,typesGulp,ini,rollupPluginBundleSize,vegaEventSelector,svg2PngMany,npmPacklist,detectIndent,tsconfigNode10,tslintConfigPrettier,webidl2Js,startServerAndTest,decamelize){\n\n})","completion":" import tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport typesGulp from '@types\/gulp'\nimport ini from 'ini'\nimport rollupPluginBundleSize from 'rollup-plugin-bundle-size'\nimport vegaEventSelector from 'vega-event-selector'\nimport svg2PngMany from 'svg2png-many'\nimport npmPacklist from 'npm-packlist'\nimport detectIndent from 'detect-indent'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport tslintConfigPrettier from 'tslint-config-prettier'\nimport webidl2Js from 'webidl2js'\nimport startServerAndTest from 'start-server-and-test'\nimport decamelize from 'decamelize'\n\n"}
{"prompt":"define(['@swc\/wasm','json-stringify-pretty-compact','ntypescript'], function(swcWasm,jsonStringifyPrettyCompact,ntypescript){\n\n})","completion":" import swcWasm from '@swc\/wasm'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport ntypescript from 'ntypescript'\n\n"}
{"prompt":"define(['@sindresorhus\/tsconfig','@types\/minimist','rollup-plugin-sourcemaps','ts-json-schema-generator','merge2','vega-loader','promise-polyfill','@types\/gulp-sourcemaps','@types\/proper-lockfile','@types\/clone','@types\/babel__code-frame','vega-event-selector','ignore','d3-scale','vega-transforms'], function(sindresorhusTsconfig,typesMinimist,rollupPluginSourcemaps,tsJsonSchemaGenerator,merge2,vegaLoader,promisePolyfill,typesGulpSourcemaps,typesProperLockfile,typesClone,typesBabelCodeFrame,vegaEventSelector,ignore,d3Scale,vegaTransforms){\n\n})","completion":" import sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport typesMinimist from '@types\/minimist'\nimport rollupPluginSourcemaps from 'rollup-plugin-sourcemaps'\nimport tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport merge2 from 'merge2'\nimport vegaLoader from 'vega-loader'\nimport promisePolyfill from 'promise-polyfill'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport typesClone from '@types\/clone'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport vegaEventSelector from 'vega-event-selector'\nimport ignore from 'ignore'\nimport d3Scale from 'd3-scale'\nimport vegaTransforms from 'vega-transforms'\n\n"}
{"prompt":"define(['verup','camelcase','@types\/mkdirp','yarn-deduplicate','merge2','vega-event-selector','jest-t-assert','memfs','vega-loader'], function(verup,camelcase,typesMkdirp,yarnDeduplicate,merge2,vegaEventSelector,jestTAssert,memfs,vegaLoader){\n\n})","completion":" import verup from 'verup'\nimport camelcase from 'camelcase'\nimport typesMkdirp from '@types\/mkdirp'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport merge2 from 'merge2'\nimport vegaEventSelector from 'vega-event-selector'\nimport jestTAssert from 'jest-t-assert'\nimport memfs from 'memfs'\nimport vegaLoader from 'vega-loader'\n\n"}
{"prompt":"define(['get-stream','arg','vinyl','yarn-deduplicate','@types\/q','gulp-concat','webidl2js','vega-loader','vega-dataflow','homedir-polyfill','@types\/tape','vega-projection','@types\/npm-packlist','unicode-property-aliases-ecmascript','hashish'], function(getStream,arg,vinyl,yarnDeduplicate,typesQ,gulpConcat,webidl2Js,vegaLoader,vegaDataflow,homedirPolyfill,typesTape,vegaProjection,typesNpmPacklist,unicodePropertyAliasesEcmascript,hashish){\n\n})","completion":" import getStream from 'get-stream'\nimport arg from 'arg'\nimport vinyl from 'vinyl'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport typesQ from '@types\/q'\nimport gulpConcat from 'gulp-concat'\nimport webidl2Js from 'webidl2js'\nimport vegaLoader from 'vega-loader'\nimport vegaDataflow from 'vega-dataflow'\nimport homedirPolyfill from 'homedir-polyfill'\nimport typesTape from '@types\/tape'\nimport vegaProjection from 'vega-projection'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport hashish from 'hashish'\n\n"}
{"prompt":"define(['typescript-json-schema','stream-spec','jest-canvas-mock','@types\/fast-json-stable-stringify','rxjs','webidl-conversions','throat','cliui','unicode-property-value-aliases-ecmascript','vega-selections','require-directory'], function(typescriptJsonSchema,streamSpec,jestCanvasMock,typesFastJsonStableStringify,rxjs,webidlConversions,throat,cliui,unicodePropertyValueAliasesEcmascript,vegaSelections,requireDirectory){\n\n})","completion":" import typescriptJsonSchema from 'typescript-json-schema'\nimport streamSpec from 'stream-spec'\nimport jestCanvasMock from 'jest-canvas-mock'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport rxjs from 'rxjs'\nimport webidlConversions from 'webidl-conversions'\nimport throat from 'throat'\nimport cliui from 'cliui'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport vegaSelections from 'vega-selections'\nimport requireDirectory from 'require-directory'\n\n"}
{"prompt":"define(['@types\/minimist','vega-event-selector','os-tmpdir','@types\/puppeteer','yargs-test-extends','@types\/merge2'], function(typesMinimist,vegaEventSelector,osTmpdir,typesPuppeteer,yargsTestExtends,typesMerge2){\n\n})","completion":" import typesMinimist from '@types\/minimist'\nimport vegaEventSelector from 'vega-event-selector'\nimport osTmpdir from 'os-tmpdir'\nimport typesPuppeteer from '@types\/puppeteer'\nimport yargsTestExtends from 'yargs-test-extends'\nimport typesMerge2 from '@types\/merge2'\n\n"}
{"prompt":"define(['vega-crossfilter','ts-json-schema-generator','safe-regex','fast-json-patch','v8-compile-cache-lib','d3-shape','eslint-plugin-github','yargs-parser','vows','@types\/fs-extra','dprint','@tsconfig\/node16'], function(vegaCrossfilter,tsJsonSchemaGenerator,safeRegex,fastJsonPatch,v8CompileCacheLib,d3Shape,eslintPluginGithub,yargsParser,vows,typesFsExtra,dprint,tsconfigNode16){\n\n})","completion":" import vegaCrossfilter from 'vega-crossfilter'\nimport tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport safeRegex from 'safe-regex'\nimport fastJsonPatch from 'fast-json-patch'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport d3Shape from 'd3-shape'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport yargsParser from 'yargs-parser'\nimport vows from 'vows'\nimport typesFsExtra from '@types\/fs-extra'\nimport dprint from 'dprint'\nimport tsconfigNode16 from '@tsconfig\/node16'\n\n"}
{"prompt":"define(['jest-puppeteer','detect-indent','svg2png-many','vega-loader','@types\/proxyquire','d3-force','tslint-config-prettier'], function(jestPuppeteer,detectIndent,svg2PngMany,vegaLoader,typesProxyquire,d3Force,tslintConfigPrettier){\n\n})","completion":" import jestPuppeteer from 'jest-puppeteer'\nimport detectIndent from 'detect-indent'\nimport svg2PngMany from 'svg2png-many'\nimport vegaLoader from 'vega-loader'\nimport typesProxyquire from '@types\/proxyquire'\nimport d3Force from 'd3-force'\nimport tslintConfigPrettier from 'tslint-config-prettier'\n\n"}
{"prompt":"define(['@types\/source-map-support','xml2js','gulp-insert','dts-jest','vega-schema','array-flat-polyfill','vows','@types\/gulp-concat','v8-compile-cache-lib','d3-geo-projection','arg','@types\/fs-extra','@cspotcode\/source-map-support','@tsconfig\/node14','detect-indent','d3','@types\/proper-lockfile','which-boxed-primitive'], function(typesSourceMapSupport,xml2Js,gulpInsert,dtsJest,vegaSchema,arrayFlatPolyfill,vows,typesGulpConcat,v8CompileCacheLib,d3GeoProjection,arg,typesFsExtra,cspotcodeSourceMapSupport,tsconfigNode14,detectIndent,d3,typesProperLockfile,whichBoxedPrimitive){\n\n})","completion":" import typesSourceMapSupport from '@types\/source-map-support'\nimport xml2Js from 'xml2js'\nimport gulpInsert from 'gulp-insert'\nimport dtsJest from 'dts-jest'\nimport vegaSchema from 'vega-schema'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport vows from 'vows'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport d3GeoProjection from 'd3-geo-projection'\nimport arg from 'arg'\nimport typesFsExtra from '@types\/fs-extra'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport tsconfigNode14 from '@tsconfig\/node14'\nimport detectIndent from 'detect-indent'\nimport d3 from 'd3'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\n\n"}
{"prompt":"define(['builtin-modules','@tsconfig\/node10','vega-util','jest-puppeteer','is-boolean-object','@tsconfig\/node12','detect-indent','pretty-quick','js-yaml','vega-encode','gulp-concat','gulp-newer','which-boxed-primitive','@types\/gulp-sourcemaps','homedir-polyfill'], function(builtinModules,tsconfigNode10,vegaUtil,jestPuppeteer,isBooleanObject,tsconfigNode12,detectIndent,prettyQuick,jsYaml,vegaEncode,gulpConcat,gulpNewer,whichBoxedPrimitive,typesGulpSourcemaps,homedirPolyfill){\n\n})","completion":" import builtinModules from 'builtin-modules'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport vegaUtil from 'vega-util'\nimport jestPuppeteer from 'jest-puppeteer'\nimport isBooleanObject from 'is-boolean-object'\nimport tsconfigNode12 from '@tsconfig\/node12'\nimport detectIndent from 'detect-indent'\nimport prettyQuick from 'pretty-quick'\nimport jsYaml from 'js-yaml'\nimport vegaEncode from 'vega-encode'\nimport gulpConcat from 'gulp-concat'\nimport gulpNewer from 'gulp-newer'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport homedirPolyfill from 'homedir-polyfill'\n\n"}
{"prompt":"define(['@fimbul\/valtyr','d3','vega-schema','@cspotcode\/source-map-support','vega-dataflow'], function(fimbulValtyr,d3,vegaSchema,cspotcodeSourceMapSupport,vegaDataflow){\n\n})","completion":" import fimbulValtyr from '@fimbul\/valtyr'\nimport d3 from 'd3'\nimport vegaSchema from 'vega-schema'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport vegaDataflow from 'vega-dataflow'\n\n"}
{"prompt":"define(['@types\/gulp','rollup-plugin-cleanup','babel-plugin-trace','@types\/d3','@types\/tape'], function(typesGulp,rollupPluginCleanup,babelPluginTrace,typesD3,typesTape){\n\n})","completion":" import typesGulp from '@types\/gulp'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport babelPluginTrace from 'babel-plugin-trace'\nimport typesD3 from '@types\/d3'\nimport typesTape from '@types\/tape'\n\n"}
{"prompt":"define(['hashish','d3-geo-projection','rxjs','vega-schema-url-parser','vega-force','json-stringify-pretty-compact','vega-label','unicode-property-value-aliases-ecmascript','@types\/gulp-newer','jest-t-assert','eslint-plugin-github'], function(hashish,d3GeoProjection,rxjs,vegaSchemaUrlParser,vegaForce,jsonStringifyPrettyCompact,vegaLabel,unicodePropertyValueAliasesEcmascript,typesGulpNewer,jestTAssert,eslintPluginGithub){\n\n})","completion":" import hashish from 'hashish'\nimport d3GeoProjection from 'd3-geo-projection'\nimport rxjs from 'rxjs'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport vegaForce from 'vega-force'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport vegaLabel from 'vega-label'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport typesGulpNewer from '@types\/gulp-newer'\nimport jestTAssert from 'jest-t-assert'\nimport eslintPluginGithub from 'eslint-plugin-github'\n\n"}
{"prompt":"define(['vega-parser','yaml-front-matter','decamelize','vega-statistics','vega-runtime','ts-json-schema-generator','get-caller-file','tsutils','@types\/tape','rollup-plugin-cleanup','vega-view','ts-node-dev','eslint-plugin-github'], function(vegaParser,yamlFrontMatter,decamelize,vegaStatistics,vegaRuntime,tsJsonSchemaGenerator,getCallerFile,tsutils,typesTape,rollupPluginCleanup,vegaView,tsNodeDev,eslintPluginGithub){\n\n})","completion":" import vegaParser from 'vega-parser'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport decamelize from 'decamelize'\nimport vegaStatistics from 'vega-statistics'\nimport vegaRuntime from 'vega-runtime'\nimport tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport getCallerFile from 'get-caller-file'\nimport tsutils from 'tsutils'\nimport typesTape from '@types\/tape'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport vegaView from 'vega-view'\nimport tsNodeDev from 'ts-node-dev'\nimport eslintPluginGithub from 'eslint-plugin-github'\n\n"}
{"prompt":"define(['json-stringify-pretty-compact','@types\/ms','@types\/merge2','@tsconfig\/node12'], function(jsonStringifyPrettyCompact,typesMs,typesMerge2,tsconfigNode12){\n\n})","completion":" import jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport typesMs from '@types\/ms'\nimport typesMerge2 from '@types\/merge2'\nimport tsconfigNode12 from '@tsconfig\/node12'\n\n"}
{"prompt":"define(['vega-geo','vega-encode','vega-statistics','tslint-test-config-non-relative','os-tmpdir','@fimbul\/wotan','webidl-conversions','@types\/merge2'], function(vegaGeo,vegaEncode,vegaStatistics,tslintTestConfigNonRelative,osTmpdir,fimbulWotan,webidlConversions,typesMerge2){\n\n})","completion":" import vegaGeo from 'vega-geo'\nimport vegaEncode from 'vega-encode'\nimport vegaStatistics from 'vega-statistics'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport osTmpdir from 'os-tmpdir'\nimport fimbulWotan from '@fimbul\/wotan'\nimport webidlConversions from 'webidl-conversions'\nimport typesMerge2 from '@types\/merge2'\n\n"}
{"prompt":"define(['get-stream','proper-lockfile','vega-parser','vega-regression','tslint-plugin-prettier','vows','vega-typings','decamelize','d3-scale','vega-scenegraph','eslint-plugin-github','@types\/gulp','serve','@types\/diff','stream-spec','is-boolean-object','prex','vega-dataflow','webidl-conversions'], function(getStream,properLockfile,vegaParser,vegaRegression,tslintPluginPrettier,vows,vegaTypings,decamelize,d3Scale,vegaScenegraph,eslintPluginGithub,typesGulp,serve,typesDiff,streamSpec,isBooleanObject,prex,vegaDataflow,webidlConversions){\n\n})","completion":" import getStream from 'get-stream'\nimport properLockfile from 'proper-lockfile'\nimport vegaParser from 'vega-parser'\nimport vegaRegression from 'vega-regression'\nimport tslintPluginPrettier from 'tslint-plugin-prettier'\nimport vows from 'vows'\nimport vegaTypings from 'vega-typings'\nimport decamelize from 'decamelize'\nimport d3Scale from 'd3-scale'\nimport vegaScenegraph from 'vega-scenegraph'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport typesGulp from '@types\/gulp'\nimport serve from 'serve'\nimport typesDiff from '@types\/diff'\nimport streamSpec from 'stream-spec'\nimport isBooleanObject from 'is-boolean-object'\nimport prex from 'prex'\nimport vegaDataflow from 'vega-dataflow'\nimport webidlConversions from 'webidl-conversions'\n\n"}
{"prompt":"define(['gulp-sourcemaps','svg2png-many','@types\/d3','tr46','@yarnpkg\/fslib','from','@typescript-eslint\/experimental-utils','yarn-deduplicate','vega-typings','memfs','ts-json-schema-generator','vega-cli','vows','@types\/js-yaml','vinyl','require-directory','github-release-from-changelog'], function(gulpSourcemaps,svg2PngMany,typesD3,tr46,yarnpkgFslib,from,typescriptEslintExperimentalUtils,yarnDeduplicate,vegaTypings,memfs,tsJsonSchemaGenerator,vegaCli,vows,typesJsYaml,vinyl,requireDirectory,githubReleaseFromChangelog){\n\n})","completion":" import gulpSourcemaps from 'gulp-sourcemaps'\nimport svg2PngMany from 'svg2png-many'\nimport typesD3 from '@types\/d3'\nimport tr46 from 'tr46'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport from from 'from'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport vegaTypings from 'vega-typings'\nimport memfs from 'memfs'\nimport tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport vegaCli from 'vega-cli'\nimport vows from 'vows'\nimport typesJsYaml from '@types\/js-yaml'\nimport vinyl from 'vinyl'\nimport requireDirectory from 'require-directory'\nimport githubReleaseFromChangelog from 'github-release-from-changelog'\n\n"}
{"prompt":"define(['cliui','typescript-tslint-plugin','isexe','xml2js','create-require','vega-functions','vega-wordcloud','vega-scale','d3-geo-projection','vows','@types\/puppeteer','jest-puppeteer','vega-lite-dev-config','@types\/source-map-support'], function(cliui,typescriptTslintPlugin,isexe,xml2Js,createRequire,vegaFunctions,vegaWordcloud,vegaScale,d3GeoProjection,vows,typesPuppeteer,jestPuppeteer,vegaLiteDevConfig,typesSourceMapSupport){\n\n})","completion":" import cliui from 'cliui'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport isexe from 'isexe'\nimport xml2Js from 'xml2js'\nimport createRequire from 'create-require'\nimport vegaFunctions from 'vega-functions'\nimport vegaWordcloud from 'vega-wordcloud'\nimport vegaScale from 'vega-scale'\nimport d3GeoProjection from 'd3-geo-projection'\nimport vows from 'vows'\nimport typesPuppeteer from '@types\/puppeteer'\nimport jestPuppeteer from 'jest-puppeteer'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport typesSourceMapSupport from '@types\/source-map-support'\n\n"}
{"prompt":"define(['@tsconfig\/node12','@types\/clone','vega-loader','prex','homedir-polyfill','node-sass','vega-event-selector','gulp-insert','dts-jest','which-boxed-primitive','ini','is-number-object','yargs-test-extends','azure-devops-node-api','vega-functions','@cspotcode\/source-map-support'], function(tsconfigNode12,typesClone,vegaLoader,prex,homedirPolyfill,nodeSass,vegaEventSelector,gulpInsert,dtsJest,whichBoxedPrimitive,ini,isNumberObject,yargsTestExtends,azureDevopsNodeApi,vegaFunctions,cspotcodeSourceMapSupport){\n\n})","completion":" import tsconfigNode12 from '@tsconfig\/node12'\nimport typesClone from '@types\/clone'\nimport vegaLoader from 'vega-loader'\nimport prex from 'prex'\nimport homedirPolyfill from 'homedir-polyfill'\nimport nodeSass from 'node-sass'\nimport vegaEventSelector from 'vega-event-selector'\nimport gulpInsert from 'gulp-insert'\nimport dtsJest from 'dts-jest'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport ini from 'ini'\nimport isNumberObject from 'is-number-object'\nimport yargsTestExtends from 'yargs-test-extends'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport vegaFunctions from 'vega-functions'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\n\n"}
{"prompt":"define(['verup','vega-runtime','rxjs','vega-schema','vega-themes','d3-hierarchy','vega-crossfilter','fancy-log','@types\/clone','@types\/gulp-sourcemaps','@types\/ms','@types\/react','vega-parser','path','fast-json-patch','@types\/merge2','from','vega-canvas'], function(verup,vegaRuntime,rxjs,vegaSchema,vegaThemes,d3Hierarchy,vegaCrossfilter,fancyLog,typesClone,typesGulpSourcemaps,typesMs,typesReact,vegaParser,path,fastJsonPatch,typesMerge2,from,vegaCanvas){\n\n})","completion":" import verup from 'verup'\nimport vegaRuntime from 'vega-runtime'\nimport rxjs from 'rxjs'\nimport vegaSchema from 'vega-schema'\nimport vegaThemes from 'vega-themes'\nimport d3Hierarchy from 'd3-hierarchy'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport fancyLog from 'fancy-log'\nimport typesClone from '@types\/clone'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport typesMs from '@types\/ms'\nimport typesReact from '@types\/react'\nimport vegaParser from 'vega-parser'\nimport path from 'path'\nimport fastJsonPatch from 'fast-json-patch'\nimport typesMerge2 from '@types\/merge2'\nimport from from 'from'\nimport vegaCanvas from 'vega-canvas'\n\n"}
{"prompt":"define(['@types\/gulp-newer','@types\/proper-lockfile','detect-indent','stream-spec','vega-view','highlight.js','vega-loader','rollup-plugin-bundle-size','yarn-deduplicate','is-boolean-object','microbundle','@types\/source-map-support','vega-cli','@swc\/wasm','@types\/tape','vega-dataflow','acorn-walk'], function(typesGulpNewer,typesProperLockfile,detectIndent,streamSpec,vegaView,highlightJs,vegaLoader,rollupPluginBundleSize,yarnDeduplicate,isBooleanObject,microbundle,typesSourceMapSupport,vegaCli,swcWasm,typesTape,vegaDataflow,acornWalk){\n\n})","completion":" import typesGulpNewer from '@types\/gulp-newer'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport detectIndent from 'detect-indent'\nimport streamSpec from 'stream-spec'\nimport vegaView from 'vega-view'\nimport highlightJs from 'highlight.js'\nimport vegaLoader from 'vega-loader'\nimport rollupPluginBundleSize from 'rollup-plugin-bundle-size'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport isBooleanObject from 'is-boolean-object'\nimport microbundle from 'microbundle'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport vegaCli from 'vega-cli'\nimport swcWasm from '@swc\/wasm'\nimport typesTape from '@types\/tape'\nimport vegaDataflow from 'vega-dataflow'\nimport acornWalk from 'acorn-walk'\n\n"}
{"prompt":"define(['vega-loader','gulp-insert','json-stringify-pretty-compact','@types\/q','@types\/fast-json-stable-stringify','cpr','@types\/xml2js'], function(vegaLoader,gulpInsert,jsonStringifyPrettyCompact,typesQ,typesFastJsonStableStringify,cpr,typesXml2Js){\n\n})","completion":" import vegaLoader from 'vega-loader'\nimport gulpInsert from 'gulp-insert'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport typesQ from '@types\/q'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport cpr from 'cpr'\nimport typesXml2Js from '@types\/xml2js'\n\n"}
{"prompt":"define(['dts-jest','vinyl-sourcemaps-apply','@types\/diff','require-directory'], function(dtsJest,vinylSourcemapsApply,typesDiff,requireDirectory){\n\n})","completion":" import dtsJest from 'dts-jest'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport typesDiff from '@types\/diff'\nimport requireDirectory from 'require-directory'\n\n"}
{"prompt":"define(['yargs-test-extends','flow-parser','xml2js','arg','@types\/puppeteer','@tsconfig\/node10','@types\/q','webidl2js','eslint-plugin-no-null','from','vinyl','colortape','detect-indent','yn','@tsconfig\/node16','@types\/diff','vega-loader','vega-wordcloud','acorn-walk','eslint-config-lydell'], function(yargsTestExtends,flowParser,xml2Js,arg,typesPuppeteer,tsconfigNode10,typesQ,webidl2Js,eslintPluginNoNull,from,vinyl,colortape,detectIndent,yn,tsconfigNode16,typesDiff,vegaLoader,vegaWordcloud,acornWalk,eslintConfigLydell){\n\n})","completion":" import yargsTestExtends from 'yargs-test-extends'\nimport flowParser from 'flow-parser'\nimport xml2Js from 'xml2js'\nimport arg from 'arg'\nimport typesPuppeteer from '@types\/puppeteer'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport typesQ from '@types\/q'\nimport webidl2Js from 'webidl2js'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport from from 'from'\nimport vinyl from 'vinyl'\nimport colortape from 'colortape'\nimport detectIndent from 'detect-indent'\nimport yn from 'yn'\nimport tsconfigNode16 from '@tsconfig\/node16'\nimport typesDiff from '@types\/diff'\nimport vegaLoader from 'vega-loader'\nimport vegaWordcloud from 'vega-wordcloud'\nimport acornWalk from 'acorn-walk'\nimport eslintConfigLydell from 'eslint-config-lydell'\n\n"}
{"prompt":"define(['vega-wordcloud','@types\/fs-extra','vinyl-sourcemaps-apply','mocha-fivemat-progress-reporter','yn','vega-statistics'], function(vegaWordcloud,typesFsExtra,vinylSourcemapsApply,mochaFivematProgressReporter,yn,vegaStatistics){\n\n})","completion":" import vegaWordcloud from 'vega-wordcloud'\nimport typesFsExtra from '@types\/fs-extra'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport mochaFivematProgressReporter from 'mocha-fivemat-progress-reporter'\nimport yn from 'yn'\nimport vegaStatistics from 'vega-statistics'\n\n"}
{"prompt":"define(['mocha-fivemat-progress-reporter','gulp-concat','tr46','@types\/tape','vega-scale','hashish','path'], function(mochaFivematProgressReporter,gulpConcat,tr46,typesTape,vegaScale,hashish,path){\n\n})","completion":" import mochaFivematProgressReporter from 'mocha-fivemat-progress-reporter'\nimport gulpConcat from 'gulp-concat'\nimport tr46 from 'tr46'\nimport typesTape from '@types\/tape'\nimport vegaScale from 'vega-scale'\nimport hashish from 'hashish'\nimport path from 'path'\n\n"}
{"prompt":"define(['vega-projection'], function(vegaProjection){\n\n})","completion":" import vegaProjection from 'vega-projection'\n\n"}
{"prompt":"define(['vega-scale','@yarnpkg\/fslib','vega-projection','rollup-plugin-sourcemaps','@types\/clone','unicode-property-value-aliases-ecmascript','eslint-plugin-no-null','@types\/npm-packlist','vega-geo','require-main-filename','vega-util','d3-hierarchy','stream-spec','path','require-directory','is-number-object'], function(vegaScale,yarnpkgFslib,vegaProjection,rollupPluginSourcemaps,typesClone,unicodePropertyValueAliasesEcmascript,eslintPluginNoNull,typesNpmPacklist,vegaGeo,requireMainFilename,vegaUtil,d3Hierarchy,streamSpec,path,requireDirectory,isNumberObject){\n\n})","completion":" import vegaScale from 'vega-scale'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport vegaProjection from 'vega-projection'\nimport rollupPluginSourcemaps from 'rollup-plugin-sourcemaps'\nimport typesClone from '@types\/clone'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport vegaGeo from 'vega-geo'\nimport requireMainFilename from 'require-main-filename'\nimport vegaUtil from 'vega-util'\nimport d3Hierarchy from 'd3-hierarchy'\nimport streamSpec from 'stream-spec'\nimport path from 'path'\nimport requireDirectory from 'require-directory'\nimport isNumberObject from 'is-number-object'\n\n"}
{"prompt":"define(['hashish','@types\/gulp-concat','flow-parser','jest-t-assert'], function(hashish,typesGulpConcat,flowParser,jestTAssert){\n\n})","completion":" import hashish from 'hashish'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport flowParser from 'flow-parser'\nimport jestTAssert from 'jest-t-assert'\n\n"}
{"prompt":"define(['util.promisify','vega-format','vega-expression','merge2','@types\/babel__code-frame','dts-jest','os-tmpdir','throat','xml2js','@types\/fs-extra','npm-packlist','tsutils','d3-scale','ts-clean-built'], function(utilPromisify,vegaFormat,vegaExpression,merge2,typesBabelCodeFrame,dtsJest,osTmpdir,throat,xml2Js,typesFsExtra,npmPacklist,tsutils,d3Scale,tsCleanBuilt){\n\n})","completion":" import utilPromisify from 'util.promisify'\nimport vegaFormat from 'vega-format'\nimport vegaExpression from 'vega-expression'\nimport merge2 from 'merge2'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport dtsJest from 'dts-jest'\nimport osTmpdir from 'os-tmpdir'\nimport throat from 'throat'\nimport xml2Js from 'xml2js'\nimport typesFsExtra from '@types\/fs-extra'\nimport npmPacklist from 'npm-packlist'\nimport tsutils from 'tsutils'\nimport d3Scale from 'd3-scale'\nimport tsCleanBuilt from 'ts-clean-built'\n\n"}
{"prompt":"define(['require-main-filename'], function(requireMainFilename){\n\n})","completion":" import requireMainFilename from 'require-main-filename'\n\n"}
{"prompt":"define(['d3-hierarchy'], function(d3Hierarchy){\n\n})","completion":" import d3Hierarchy from 'd3-hierarchy'\n\n"}
{"prompt":"define(['@types\/mkdirp','@tsconfig\/node12','ini','@fimbul\/valtyr','dts-jest','vega-datasets','vega-regression','@types\/diff','require-directory','yargs-test-extends','@types\/tape','flow-parser','xml2js'], function(typesMkdirp,tsconfigNode12,ini,fimbulValtyr,dtsJest,vegaDatasets,vegaRegression,typesDiff,requireDirectory,yargsTestExtends,typesTape,flowParser,xml2Js){\n\n})","completion":" import typesMkdirp from '@types\/mkdirp'\nimport tsconfigNode12 from '@tsconfig\/node12'\nimport ini from 'ini'\nimport fimbulValtyr from '@fimbul\/valtyr'\nimport dtsJest from 'dts-jest'\nimport vegaDatasets from 'vega-datasets'\nimport vegaRegression from 'vega-regression'\nimport typesDiff from '@types\/diff'\nimport requireDirectory from 'require-directory'\nimport yargsTestExtends from 'yargs-test-extends'\nimport typesTape from '@types\/tape'\nimport flowParser from 'flow-parser'\nimport xml2Js from 'xml2js'\n\n"}
{"prompt":"define(['@types\/gulp','tslint-config-prettier','rollup-plugin-sourcemaps','verup','@types\/react','prex','d3-delaunay','create-require','d3-scale','vows','tsutils','@cspotcode\/source-map-support','@fimbul\/wotan'], function(typesGulp,tslintConfigPrettier,rollupPluginSourcemaps,verup,typesReact,prex,d3Delaunay,createRequire,d3Scale,vows,tsutils,cspotcodeSourceMapSupport,fimbulWotan){\n\n})","completion":" import typesGulp from '@types\/gulp'\nimport tslintConfigPrettier from 'tslint-config-prettier'\nimport rollupPluginSourcemaps from 'rollup-plugin-sourcemaps'\nimport verup from 'verup'\nimport typesReact from '@types\/react'\nimport prex from 'prex'\nimport d3Delaunay from 'd3-delaunay'\nimport createRequire from 'create-require'\nimport d3Scale from 'd3-scale'\nimport vows from 'vows'\nimport tsutils from 'tsutils'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport fimbulWotan from '@fimbul\/wotan'\n\n"}
{"prompt":"define(['vega-typings','d3-force','vega-loader','@types\/js-yaml','@types\/gulp-sourcemaps','common-tags','vega-event-selector','@microsoft\/api-extractor','vega-regression','vega-format','vega-functions','unicode-property-aliases-ecmascript','fast-json-patch','yaml-front-matter','from'], function(vegaTypings,d3Force,vegaLoader,typesJsYaml,typesGulpSourcemaps,commonTags,vegaEventSelector,microsoftApiExtractor,vegaRegression,vegaFormat,vegaFunctions,unicodePropertyAliasesEcmascript,fastJsonPatch,yamlFrontMatter,from){\n\n})","completion":" import vegaTypings from 'vega-typings'\nimport d3Force from 'd3-force'\nimport vegaLoader from 'vega-loader'\nimport typesJsYaml from '@types\/js-yaml'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport commonTags from 'common-tags'\nimport vegaEventSelector from 'vega-event-selector'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\nimport vegaRegression from 'vega-regression'\nimport vegaFormat from 'vega-format'\nimport vegaFunctions from 'vega-functions'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport fastJsonPatch from 'fast-json-patch'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport from from 'from'\n\n"}
{"prompt":"define(['@tsconfig\/node10','js-yaml','@typescript-eslint\/experimental-utils','vega-parser','d3-scale','vega-datasets','vega-label','d3-shape','y18n','get-stream','@types\/js-yaml','vega-view-transforms','safe-regex'], function(tsconfigNode10,jsYaml,typescriptEslintExperimentalUtils,vegaParser,d3Scale,vegaDatasets,vegaLabel,d3Shape,y18N,getStream,typesJsYaml,vegaViewTransforms,safeRegex){\n\n})","completion":" import tsconfigNode10 from '@tsconfig\/node10'\nimport jsYaml from 'js-yaml'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport vegaParser from 'vega-parser'\nimport d3Scale from 'd3-scale'\nimport vegaDatasets from 'vega-datasets'\nimport vegaLabel from 'vega-label'\nimport d3Shape from 'd3-shape'\nimport y18N from 'y18n'\nimport getStream from 'get-stream'\nimport typesJsYaml from '@types\/js-yaml'\nimport vegaViewTransforms from 'vega-view-transforms'\nimport safeRegex from 'safe-regex'\n\n"}
{"prompt":"define(['get-caller-file','vega-selections','vega-expression','webidl-conversions','npm-packlist','v8-compile-cache-lib','make-error'], function(getCallerFile,vegaSelections,vegaExpression,webidlConversions,npmPacklist,v8CompileCacheLib,makeError){\n\n})","completion":" import getCallerFile from 'get-caller-file'\nimport vegaSelections from 'vega-selections'\nimport vegaExpression from 'vega-expression'\nimport webidlConversions from 'webidl-conversions'\nimport npmPacklist from 'npm-packlist'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport makeError from 'make-error'\n\n"}
{"prompt":"define(['jest-canvas-mock','throat','eslint-config-lydell','path','xml2js','d3-shape','y18n','webidl2js','vega-runtime','gulp-newer','require-directory'], function(jestCanvasMock,throat,eslintConfigLydell,path,xml2Js,d3Shape,y18N,webidl2Js,vegaRuntime,gulpNewer,requireDirectory){\n\n})","completion":" import jestCanvasMock from 'jest-canvas-mock'\nimport throat from 'throat'\nimport eslintConfigLydell from 'eslint-config-lydell'\nimport path from 'path'\nimport xml2Js from 'xml2js'\nimport d3Shape from 'd3-shape'\nimport y18N from 'y18n'\nimport webidl2Js from 'webidl2js'\nimport vegaRuntime from 'vega-runtime'\nimport gulpNewer from 'gulp-newer'\nimport requireDirectory from 'require-directory'\n\n"}
{"prompt":"define(['@fimbul\/valtyr','@types\/tape','@types\/source-map-support','dts-jest','prex','d3-hierarchy','@octokit\/rest','cpr','@cspotcode\/source-map-support','is-bigint','vinyl','vega-transforms','@types\/fast-json-stable-stringify','serve','yargs-parser'], function(fimbulValtyr,typesTape,typesSourceMapSupport,dtsJest,prex,d3Hierarchy,octokitRest,cpr,cspotcodeSourceMapSupport,isBigint,vinyl,vegaTransforms,typesFastJsonStableStringify,serve,yargsParser){\n\n})","completion":" import fimbulValtyr from '@fimbul\/valtyr'\nimport typesTape from '@types\/tape'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport dtsJest from 'dts-jest'\nimport prex from 'prex'\nimport d3Hierarchy from 'd3-hierarchy'\nimport octokitRest from '@octokit\/rest'\nimport cpr from 'cpr'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport isBigint from 'is-bigint'\nimport vinyl from 'vinyl'\nimport vegaTransforms from 'vega-transforms'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport serve from 'serve'\nimport yargsParser from 'yargs-parser'\n\n"}
{"prompt":"define(['@octokit\/rest'], function(octokitRest){\n\n})","completion":" import octokitRest from '@octokit\/rest'\n\n"}
{"prompt":"define(['camelcase','@types\/gulp','vega-label','vega-schema','d3','vega-runtime','d3-geo-projection','merge2','node-sass','vega-wordcloud','@types\/fast-json-stable-stringify','@cspotcode\/source-map-support','@types\/react','vega-functions','eslint-config-lydell'], function(camelcase,typesGulp,vegaLabel,vegaSchema,d3,vegaRuntime,d3GeoProjection,merge2,nodeSass,vegaWordcloud,typesFastJsonStableStringify,cspotcodeSourceMapSupport,typesReact,vegaFunctions,eslintConfigLydell){\n\n})","completion":" import camelcase from 'camelcase'\nimport typesGulp from '@types\/gulp'\nimport vegaLabel from 'vega-label'\nimport vegaSchema from 'vega-schema'\nimport d3 from 'd3'\nimport vegaRuntime from 'vega-runtime'\nimport d3GeoProjection from 'd3-geo-projection'\nimport merge2 from 'merge2'\nimport nodeSass from 'node-sass'\nimport vegaWordcloud from 'vega-wordcloud'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport typesReact from '@types\/react'\nimport vegaFunctions from 'vega-functions'\nimport eslintConfigLydell from 'eslint-config-lydell'\n\n"}
{"prompt":"define(['os-tmpdir','ini','typescript-json-schema','@octokit\/rest','stream-spec','vega-regression','github-release-from-changelog','vega-hierarchy','eslint-plugin-no-null','mocha-fivemat-progress-reporter','hashish','acorn-walk','is-boolean-object','vega-themes','tslint-config-prettier','@types\/q','pretty-quick'], function(osTmpdir,ini,typescriptJsonSchema,octokitRest,streamSpec,vegaRegression,githubReleaseFromChangelog,vegaHierarchy,eslintPluginNoNull,mochaFivematProgressReporter,hashish,acornWalk,isBooleanObject,vegaThemes,tslintConfigPrettier,typesQ,prettyQuick){\n\n})","completion":" import osTmpdir from 'os-tmpdir'\nimport ini from 'ini'\nimport typescriptJsonSchema from 'typescript-json-schema'\nimport octokitRest from '@octokit\/rest'\nimport streamSpec from 'stream-spec'\nimport vegaRegression from 'vega-regression'\nimport githubReleaseFromChangelog from 'github-release-from-changelog'\nimport vegaHierarchy from 'vega-hierarchy'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport mochaFivematProgressReporter from 'mocha-fivemat-progress-reporter'\nimport hashish from 'hashish'\nimport acornWalk from 'acorn-walk'\nimport isBooleanObject from 'is-boolean-object'\nimport vegaThemes from 'vega-themes'\nimport tslintConfigPrettier from 'tslint-config-prettier'\nimport typesQ from '@types\/q'\nimport prettyQuick from 'pretty-quick'\n\n"}
{"prompt":"define(['is-bigint','vega-geo','throat','vega-hierarchy','vega-crossfilter','serve','yargs-parser','common-tags','@types\/gulp','@types\/react','vega-canvas','isexe','tsutils','yargs-test-extends','vega-lite-dev-config','jest-puppeteer','get-caller-file'], function(isBigint,vegaGeo,throat,vegaHierarchy,vegaCrossfilter,serve,yargsParser,commonTags,typesGulp,typesReact,vegaCanvas,isexe,tsutils,yargsTestExtends,vegaLiteDevConfig,jestPuppeteer,getCallerFile){\n\n})","completion":" import isBigint from 'is-bigint'\nimport vegaGeo from 'vega-geo'\nimport throat from 'throat'\nimport vegaHierarchy from 'vega-hierarchy'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport serve from 'serve'\nimport yargsParser from 'yargs-parser'\nimport commonTags from 'common-tags'\nimport typesGulp from '@types\/gulp'\nimport typesReact from '@types\/react'\nimport vegaCanvas from 'vega-canvas'\nimport isexe from 'isexe'\nimport tsutils from 'tsutils'\nimport yargsTestExtends from 'yargs-test-extends'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport jestPuppeteer from 'jest-puppeteer'\nimport getCallerFile from 'get-caller-file'\n\n"}
{"prompt":"define(['yargs-test-extends','webidl2js','detect-indent','gulp-newer','vega-wordcloud','@types\/js-yaml','@types\/proper-lockfile','@types\/minimist','memfs','start-server-and-test','throat','builtin-modules','vega-themes','which-boxed-primitive','tslint-consistent-codestyle','fast-json-patch','recast','ts-node-dev'], function(yargsTestExtends,webidl2Js,detectIndent,gulpNewer,vegaWordcloud,typesJsYaml,typesProperLockfile,typesMinimist,memfs,startServerAndTest,throat,builtinModules,vegaThemes,whichBoxedPrimitive,tslintConsistentCodestyle,fastJsonPatch,recast,tsNodeDev){\n\n})","completion":" import yargsTestExtends from 'yargs-test-extends'\nimport webidl2Js from 'webidl2js'\nimport detectIndent from 'detect-indent'\nimport gulpNewer from 'gulp-newer'\nimport vegaWordcloud from 'vega-wordcloud'\nimport typesJsYaml from '@types\/js-yaml'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport typesMinimist from '@types\/minimist'\nimport memfs from 'memfs'\nimport startServerAndTest from 'start-server-and-test'\nimport throat from 'throat'\nimport builtinModules from 'builtin-modules'\nimport vegaThemes from 'vega-themes'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport fastJsonPatch from 'fast-json-patch'\nimport recast from 'recast'\nimport tsNodeDev from 'ts-node-dev'\n\n"}
{"prompt":"define(['vega-geo','colortape','is-boolean-object','@types\/q','safe-regex','vega-dataflow','@types\/gulp-sourcemaps','yargs-parser','ntypescript','@microsoft\/api-extractor','@tsconfig\/node12','has-ansi','d3','ts-transform-default-export','vega-schema','vega-util'], function(vegaGeo,colortape,isBooleanObject,typesQ,safeRegex,vegaDataflow,typesGulpSourcemaps,yargsParser,ntypescript,microsoftApiExtractor,tsconfigNode12,hasAnsi,d3,tsTransformDefaultExport,vegaSchema,vegaUtil){\n\n})","completion":" import vegaGeo from 'vega-geo'\nimport colortape from 'colortape'\nimport isBooleanObject from 'is-boolean-object'\nimport typesQ from '@types\/q'\nimport safeRegex from 'safe-regex'\nimport vegaDataflow from 'vega-dataflow'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport yargsParser from 'yargs-parser'\nimport ntypescript from 'ntypescript'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\nimport tsconfigNode12 from '@tsconfig\/node12'\nimport hasAnsi from 'has-ansi'\nimport d3 from 'd3'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport vegaSchema from 'vega-schema'\nimport vegaUtil from 'vega-util'\n\n"}
{"prompt":"define(['@types\/puppeteer','get-caller-file','@types\/npm-packlist','vega-regression','make-error','rxjs','array-flat-polyfill'], function(typesPuppeteer,getCallerFile,typesNpmPacklist,vegaRegression,makeError,rxjs,arrayFlatPolyfill){\n\n})","completion":" import typesPuppeteer from '@types\/puppeteer'\nimport getCallerFile from 'get-caller-file'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport vegaRegression from 'vega-regression'\nimport makeError from 'make-error'\nimport rxjs from 'rxjs'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\n\n"}
{"prompt":"define(['@types\/gulp-rename','vega-label','@types\/ms'], function(typesGulpRename,vegaLabel,typesMs){\n\n})","completion":" import typesGulpRename from '@types\/gulp-rename'\nimport vegaLabel from 'vega-label'\nimport typesMs from '@types\/ms'\n\n"}
{"prompt":"define(['ts-json-schema-generator','@swc\/wasm','vega-canvas','unicode-property-value-aliases-ecmascript','typescript-tslint-plugin','vinyl','hashish','@types\/clone','fancy-log','common-tags','is-boolean-object','vega-dataflow','@types\/q','ntypescript','vega-schema','has-ansi','vega-themes'], function(tsJsonSchemaGenerator,swcWasm,vegaCanvas,unicodePropertyValueAliasesEcmascript,typescriptTslintPlugin,vinyl,hashish,typesClone,fancyLog,commonTags,isBooleanObject,vegaDataflow,typesQ,ntypescript,vegaSchema,hasAnsi,vegaThemes){\n\n})","completion":" import tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport swcWasm from '@swc\/wasm'\nimport vegaCanvas from 'vega-canvas'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport vinyl from 'vinyl'\nimport hashish from 'hashish'\nimport typesClone from '@types\/clone'\nimport fancyLog from 'fancy-log'\nimport commonTags from 'common-tags'\nimport isBooleanObject from 'is-boolean-object'\nimport vegaDataflow from 'vega-dataflow'\nimport typesQ from '@types\/q'\nimport ntypescript from 'ntypescript'\nimport vegaSchema from 'vega-schema'\nimport hasAnsi from 'has-ansi'\nimport vegaThemes from 'vega-themes'\n\n"}
{"prompt":"define(['@types\/tape','arg','jest-t-assert','ignore','isexe'], function(typesTape,arg,jestTAssert,ignore,isexe){\n\n})","completion":" import typesTape from '@types\/tape'\nimport arg from 'arg'\nimport jestTAssert from 'jest-t-assert'\nimport ignore from 'ignore'\nimport isexe from 'isexe'\n\n"}
{"prompt":"define(['require-directory','ts-transform-default-export','vega-scenegraph','proper-lockfile','promise-polyfill','arg','gulp-concat','@swc\/wasm','browser-sync','util.promisify','has-ansi','@types\/clone','ts-json-schema-generator','vega-schema-url-parser','@types\/gulp-sourcemaps','typescript-tslint-plugin','@types\/gulp-concat','eslint-plugin-no-null'], function(requireDirectory,tsTransformDefaultExport,vegaScenegraph,properLockfile,promisePolyfill,arg,gulpConcat,swcWasm,browserSync,utilPromisify,hasAnsi,typesClone,tsJsonSchemaGenerator,vegaSchemaUrlParser,typesGulpSourcemaps,typescriptTslintPlugin,typesGulpConcat,eslintPluginNoNull){\n\n})","completion":" import requireDirectory from 'require-directory'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport vegaScenegraph from 'vega-scenegraph'\nimport properLockfile from 'proper-lockfile'\nimport promisePolyfill from 'promise-polyfill'\nimport arg from 'arg'\nimport gulpConcat from 'gulp-concat'\nimport swcWasm from '@swc\/wasm'\nimport browserSync from 'browser-sync'\nimport utilPromisify from 'util.promisify'\nimport hasAnsi from 'has-ansi'\nimport typesClone from '@types\/clone'\nimport tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\n\n"}
{"prompt":"define(['@types\/clone','require-main-filename','tslint-consistent-codestyle','@types\/fs-extra','vega-loader','@types\/merge2','dts-jest','@cspotcode\/source-map-support','vinyl','@types\/microsoft__typescript-etw','yarn','@typescript-eslint\/experimental-utils','ts-clean-built','@yarnpkg\/fslib','tslint-test-config-non-relative'], function(typesClone,requireMainFilename,tslintConsistentCodestyle,typesFsExtra,vegaLoader,typesMerge2,dtsJest,cspotcodeSourceMapSupport,vinyl,typesMicrosoftTypescriptEtw,yarn,typescriptEslintExperimentalUtils,tsCleanBuilt,yarnpkgFslib,tslintTestConfigNonRelative){\n\n})","completion":" import typesClone from '@types\/clone'\nimport requireMainFilename from 'require-main-filename'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport typesFsExtra from '@types\/fs-extra'\nimport vegaLoader from 'vega-loader'\nimport typesMerge2 from '@types\/merge2'\nimport dtsJest from 'dts-jest'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport vinyl from 'vinyl'\nimport typesMicrosoftTypescriptEtw from '@types\/microsoft__typescript-etw'\nimport yarn from 'yarn'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport tsCleanBuilt from 'ts-clean-built'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\n\n"}
{"prompt":"define(['ini','yn','azure-devops-node-api','ts-json-schema-generator','vega-view','gulp-insert','npm-packlist','which-boxed-primitive','@sindresorhus\/tsconfig','is-boolean-object','jest-puppeteer','common-tags','webidl-conversions'], function(ini,yn,azureDevopsNodeApi,tsJsonSchemaGenerator,vegaView,gulpInsert,npmPacklist,whichBoxedPrimitive,sindresorhusTsconfig,isBooleanObject,jestPuppeteer,commonTags,webidlConversions){\n\n})","completion":" import ini from 'ini'\nimport yn from 'yn'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport vegaView from 'vega-view'\nimport gulpInsert from 'gulp-insert'\nimport npmPacklist from 'npm-packlist'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport isBooleanObject from 'is-boolean-object'\nimport jestPuppeteer from 'jest-puppeteer'\nimport commonTags from 'common-tags'\nimport webidlConversions from 'webidl-conversions'\n\n"}
{"prompt":"define(['rxjs','yn','detect-indent','@tsconfig\/node16','verup','prex','vinyl','@swc\/wasm','tr46','yargs-parser','vega-view','json-stringify-pretty-compact','stream-spec','colortape','is-bigint','js-yaml','isexe','@microsoft\/api-extractor'], function(rxjs,yn,detectIndent,tsconfigNode16,verup,prex,vinyl,swcWasm,tr46,yargsParser,vegaView,jsonStringifyPrettyCompact,streamSpec,colortape,isBigint,jsYaml,isexe,microsoftApiExtractor){\n\n})","completion":" import rxjs from 'rxjs'\nimport yn from 'yn'\nimport detectIndent from 'detect-indent'\nimport tsconfigNode16 from '@tsconfig\/node16'\nimport verup from 'verup'\nimport prex from 'prex'\nimport vinyl from 'vinyl'\nimport swcWasm from '@swc\/wasm'\nimport tr46 from 'tr46'\nimport yargsParser from 'yargs-parser'\nimport vegaView from 'vega-view'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport streamSpec from 'stream-spec'\nimport colortape from 'colortape'\nimport isBigint from 'is-bigint'\nimport jsYaml from 'js-yaml'\nimport isexe from 'isexe'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\n\n"}
{"prompt":"define(['yarn-deduplicate','vega-themes','tr46','microbundle','vega-crossfilter','require-directory','vega-selections','promise-polyfill','@types\/q','@types\/minimist','vega-parser','make-error','@types\/source-map-support','vega-event-selector','vinyl-sourcemaps-apply'], function(yarnDeduplicate,vegaThemes,tr46,microbundle,vegaCrossfilter,requireDirectory,vegaSelections,promisePolyfill,typesQ,typesMinimist,vegaParser,makeError,typesSourceMapSupport,vegaEventSelector,vinylSourcemapsApply){\n\n})","completion":" import yarnDeduplicate from 'yarn-deduplicate'\nimport vegaThemes from 'vega-themes'\nimport tr46 from 'tr46'\nimport microbundle from 'microbundle'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport requireDirectory from 'require-directory'\nimport vegaSelections from 'vega-selections'\nimport promisePolyfill from 'promise-polyfill'\nimport typesQ from '@types\/q'\nimport typesMinimist from '@types\/minimist'\nimport vegaParser from 'vega-parser'\nimport makeError from 'make-error'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport vegaEventSelector from 'vega-event-selector'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\n\n"}
{"prompt":"define(['fancy-log','vega-scenegraph','@types\/minimist','cpr','vega-crossfilter','colortape','serve','@types\/mkdirp','homedir-polyfill','@types\/ms'], function(fancyLog,vegaScenegraph,typesMinimist,cpr,vegaCrossfilter,colortape,serve,typesMkdirp,homedirPolyfill,typesMs){\n\n})","completion":" import fancyLog from 'fancy-log'\nimport vegaScenegraph from 'vega-scenegraph'\nimport typesMinimist from '@types\/minimist'\nimport cpr from 'cpr'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport colortape from 'colortape'\nimport serve from 'serve'\nimport typesMkdirp from '@types\/mkdirp'\nimport homedirPolyfill from 'homedir-polyfill'\nimport typesMs from '@types\/ms'\n\n"}
{"prompt":"define(['stream-spec','vega-lite-dev-config','gulp-sourcemaps','gulp-concat','@types\/gulp-sourcemaps','vega-datasets','dts-jest','@types\/q','vinyl','path','rollup-plugin-cleanup','require-main-filename'], function(streamSpec,vegaLiteDevConfig,gulpSourcemaps,gulpConcat,typesGulpSourcemaps,vegaDatasets,dtsJest,typesQ,vinyl,path,rollupPluginCleanup,requireMainFilename){\n\n})","completion":" import streamSpec from 'stream-spec'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport gulpSourcemaps from 'gulp-sourcemaps'\nimport gulpConcat from 'gulp-concat'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport vegaDatasets from 'vega-datasets'\nimport dtsJest from 'dts-jest'\nimport typesQ from '@types\/q'\nimport vinyl from 'vinyl'\nimport path from 'path'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport requireMainFilename from 'require-main-filename'\n\n"}
{"prompt":"define(['@sindresorhus\/tsconfig','@types\/js-yaml','@types\/fs-extra','@types\/puppeteer','@types\/ms','vega-lite-dev-config','ts-node-dev','js-yaml','eslint-plugin-no-null','microbundle','vega-view','from','@types\/minimist'], function(sindresorhusTsconfig,typesJsYaml,typesFsExtra,typesPuppeteer,typesMs,vegaLiteDevConfig,tsNodeDev,jsYaml,eslintPluginNoNull,microbundle,vegaView,from,typesMinimist){\n\n})","completion":" import sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport typesJsYaml from '@types\/js-yaml'\nimport typesFsExtra from '@types\/fs-extra'\nimport typesPuppeteer from '@types\/puppeteer'\nimport typesMs from '@types\/ms'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport tsNodeDev from 'ts-node-dev'\nimport jsYaml from 'js-yaml'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport microbundle from 'microbundle'\nimport vegaView from 'vega-view'\nimport from from 'from'\nimport typesMinimist from '@types\/minimist'\n\n"}
{"prompt":"define(['safe-regex','d3','rollup-plugin-cleanup','tsutils','ignore','acorn-walk'], function(safeRegex,d3,rollupPluginCleanup,tsutils,ignore,acornWalk){\n\n})","completion":" import safeRegex from 'safe-regex'\nimport d3 from 'd3'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport tsutils from 'tsutils'\nimport ignore from 'ignore'\nimport acornWalk from 'acorn-walk'\n\n"}
{"prompt":"define(['svg2png-many','typescript-json-schema'], function(svg2PngMany,typescriptJsonSchema){\n\n})","completion":" import svg2PngMany from 'svg2png-many'\nimport typescriptJsonSchema from 'typescript-json-schema'\n\n"}
{"prompt":"define(['@octokit\/rest','vega-selections','acorn-walk','svg2png-many','hashish','@types\/q','vega-parser','d3-shape','@types\/diff','array-flat-polyfill','require-main-filename','eslint-plugin-github','vows'], function(octokitRest,vegaSelections,acornWalk,svg2PngMany,hashish,typesQ,vegaParser,d3Shape,typesDiff,arrayFlatPolyfill,requireMainFilename,eslintPluginGithub,vows){\n\n})","completion":" import octokitRest from '@octokit\/rest'\nimport vegaSelections from 'vega-selections'\nimport acornWalk from 'acorn-walk'\nimport svg2PngMany from 'svg2png-many'\nimport hashish from 'hashish'\nimport typesQ from '@types\/q'\nimport vegaParser from 'vega-parser'\nimport d3Shape from 'd3-shape'\nimport typesDiff from '@types\/diff'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport requireMainFilename from 'require-main-filename'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport vows from 'vows'\n\n"}
{"prompt":"define(['@swc\/wasm','dprint','serve','cpr','vega-transforms'], function(swcWasm,dprint,serve,cpr,vegaTransforms){\n\n})","completion":" import swcWasm from '@swc\/wasm'\nimport dprint from 'dprint'\nimport serve from 'serve'\nimport cpr from 'cpr'\nimport vegaTransforms from 'vega-transforms'\n\n"}
{"prompt":"define(['cliui','vega-util','d3-shape','jest-puppeteer','browser-sync','vega-geo','@typescript-eslint\/experimental-utils','@sindresorhus\/tsconfig','which-boxed-primitive','memfs','@types\/tape','safe-regex','d3-delaunay','vega-label','webidl-conversions','vega-scenegraph','vega-projection','rxjs','typescript-tslint-plugin','eslint-plugin-github'], function(cliui,vegaUtil,d3Shape,jestPuppeteer,browserSync,vegaGeo,typescriptEslintExperimentalUtils,sindresorhusTsconfig,whichBoxedPrimitive,memfs,typesTape,safeRegex,d3Delaunay,vegaLabel,webidlConversions,vegaScenegraph,vegaProjection,rxjs,typescriptTslintPlugin,eslintPluginGithub){\n\n})","completion":" import cliui from 'cliui'\nimport vegaUtil from 'vega-util'\nimport d3Shape from 'd3-shape'\nimport jestPuppeteer from 'jest-puppeteer'\nimport browserSync from 'browser-sync'\nimport vegaGeo from 'vega-geo'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport memfs from 'memfs'\nimport typesTape from '@types\/tape'\nimport safeRegex from 'safe-regex'\nimport d3Delaunay from 'd3-delaunay'\nimport vegaLabel from 'vega-label'\nimport webidlConversions from 'webidl-conversions'\nimport vegaScenegraph from 'vega-scenegraph'\nimport vegaProjection from 'vega-projection'\nimport rxjs from 'rxjs'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport eslintPluginGithub from 'eslint-plugin-github'\n\n"}
{"prompt":"define(['ts-transform-default-export','@types\/js-yaml','webidl-conversions','@types\/xml2js','azure-devops-node-api','hashish','@types\/tape','dts-jest','@types\/gulp-rename','is-boolean-object','eslint-plugin-no-null','npm-packlist','cpr'], function(tsTransformDefaultExport,typesJsYaml,webidlConversions,typesXml2Js,azureDevopsNodeApi,hashish,typesTape,dtsJest,typesGulpRename,isBooleanObject,eslintPluginNoNull,npmPacklist,cpr){\n\n})","completion":" import tsTransformDefaultExport from 'ts-transform-default-export'\nimport typesJsYaml from '@types\/js-yaml'\nimport webidlConversions from 'webidl-conversions'\nimport typesXml2Js from '@types\/xml2js'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport hashish from 'hashish'\nimport typesTape from '@types\/tape'\nimport dtsJest from 'dts-jest'\nimport typesGulpRename from '@types\/gulp-rename'\nimport isBooleanObject from 'is-boolean-object'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport npmPacklist from 'npm-packlist'\nimport cpr from 'cpr'\n\n"}
{"prompt":"define(['gulp-newer','azure-devops-node-api','svg2png-many','npm-packlist','@swc\/wasm'], function(gulpNewer,azureDevopsNodeApi,svg2PngMany,npmPacklist,swcWasm){\n\n})","completion":" import gulpNewer from 'gulp-newer'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport svg2PngMany from 'svg2png-many'\nimport npmPacklist from 'npm-packlist'\nimport swcWasm from '@swc\/wasm'\n\n"}
{"prompt":"define(['typescript-json-schema','prex','js-yaml','@fimbul\/valtyr','@types\/gulp','stream-spec','@types\/d3','vega-scale','is-number-object','azure-devops-node-api','safe-regex','vega-view','vega-expression','from'], function(typescriptJsonSchema,prex,jsYaml,fimbulValtyr,typesGulp,streamSpec,typesD3,vegaScale,isNumberObject,azureDevopsNodeApi,safeRegex,vegaView,vegaExpression,from){\n\n})","completion":" import typescriptJsonSchema from 'typescript-json-schema'\nimport prex from 'prex'\nimport jsYaml from 'js-yaml'\nimport fimbulValtyr from '@fimbul\/valtyr'\nimport typesGulp from '@types\/gulp'\nimport streamSpec from 'stream-spec'\nimport typesD3 from '@types\/d3'\nimport vegaScale from 'vega-scale'\nimport isNumberObject from 'is-number-object'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport safeRegex from 'safe-regex'\nimport vegaView from 'vega-view'\nimport vegaExpression from 'vega-expression'\nimport from from 'from'\n\n"}
{"prompt":"define(['os-tmpdir','vega-tooltip','webidl-conversions','vega-event-selector','@types\/ms','vega-format','cliui','yaml-front-matter','gulp-sourcemaps'], function(osTmpdir,vegaTooltip,webidlConversions,vegaEventSelector,typesMs,vegaFormat,cliui,yamlFrontMatter,gulpSourcemaps){\n\n})","completion":" import osTmpdir from 'os-tmpdir'\nimport vegaTooltip from 'vega-tooltip'\nimport webidlConversions from 'webidl-conversions'\nimport vegaEventSelector from 'vega-event-selector'\nimport typesMs from '@types\/ms'\nimport vegaFormat from 'vega-format'\nimport cliui from 'cliui'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport gulpSourcemaps from 'gulp-sourcemaps'\n\n"}
{"prompt":"define(['mocha-fivemat-progress-reporter','vega-crossfilter','vega-time','webidl2js','vega-selections','unicode-property-aliases-ecmascript','tslint-consistent-codestyle','@types\/diff','fancy-log','@cspotcode\/source-map-support','microbundle','json-stringify-pretty-compact','@fimbul\/valtyr','vega-schema-url-parser'], function(mochaFivematProgressReporter,vegaCrossfilter,vegaTime,webidl2Js,vegaSelections,unicodePropertyAliasesEcmascript,tslintConsistentCodestyle,typesDiff,fancyLog,cspotcodeSourceMapSupport,microbundle,jsonStringifyPrettyCompact,fimbulValtyr,vegaSchemaUrlParser){\n\n})","completion":" import mochaFivematProgressReporter from 'mocha-fivemat-progress-reporter'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport vegaTime from 'vega-time'\nimport webidl2Js from 'webidl2js'\nimport vegaSelections from 'vega-selections'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport typesDiff from '@types\/diff'\nimport fancyLog from 'fancy-log'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport microbundle from 'microbundle'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport fimbulValtyr from '@fimbul\/valtyr'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\n\n"}
{"prompt":"define(['vega-util','vega-cli','vega-loader','vega-view','vega-time','@swc\/wasm','vega-selections'], function(vegaUtil,vegaCli,vegaLoader,vegaView,vegaTime,swcWasm,vegaSelections){\n\n})","completion":" import vegaUtil from 'vega-util'\nimport vegaCli from 'vega-cli'\nimport vegaLoader from 'vega-loader'\nimport vegaView from 'vega-view'\nimport vegaTime from 'vega-time'\nimport swcWasm from '@swc\/wasm'\nimport vegaSelections from 'vega-selections'\n\n"}
{"prompt":"define(['verup','prex','start-server-and-test','vega-dataflow','dprint','dts-jest','github-release-from-changelog','@swc\/wasm','@types\/fast-json-stable-stringify','vega-transforms','vega-canvas','eslint-plugin-github','vega-crossfilter','yarn-deduplicate','vega-util','yargs-test-extends'], function(verup,prex,startServerAndTest,vegaDataflow,dprint,dtsJest,githubReleaseFromChangelog,swcWasm,typesFastJsonStableStringify,vegaTransforms,vegaCanvas,eslintPluginGithub,vegaCrossfilter,yarnDeduplicate,vegaUtil,yargsTestExtends){\n\n})","completion":" import verup from 'verup'\nimport prex from 'prex'\nimport startServerAndTest from 'start-server-and-test'\nimport vegaDataflow from 'vega-dataflow'\nimport dprint from 'dprint'\nimport dtsJest from 'dts-jest'\nimport githubReleaseFromChangelog from 'github-release-from-changelog'\nimport swcWasm from '@swc\/wasm'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport vegaTransforms from 'vega-transforms'\nimport vegaCanvas from 'vega-canvas'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport vegaUtil from 'vega-util'\nimport yargsTestExtends from 'yargs-test-extends'\n\n"}
{"prompt":"define(['d3-geo-projection','microbundle','@types\/gulp-rename','d3'], function(d3GeoProjection,microbundle,typesGulpRename,d3){\n\n})","completion":" import d3GeoProjection from 'd3-geo-projection'\nimport microbundle from 'microbundle'\nimport typesGulpRename from '@types\/gulp-rename'\nimport d3 from 'd3'\n\n"}
{"prompt":"define(['vega-functions','vega-lite-dev-config'], function(vegaFunctions,vegaLiteDevConfig){\n\n})","completion":" import vegaFunctions from 'vega-functions'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\n\n"}
{"prompt":"define(['rxjs','unicode-property-aliases-ecmascript','d3-force','array-flat-polyfill','@types\/xml2js'], function(rxjs,unicodePropertyAliasesEcmascript,d3Force,arrayFlatPolyfill,typesXml2Js){\n\n})","completion":" import rxjs from 'rxjs'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport d3Force from 'd3-force'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport typesXml2Js from '@types\/xml2js'\n\n"}
{"prompt":"define(['babel-plugin-trace','@types\/ms','@types\/proxyquire','dts-jest','vega-selections','@types\/gulp-sourcemaps','yarn','serve','@types\/fast-json-stable-stringify','@tsconfig\/node10','@microsoft\/api-extractor','vega-themes','is-boolean-object','@types\/proper-lockfile','decamelize','rollup-plugin-cleanup'], function(babelPluginTrace,typesMs,typesProxyquire,dtsJest,vegaSelections,typesGulpSourcemaps,yarn,serve,typesFastJsonStableStringify,tsconfigNode10,microsoftApiExtractor,vegaThemes,isBooleanObject,typesProperLockfile,decamelize,rollupPluginCleanup){\n\n})","completion":" import babelPluginTrace from 'babel-plugin-trace'\nimport typesMs from '@types\/ms'\nimport typesProxyquire from '@types\/proxyquire'\nimport dtsJest from 'dts-jest'\nimport vegaSelections from 'vega-selections'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport yarn from 'yarn'\nimport serve from 'serve'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\nimport vegaThemes from 'vega-themes'\nimport isBooleanObject from 'is-boolean-object'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport decamelize from 'decamelize'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\n\n"}
{"prompt":"define(['@tsconfig\/node14','@types\/puppeteer','rxjs','jest-puppeteer','vega-hierarchy','@octokit\/rest','webidl-conversions','acorn-walk','@types\/babel__code-frame','vega-geo','vega-cli'], function(tsconfigNode14,typesPuppeteer,rxjs,jestPuppeteer,vegaHierarchy,octokitRest,webidlConversions,acornWalk,typesBabelCodeFrame,vegaGeo,vegaCli){\n\n})","completion":" import tsconfigNode14 from '@tsconfig\/node14'\nimport typesPuppeteer from '@types\/puppeteer'\nimport rxjs from 'rxjs'\nimport jestPuppeteer from 'jest-puppeteer'\nimport vegaHierarchy from 'vega-hierarchy'\nimport octokitRest from '@octokit\/rest'\nimport webidlConversions from 'webidl-conversions'\nimport acornWalk from 'acorn-walk'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport vegaGeo from 'vega-geo'\nimport vegaCli from 'vega-cli'\n\n"}
{"prompt":"define(['util.promisify','which-module','vega-voronoi','merge2','is-bigint','gulp-concat','vega-scenegraph','ts-transform-default-export','tr46','@types\/gulp-newer','@types\/proper-lockfile','yargs-parser','typescript-tslint-plugin','vega-view','@types\/merge2','cliui','builtin-modules','tslint-plugin-prettier','from'], function(utilPromisify,whichModule,vegaVoronoi,merge2,isBigint,gulpConcat,vegaScenegraph,tsTransformDefaultExport,tr46,typesGulpNewer,typesProperLockfile,yargsParser,typescriptTslintPlugin,vegaView,typesMerge2,cliui,builtinModules,tslintPluginPrettier,from){\n\n})","completion":" import utilPromisify from 'util.promisify'\nimport whichModule from 'which-module'\nimport vegaVoronoi from 'vega-voronoi'\nimport merge2 from 'merge2'\nimport isBigint from 'is-bigint'\nimport gulpConcat from 'gulp-concat'\nimport vegaScenegraph from 'vega-scenegraph'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport tr46 from 'tr46'\nimport typesGulpNewer from '@types\/gulp-newer'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport yargsParser from 'yargs-parser'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport vegaView from 'vega-view'\nimport typesMerge2 from '@types\/merge2'\nimport cliui from 'cliui'\nimport builtinModules from 'builtin-modules'\nimport tslintPluginPrettier from 'tslint-plugin-prettier'\nimport from from 'from'\n\n"}
{"prompt":"define(['yargs-parser','vega-voronoi','vega-canvas','tr46','@types\/proxyquire','eslint-plugin-github','babel-plugin-trace','fancy-log','os-tmpdir','gulp-newer','@types\/babel__code-frame','dts-jest','@types\/react','github-release-from-changelog'], function(yargsParser,vegaVoronoi,vegaCanvas,tr46,typesProxyquire,eslintPluginGithub,babelPluginTrace,fancyLog,osTmpdir,gulpNewer,typesBabelCodeFrame,dtsJest,typesReact,githubReleaseFromChangelog){\n\n})","completion":" import yargsParser from 'yargs-parser'\nimport vegaVoronoi from 'vega-voronoi'\nimport vegaCanvas from 'vega-canvas'\nimport tr46 from 'tr46'\nimport typesProxyquire from '@types\/proxyquire'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport babelPluginTrace from 'babel-plugin-trace'\nimport fancyLog from 'fancy-log'\nimport osTmpdir from 'os-tmpdir'\nimport gulpNewer from 'gulp-newer'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport dtsJest from 'dts-jest'\nimport typesReact from '@types\/react'\nimport githubReleaseFromChangelog from 'github-release-from-changelog'\n\n"}
{"prompt":"define(['get-stream','vega-typings','d3-geo-projection','safe-regex','make-error','hashish','from'], function(getStream,vegaTypings,d3GeoProjection,safeRegex,makeError,hashish,from){\n\n})","completion":" import getStream from 'get-stream'\nimport vegaTypings from 'vega-typings'\nimport d3GeoProjection from 'd3-geo-projection'\nimport safeRegex from 'safe-regex'\nimport makeError from 'make-error'\nimport hashish from 'hashish'\nimport from from 'from'\n\n"}
{"prompt":"define(['d3-scale','vega-schema','rxjs','@types\/npm-packlist','require-directory','yargs-parser','array-flat-polyfill','make-error'], function(d3Scale,vegaSchema,rxjs,typesNpmPacklist,requireDirectory,yargsParser,arrayFlatPolyfill,makeError){\n\n})","completion":" import d3Scale from 'd3-scale'\nimport vegaSchema from 'vega-schema'\nimport rxjs from 'rxjs'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport requireDirectory from 'require-directory'\nimport yargsParser from 'yargs-parser'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport makeError from 'make-error'\n\n"}
{"prompt":"define(['babel-plugin-trace','rxjs','colortape','arg','@tsconfig\/node16','vega-time','webidl-conversions','is-boolean-object','@types\/proper-lockfile'], function(babelPluginTrace,rxjs,colortape,arg,tsconfigNode16,vegaTime,webidlConversions,isBooleanObject,typesProperLockfile){\n\n})","completion":" import babelPluginTrace from 'babel-plugin-trace'\nimport rxjs from 'rxjs'\nimport colortape from 'colortape'\nimport arg from 'arg'\nimport tsconfigNode16 from '@tsconfig\/node16'\nimport vegaTime from 'vega-time'\nimport webidlConversions from 'webidl-conversions'\nimport isBooleanObject from 'is-boolean-object'\nimport typesProperLockfile from '@types\/proper-lockfile'\n\n"}
{"prompt":"define(['rollup-plugin-sourcemaps','@sindresorhus\/tsconfig','tslint-config-prettier','ini','@swc\/wasm','@yarnpkg\/fslib','common-tags','vega-schema','@types\/puppeteer','svg2png-many','util.promisify','cliui','require-directory','tr46','cpr','vega-loader','vega-canvas','vega-scenegraph'], function(rollupPluginSourcemaps,sindresorhusTsconfig,tslintConfigPrettier,ini,swcWasm,yarnpkgFslib,commonTags,vegaSchema,typesPuppeteer,svg2PngMany,utilPromisify,cliui,requireDirectory,tr46,cpr,vegaLoader,vegaCanvas,vegaScenegraph){\n\n})","completion":" import rollupPluginSourcemaps from 'rollup-plugin-sourcemaps'\nimport sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport tslintConfigPrettier from 'tslint-config-prettier'\nimport ini from 'ini'\nimport swcWasm from '@swc\/wasm'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport commonTags from 'common-tags'\nimport vegaSchema from 'vega-schema'\nimport typesPuppeteer from '@types\/puppeteer'\nimport svg2PngMany from 'svg2png-many'\nimport utilPromisify from 'util.promisify'\nimport cliui from 'cliui'\nimport requireDirectory from 'require-directory'\nimport tr46 from 'tr46'\nimport cpr from 'cpr'\nimport vegaLoader from 'vega-loader'\nimport vegaCanvas from 'vega-canvas'\nimport vegaScenegraph from 'vega-scenegraph'\n\n"}
{"prompt":"define(['is-boolean-object','@types\/clone','merge2','safe-regex','rxjs','azure-devops-node-api','npm-packlist','@types\/gulp-newer'], function(isBooleanObject,typesClone,merge2,safeRegex,rxjs,azureDevopsNodeApi,npmPacklist,typesGulpNewer){\n\n})","completion":" import isBooleanObject from 'is-boolean-object'\nimport typesClone from '@types\/clone'\nimport merge2 from 'merge2'\nimport safeRegex from 'safe-regex'\nimport rxjs from 'rxjs'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport npmPacklist from 'npm-packlist'\nimport typesGulpNewer from '@types\/gulp-newer'\n\n"}
{"prompt":"define(['d3-delaunay','@types\/react','@types\/source-map-support','from','colortape','svg2png-many','arg','ts-clean-built','@microsoft\/api-extractor','@types\/gulp-concat','yn','ts-json-schema-generator','vega-expression','merge2','tr46','@types\/fs-extra','vega-util'], function(d3Delaunay,typesReact,typesSourceMapSupport,from,colortape,svg2PngMany,arg,tsCleanBuilt,microsoftApiExtractor,typesGulpConcat,yn,tsJsonSchemaGenerator,vegaExpression,merge2,tr46,typesFsExtra,vegaUtil){\n\n})","completion":" import d3Delaunay from 'd3-delaunay'\nimport typesReact from '@types\/react'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport from from 'from'\nimport colortape from 'colortape'\nimport svg2PngMany from 'svg2png-many'\nimport arg from 'arg'\nimport tsCleanBuilt from 'ts-clean-built'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport yn from 'yn'\nimport tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport vegaExpression from 'vega-expression'\nimport merge2 from 'merge2'\nimport tr46 from 'tr46'\nimport typesFsExtra from '@types\/fs-extra'\nimport vegaUtil from 'vega-util'\n\n"}
{"prompt":"define(['d3-force','mocha-fivemat-progress-reporter','rxjs','@types\/ms','vega-hierarchy','flow-parser','common-tags','@tsconfig\/node12','d3-geo-projection','yargs-parser','svg2png-many','webidl2js','gulp-insert','vega-expression','cpr','yaml-front-matter','babel-plugin-trace','@types\/gulp-newer'], function(d3Force,mochaFivematProgressReporter,rxjs,typesMs,vegaHierarchy,flowParser,commonTags,tsconfigNode12,d3GeoProjection,yargsParser,svg2PngMany,webidl2Js,gulpInsert,vegaExpression,cpr,yamlFrontMatter,babelPluginTrace,typesGulpNewer){\n\n})","completion":" import d3Force from 'd3-force'\nimport mochaFivematProgressReporter from 'mocha-fivemat-progress-reporter'\nimport rxjs from 'rxjs'\nimport typesMs from '@types\/ms'\nimport vegaHierarchy from 'vega-hierarchy'\nimport flowParser from 'flow-parser'\nimport commonTags from 'common-tags'\nimport tsconfigNode12 from '@tsconfig\/node12'\nimport d3GeoProjection from 'd3-geo-projection'\nimport yargsParser from 'yargs-parser'\nimport svg2PngMany from 'svg2png-many'\nimport webidl2Js from 'webidl2js'\nimport gulpInsert from 'gulp-insert'\nimport vegaExpression from 'vega-expression'\nimport cpr from 'cpr'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport babelPluginTrace from 'babel-plugin-trace'\nimport typesGulpNewer from '@types\/gulp-newer'\n\n"}
{"prompt":"define(['browser-sync'], function(browserSync){\n\n})","completion":" import browserSync from 'browser-sync'\n\n"}
{"prompt":"define(['d3-delaunay','array-flat-polyfill','vega-loader','npm-packlist'], function(d3Delaunay,arrayFlatPolyfill,vegaLoader,npmPacklist){\n\n})","completion":" import d3Delaunay from 'd3-delaunay'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport vegaLoader from 'vega-loader'\nimport npmPacklist from 'npm-packlist'\n\n"}
{"prompt":"define(['d3-force','require-main-filename','@types\/xml2js','rollup-plugin-cleanup','y18n','vega-hierarchy','from','@types\/fs-extra','vega-transforms','@types\/gulp-concat'], function(d3Force,requireMainFilename,typesXml2Js,rollupPluginCleanup,y18N,vegaHierarchy,from,typesFsExtra,vegaTransforms,typesGulpConcat){\n\n})","completion":" import d3Force from 'd3-force'\nimport requireMainFilename from 'require-main-filename'\nimport typesXml2Js from '@types\/xml2js'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport y18N from 'y18n'\nimport vegaHierarchy from 'vega-hierarchy'\nimport from from 'from'\nimport typesFsExtra from '@types\/fs-extra'\nimport vegaTransforms from 'vega-transforms'\nimport typesGulpConcat from '@types\/gulp-concat'\n\n"}
{"prompt":"define(['os-tmpdir','is-bigint','has-ansi','make-error','mocha-fivemat-progress-reporter','camelcase','unicode-property-aliases-ecmascript','vega-runtime','vega-schema-url-parser','cpr','stream-spec','jest-t-assert','rollup-plugin-bundle-size','@types\/proper-lockfile','js-yaml'], function(osTmpdir,isBigint,hasAnsi,makeError,mochaFivematProgressReporter,camelcase,unicodePropertyAliasesEcmascript,vegaRuntime,vegaSchemaUrlParser,cpr,streamSpec,jestTAssert,rollupPluginBundleSize,typesProperLockfile,jsYaml){\n\n})","completion":" import osTmpdir from 'os-tmpdir'\nimport isBigint from 'is-bigint'\nimport hasAnsi from 'has-ansi'\nimport makeError from 'make-error'\nimport mochaFivematProgressReporter from 'mocha-fivemat-progress-reporter'\nimport camelcase from 'camelcase'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport vegaRuntime from 'vega-runtime'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport cpr from 'cpr'\nimport streamSpec from 'stream-spec'\nimport jestTAssert from 'jest-t-assert'\nimport rollupPluginBundleSize from 'rollup-plugin-bundle-size'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport jsYaml from 'js-yaml'\n\n"}
{"prompt":"define(['gulp-sourcemaps','tslint-test-config-non-relative','vega-lite-dev-config','@fimbul\/wotan','os-tmpdir','pretty-quick','tslint-plugin-prettier','vega-projection','vega-runtime','mocha-fivemat-progress-reporter','flow-parser','vega-regression','@yarnpkg\/fslib'], function(gulpSourcemaps,tslintTestConfigNonRelative,vegaLiteDevConfig,fimbulWotan,osTmpdir,prettyQuick,tslintPluginPrettier,vegaProjection,vegaRuntime,mochaFivematProgressReporter,flowParser,vegaRegression,yarnpkgFslib){\n\n})","completion":" import gulpSourcemaps from 'gulp-sourcemaps'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport fimbulWotan from '@fimbul\/wotan'\nimport osTmpdir from 'os-tmpdir'\nimport prettyQuick from 'pretty-quick'\nimport tslintPluginPrettier from 'tslint-plugin-prettier'\nimport vegaProjection from 'vega-projection'\nimport vegaRuntime from 'vega-runtime'\nimport mochaFivematProgressReporter from 'mocha-fivemat-progress-reporter'\nimport flowParser from 'flow-parser'\nimport vegaRegression from 'vega-regression'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\n\n"}
{"prompt":"define(['@types\/fs-extra','vega-canvas','npm-packlist','vega-datasets','jest-puppeteer','jest-t-assert'], function(typesFsExtra,vegaCanvas,npmPacklist,vegaDatasets,jestPuppeteer,jestTAssert){\n\n})","completion":" import typesFsExtra from '@types\/fs-extra'\nimport vegaCanvas from 'vega-canvas'\nimport npmPacklist from 'npm-packlist'\nimport vegaDatasets from 'vega-datasets'\nimport jestPuppeteer from 'jest-puppeteer'\nimport jestTAssert from 'jest-t-assert'\n\n"}
{"prompt":"define(['typescript-json-schema','gulp-concat','vega-canvas','tsutils','acorn-walk','d3-hierarchy','npm-packlist','tslint-plugin-prettier','v8-compile-cache-lib','get-caller-file','@octokit\/rest','dprint','@types\/ms','vega-schema','cpr','@types\/source-map-support','jest-canvas-mock','vega-force'], function(typescriptJsonSchema,gulpConcat,vegaCanvas,tsutils,acornWalk,d3Hierarchy,npmPacklist,tslintPluginPrettier,v8CompileCacheLib,getCallerFile,octokitRest,dprint,typesMs,vegaSchema,cpr,typesSourceMapSupport,jestCanvasMock,vegaForce){\n\n})","completion":" import typescriptJsonSchema from 'typescript-json-schema'\nimport gulpConcat from 'gulp-concat'\nimport vegaCanvas from 'vega-canvas'\nimport tsutils from 'tsutils'\nimport acornWalk from 'acorn-walk'\nimport d3Hierarchy from 'd3-hierarchy'\nimport npmPacklist from 'npm-packlist'\nimport tslintPluginPrettier from 'tslint-plugin-prettier'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport getCallerFile from 'get-caller-file'\nimport octokitRest from '@octokit\/rest'\nimport dprint from 'dprint'\nimport typesMs from '@types\/ms'\nimport vegaSchema from 'vega-schema'\nimport cpr from 'cpr'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport jestCanvasMock from 'jest-canvas-mock'\nimport vegaForce from 'vega-force'\n\n"}
{"prompt":"define(['colortape','get-stream','@types\/gulp-rename'], function(colortape,getStream,typesGulpRename){\n\n})","completion":" import colortape from 'colortape'\nimport getStream from 'get-stream'\nimport typesGulpRename from '@types\/gulp-rename'\n\n"}
{"prompt":"define(['pretty-quick','camelcase','array-flat-polyfill','vega-view-transforms'], function(prettyQuick,camelcase,arrayFlatPolyfill,vegaViewTransforms){\n\n})","completion":" import prettyQuick from 'pretty-quick'\nimport camelcase from 'camelcase'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport vegaViewTransforms from 'vega-view-transforms'\n\n"}
{"prompt":"define(['@types\/react','get-caller-file','@types\/gulp-concat','d3-delaunay','@swc\/wasm','@tsconfig\/node16','dts-jest','eslint-formatter-autolinkable-stylish','yarn','@types\/puppeteer','tslint-test-config-non-relative','@tsconfig\/node12','vega-scenegraph','vega-scale','vega-geo','vega-regression','unicode-property-value-aliases-ecmascript','@tsconfig\/node10','array-flat-polyfill'], function(typesReact,getCallerFile,typesGulpConcat,d3Delaunay,swcWasm,tsconfigNode16,dtsJest,eslintFormatterAutolinkableStylish,yarn,typesPuppeteer,tslintTestConfigNonRelative,tsconfigNode12,vegaScenegraph,vegaScale,vegaGeo,vegaRegression,unicodePropertyValueAliasesEcmascript,tsconfigNode10,arrayFlatPolyfill){\n\n})","completion":" import typesReact from '@types\/react'\nimport getCallerFile from 'get-caller-file'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport d3Delaunay from 'd3-delaunay'\nimport swcWasm from '@swc\/wasm'\nimport tsconfigNode16 from '@tsconfig\/node16'\nimport dtsJest from 'dts-jest'\nimport eslintFormatterAutolinkableStylish from 'eslint-formatter-autolinkable-stylish'\nimport yarn from 'yarn'\nimport typesPuppeteer from '@types\/puppeteer'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport tsconfigNode12 from '@tsconfig\/node12'\nimport vegaScenegraph from 'vega-scenegraph'\nimport vegaScale from 'vega-scale'\nimport vegaGeo from 'vega-geo'\nimport vegaRegression from 'vega-regression'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\n\n"}
{"prompt":"define(['vega-transforms','babel-plugin-trace','is-boolean-object','@types\/js-yaml','yn','tr46','tslint-test-config-non-relative','stream-spec','@sindresorhus\/tsconfig','promise-polyfill','get-stream','vega-schema-url-parser','@types\/react','vega-projection','vega-dataflow','d3-force','vega-scenegraph'], function(vegaTransforms,babelPluginTrace,isBooleanObject,typesJsYaml,yn,tr46,tslintTestConfigNonRelative,streamSpec,sindresorhusTsconfig,promisePolyfill,getStream,vegaSchemaUrlParser,typesReact,vegaProjection,vegaDataflow,d3Force,vegaScenegraph){\n\n})","completion":" import vegaTransforms from 'vega-transforms'\nimport babelPluginTrace from 'babel-plugin-trace'\nimport isBooleanObject from 'is-boolean-object'\nimport typesJsYaml from '@types\/js-yaml'\nimport yn from 'yn'\nimport tr46 from 'tr46'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport streamSpec from 'stream-spec'\nimport sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport promisePolyfill from 'promise-polyfill'\nimport getStream from 'get-stream'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport typesReact from '@types\/react'\nimport vegaProjection from 'vega-projection'\nimport vegaDataflow from 'vega-dataflow'\nimport d3Force from 'd3-force'\nimport vegaScenegraph from 'vega-scenegraph'\n\n"}
{"prompt":"define(['vega-expression','typescript-json-schema','vega-loader','vega-view-transforms'], function(vegaExpression,typescriptJsonSchema,vegaLoader,vegaViewTransforms){\n\n})","completion":" import vegaExpression from 'vega-expression'\nimport typescriptJsonSchema from 'typescript-json-schema'\nimport vegaLoader from 'vega-loader'\nimport vegaViewTransforms from 'vega-view-transforms'\n\n"}
{"prompt":"define(['vega-parser','yargs-parser','is-bigint','highlight.js','d3-delaunay','vega-time','v8-compile-cache-lib','@types\/js-yaml','eslint-plugin-no-null','is-number-object','@types\/gulp-rename','vega-wordcloud','get-stream'], function(vegaParser,yargsParser,isBigint,highlightJs,d3Delaunay,vegaTime,v8CompileCacheLib,typesJsYaml,eslintPluginNoNull,isNumberObject,typesGulpRename,vegaWordcloud,getStream){\n\n})","completion":" import vegaParser from 'vega-parser'\nimport yargsParser from 'yargs-parser'\nimport isBigint from 'is-bigint'\nimport highlightJs from 'highlight.js'\nimport d3Delaunay from 'd3-delaunay'\nimport vegaTime from 'vega-time'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport typesJsYaml from '@types\/js-yaml'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport isNumberObject from 'is-number-object'\nimport typesGulpRename from '@types\/gulp-rename'\nimport vegaWordcloud from 'vega-wordcloud'\nimport getStream from 'get-stream'\n\n"}
{"prompt":"define(['vega-dataflow','svg2png-many','babel-plugin-trace','vega-loader','vega-datasets','array-flat-polyfill','ignore','get-stream','start-server-and-test','rollup-plugin-sourcemaps','tr46','v8-compile-cache-lib','vows','which-boxed-primitive'], function(vegaDataflow,svg2PngMany,babelPluginTrace,vegaLoader,vegaDatasets,arrayFlatPolyfill,ignore,getStream,startServerAndTest,rollupPluginSourcemaps,tr46,v8CompileCacheLib,vows,whichBoxedPrimitive){\n\n})","completion":" import vegaDataflow from 'vega-dataflow'\nimport svg2PngMany from 'svg2png-many'\nimport babelPluginTrace from 'babel-plugin-trace'\nimport vegaLoader from 'vega-loader'\nimport vegaDatasets from 'vega-datasets'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport ignore from 'ignore'\nimport getStream from 'get-stream'\nimport startServerAndTest from 'start-server-and-test'\nimport rollupPluginSourcemaps from 'rollup-plugin-sourcemaps'\nimport tr46 from 'tr46'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport vows from 'vows'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\n\n"}
{"prompt":"define(['@types\/proxyquire','d3-geo-projection'], function(typesProxyquire,d3GeoProjection){\n\n})","completion":" import typesProxyquire from '@types\/proxyquire'\nimport d3GeoProjection from 'd3-geo-projection'\n\n"}
{"prompt":"define(['vega-functions','vinyl-sourcemaps-apply','fancy-log','unicode-property-value-aliases-ecmascript','browser-sync','fast-json-patch'], function(vegaFunctions,vinylSourcemapsApply,fancyLog,unicodePropertyValueAliasesEcmascript,browserSync,fastJsonPatch){\n\n})","completion":" import vegaFunctions from 'vega-functions'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport fancyLog from 'fancy-log'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport browserSync from 'browser-sync'\nimport fastJsonPatch from 'fast-json-patch'\n\n"}
{"prompt":"define(['@types\/proper-lockfile','get-stream','rollup-plugin-bundle-size','d3-shape','@types\/babel__code-frame','isexe','tslint-config-prettier','@tsconfig\/node16','@swc\/wasm','typescript-tslint-plugin','npm-packlist','array-flat-polyfill','js-yaml','vega-format','jest-canvas-mock','has-ansi','eslint-plugin-github','jest-puppeteer','arg'], function(typesProperLockfile,getStream,rollupPluginBundleSize,d3Shape,typesBabelCodeFrame,isexe,tslintConfigPrettier,tsconfigNode16,swcWasm,typescriptTslintPlugin,npmPacklist,arrayFlatPolyfill,jsYaml,vegaFormat,jestCanvasMock,hasAnsi,eslintPluginGithub,jestPuppeteer,arg){\n\n})","completion":" import typesProperLockfile from '@types\/proper-lockfile'\nimport getStream from 'get-stream'\nimport rollupPluginBundleSize from 'rollup-plugin-bundle-size'\nimport d3Shape from 'd3-shape'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport isexe from 'isexe'\nimport tslintConfigPrettier from 'tslint-config-prettier'\nimport tsconfigNode16 from '@tsconfig\/node16'\nimport swcWasm from '@swc\/wasm'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport npmPacklist from 'npm-packlist'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport jsYaml from 'js-yaml'\nimport vegaFormat from 'vega-format'\nimport jestCanvasMock from 'jest-canvas-mock'\nimport hasAnsi from 'has-ansi'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport jestPuppeteer from 'jest-puppeteer'\nimport arg from 'arg'\n\n"}
{"prompt":"define(['y18n','vega-dataflow','vega-themes','@tsconfig\/node16','merge2','d3-hierarchy','@cspotcode\/source-map-support','@fimbul\/valtyr','vega-parser','hashish','eslint-config-lydell','vega-runtime'], function(y18N,vegaDataflow,vegaThemes,tsconfigNode16,merge2,d3Hierarchy,cspotcodeSourceMapSupport,fimbulValtyr,vegaParser,hashish,eslintConfigLydell,vegaRuntime){\n\n})","completion":" import y18N from 'y18n'\nimport vegaDataflow from 'vega-dataflow'\nimport vegaThemes from 'vega-themes'\nimport tsconfigNode16 from '@tsconfig\/node16'\nimport merge2 from 'merge2'\nimport d3Hierarchy from 'd3-hierarchy'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport fimbulValtyr from '@fimbul\/valtyr'\nimport vegaParser from 'vega-parser'\nimport hashish from 'hashish'\nimport eslintConfigLydell from 'eslint-config-lydell'\nimport vegaRuntime from 'vega-runtime'\n\n"}
{"prompt":"define(['vega-parser','array-flat-polyfill','@types\/minimist','@types\/npm-packlist','@typescript-eslint\/experimental-utils','vega-event-selector','@types\/source-map-support','@fimbul\/wotan','@yarnpkg\/fslib','y18n','get-caller-file','ini','vega-crossfilter','vega-format'], function(vegaParser,arrayFlatPolyfill,typesMinimist,typesNpmPacklist,typescriptEslintExperimentalUtils,vegaEventSelector,typesSourceMapSupport,fimbulWotan,yarnpkgFslib,y18N,getCallerFile,ini,vegaCrossfilter,vegaFormat){\n\n})","completion":" import vegaParser from 'vega-parser'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport typesMinimist from '@types\/minimist'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport vegaEventSelector from 'vega-event-selector'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport fimbulWotan from '@fimbul\/wotan'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport y18N from 'y18n'\nimport getCallerFile from 'get-caller-file'\nimport ini from 'ini'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport vegaFormat from 'vega-format'\n\n"}
{"prompt":"define(['camelcase','vega-time','@fimbul\/wotan','vega-encode','acorn-walk','vega-schema','v8-compile-cache-lib','@types\/react','vega-util','y18n','vega-tooltip','vega-view','@types\/tape'], function(camelcase,vegaTime,fimbulWotan,vegaEncode,acornWalk,vegaSchema,v8CompileCacheLib,typesReact,vegaUtil,y18N,vegaTooltip,vegaView,typesTape){\n\n})","completion":" import camelcase from 'camelcase'\nimport vegaTime from 'vega-time'\nimport fimbulWotan from '@fimbul\/wotan'\nimport vegaEncode from 'vega-encode'\nimport acornWalk from 'acorn-walk'\nimport vegaSchema from 'vega-schema'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport typesReact from '@types\/react'\nimport vegaUtil from 'vega-util'\nimport y18N from 'y18n'\nimport vegaTooltip from 'vega-tooltip'\nimport vegaView from 'vega-view'\nimport typesTape from '@types\/tape'\n\n"}
{"prompt":"define(['@types\/ms','yarn-deduplicate','browser-sync','vega-label','which-module'], function(typesMs,yarnDeduplicate,browserSync,vegaLabel,whichModule){\n\n})","completion":" import typesMs from '@types\/ms'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport browserSync from 'browser-sync'\nimport vegaLabel from 'vega-label'\nimport whichModule from 'which-module'\n\n"}
{"prompt":"define(['dts-jest','@types\/gulp-rename','cpr','@types\/diff','tslint-consistent-codestyle','tslint-config-prettier','vega-wordcloud','vega-cli','@tsconfig\/node16'], function(dtsJest,typesGulpRename,cpr,typesDiff,tslintConsistentCodestyle,tslintConfigPrettier,vegaWordcloud,vegaCli,tsconfigNode16){\n\n})","completion":" import dtsJest from 'dts-jest'\nimport typesGulpRename from '@types\/gulp-rename'\nimport cpr from 'cpr'\nimport typesDiff from '@types\/diff'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport tslintConfigPrettier from 'tslint-config-prettier'\nimport vegaWordcloud from 'vega-wordcloud'\nimport vegaCli from 'vega-cli'\nimport tsconfigNode16 from '@tsconfig\/node16'\n\n"}
{"prompt":"define(['npm-packlist','require-directory','@octokit\/rest','vega-lite-dev-config','@microsoft\/api-extractor','verup','cliui','@types\/source-map-support','ntypescript','@types\/tape','arg','vega-projection','@swc\/wasm','homedir-polyfill','vows'], function(npmPacklist,requireDirectory,octokitRest,vegaLiteDevConfig,microsoftApiExtractor,verup,cliui,typesSourceMapSupport,ntypescript,typesTape,arg,vegaProjection,swcWasm,homedirPolyfill,vows){\n\n})","completion":" import npmPacklist from 'npm-packlist'\nimport requireDirectory from 'require-directory'\nimport octokitRest from '@octokit\/rest'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\nimport verup from 'verup'\nimport cliui from 'cliui'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport ntypescript from 'ntypescript'\nimport typesTape from '@types\/tape'\nimport arg from 'arg'\nimport vegaProjection from 'vega-projection'\nimport swcWasm from '@swc\/wasm'\nimport homedirPolyfill from 'homedir-polyfill'\nimport vows from 'vows'\n\n"}
{"prompt":"define(['vega-schema','ts-clean-built','@types\/puppeteer','microbundle','get-caller-file','vega-typings'], function(vegaSchema,tsCleanBuilt,typesPuppeteer,microbundle,getCallerFile,vegaTypings){\n\n})","completion":" import vegaSchema from 'vega-schema'\nimport tsCleanBuilt from 'ts-clean-built'\nimport typesPuppeteer from '@types\/puppeteer'\nimport microbundle from 'microbundle'\nimport getCallerFile from 'get-caller-file'\nimport vegaTypings from 'vega-typings'\n\n"}
{"prompt":"define(['@microsoft\/api-extractor','jest-puppeteer','vega-canvas','js-yaml','vinyl-sourcemaps-apply','clean-ts-built','@types\/puppeteer','npm-packlist','rollup-plugin-sourcemaps','which-boxed-primitive','@types\/merge2','d3-scale','d3','vega-schema-url-parser','dprint','yn','@types\/gulp-newer','from','tslint-plugin-prettier','ignore'], function(microsoftApiExtractor,jestPuppeteer,vegaCanvas,jsYaml,vinylSourcemapsApply,cleanTsBuilt,typesPuppeteer,npmPacklist,rollupPluginSourcemaps,whichBoxedPrimitive,typesMerge2,d3Scale,d3,vegaSchemaUrlParser,dprint,yn,typesGulpNewer,from,tslintPluginPrettier,ignore){\n\n})","completion":" import microsoftApiExtractor from '@microsoft\/api-extractor'\nimport jestPuppeteer from 'jest-puppeteer'\nimport vegaCanvas from 'vega-canvas'\nimport jsYaml from 'js-yaml'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport cleanTsBuilt from 'clean-ts-built'\nimport typesPuppeteer from '@types\/puppeteer'\nimport npmPacklist from 'npm-packlist'\nimport rollupPluginSourcemaps from 'rollup-plugin-sourcemaps'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport typesMerge2 from '@types\/merge2'\nimport d3Scale from 'd3-scale'\nimport d3 from 'd3'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport dprint from 'dprint'\nimport yn from 'yn'\nimport typesGulpNewer from '@types\/gulp-newer'\nimport from from 'from'\nimport tslintPluginPrettier from 'tslint-plugin-prettier'\nimport ignore from 'ignore'\n\n"}
{"prompt":"define(['@types\/source-map-support','gulp-newer','@tsconfig\/node10','typescript-json-schema','@tsconfig\/node14','ignore','pretty-quick','@tsconfig\/node12'], function(typesSourceMapSupport,gulpNewer,tsconfigNode10,typescriptJsonSchema,tsconfigNode14,ignore,prettyQuick,tsconfigNode12){\n\n})","completion":" import typesSourceMapSupport from '@types\/source-map-support'\nimport gulpNewer from 'gulp-newer'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport typescriptJsonSchema from 'typescript-json-schema'\nimport tsconfigNode14 from '@tsconfig\/node14'\nimport ignore from 'ignore'\nimport prettyQuick from 'pretty-quick'\nimport tsconfigNode12 from '@tsconfig\/node12'\n\n"}
{"prompt":"define(['github-release-from-changelog','svg2png-many','jest-puppeteer','verup'], function(githubReleaseFromChangelog,svg2PngMany,jestPuppeteer,verup){\n\n})","completion":" import githubReleaseFromChangelog from 'github-release-from-changelog'\nimport svg2PngMany from 'svg2png-many'\nimport jestPuppeteer from 'jest-puppeteer'\nimport verup from 'verup'\n\n"}
{"prompt":"define(['rollup-plugin-cleanup','@tsconfig\/node14','webidl2js','serve','vega-datasets','safe-regex','@cspotcode\/source-map-support','create-require','vega-typings','vega-regression','vega-expression','@types\/gulp-concat','d3-delaunay','@types\/gulp-rename'], function(rollupPluginCleanup,tsconfigNode14,webidl2Js,serve,vegaDatasets,safeRegex,cspotcodeSourceMapSupport,createRequire,vegaTypings,vegaRegression,vegaExpression,typesGulpConcat,d3Delaunay,typesGulpRename){\n\n})","completion":" import rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport tsconfigNode14 from '@tsconfig\/node14'\nimport webidl2Js from 'webidl2js'\nimport serve from 'serve'\nimport vegaDatasets from 'vega-datasets'\nimport safeRegex from 'safe-regex'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport createRequire from 'create-require'\nimport vegaTypings from 'vega-typings'\nimport vegaRegression from 'vega-regression'\nimport vegaExpression from 'vega-expression'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport d3Delaunay from 'd3-delaunay'\nimport typesGulpRename from '@types\/gulp-rename'\n\n"}
{"prompt":"define(['typescript-json-schema','create-require','yargs-test-extends','arg','flow-parser','detect-indent','throat','gulp-concat','hashish','yaml-front-matter','tslint-test-config-non-relative','@types\/gulp-sourcemaps','serve'], function(typescriptJsonSchema,createRequire,yargsTestExtends,arg,flowParser,detectIndent,throat,gulpConcat,hashish,yamlFrontMatter,tslintTestConfigNonRelative,typesGulpSourcemaps,serve){\n\n})","completion":" import typescriptJsonSchema from 'typescript-json-schema'\nimport createRequire from 'create-require'\nimport yargsTestExtends from 'yargs-test-extends'\nimport arg from 'arg'\nimport flowParser from 'flow-parser'\nimport detectIndent from 'detect-indent'\nimport throat from 'throat'\nimport gulpConcat from 'gulp-concat'\nimport hashish from 'hashish'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport serve from 'serve'\n\n"}
{"prompt":"define(['vega-force','flow-parser'], function(vegaForce,flowParser){\n\n})","completion":" import vegaForce from 'vega-force'\nimport flowParser from 'flow-parser'\n\n"}
{"prompt":"define(['vega-view-transforms','vega-format','tslint-test-config-non-relative','fancy-log','d3-shape'], function(vegaViewTransforms,vegaFormat,tslintTestConfigNonRelative,fancyLog,d3Shape){\n\n})","completion":" import vegaViewTransforms from 'vega-view-transforms'\nimport vegaFormat from 'vega-format'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport fancyLog from 'fancy-log'\nimport d3Shape from 'd3-shape'\n\n"}
{"prompt":"define(['@types\/q','@sindresorhus\/tsconfig','which-boxed-primitive','vega-view','@tsconfig\/node10','vega-view-transforms','vega-themes','vega-selections','@fimbul\/wotan','flow-parser','vinyl-sourcemaps-apply','@types\/gulp','@types\/microsoft__typescript-etw','arg','vega-schema-url-parser','yarn','vega-loader','vega-functions','vega-time'], function(typesQ,sindresorhusTsconfig,whichBoxedPrimitive,vegaView,tsconfigNode10,vegaViewTransforms,vegaThemes,vegaSelections,fimbulWotan,flowParser,vinylSourcemapsApply,typesGulp,typesMicrosoftTypescriptEtw,arg,vegaSchemaUrlParser,yarn,vegaLoader,vegaFunctions,vegaTime){\n\n})","completion":" import typesQ from '@types\/q'\nimport sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport vegaView from 'vega-view'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport vegaViewTransforms from 'vega-view-transforms'\nimport vegaThemes from 'vega-themes'\nimport vegaSelections from 'vega-selections'\nimport fimbulWotan from '@fimbul\/wotan'\nimport flowParser from 'flow-parser'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport typesGulp from '@types\/gulp'\nimport typesMicrosoftTypescriptEtw from '@types\/microsoft__typescript-etw'\nimport arg from 'arg'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport yarn from 'yarn'\nimport vegaLoader from 'vega-loader'\nimport vegaFunctions from 'vega-functions'\nimport vegaTime from 'vega-time'\n\n"}
{"prompt":"define(['prex','v8-compile-cache-lib','which-boxed-primitive','mocha-fivemat-progress-reporter','which-module','yn','isexe','vinyl-sourcemaps-apply'], function(prex,v8CompileCacheLib,whichBoxedPrimitive,mochaFivematProgressReporter,whichModule,yn,isexe,vinylSourcemapsApply){\n\n})","completion":" import prex from 'prex'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport mochaFivematProgressReporter from 'mocha-fivemat-progress-reporter'\nimport whichModule from 'which-module'\nimport yn from 'yn'\nimport isexe from 'isexe'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\n\n"}
{"prompt":"define(['@types\/microsoft__typescript-etw','rollup-plugin-cleanup','is-boolean-object','is-bigint','xml2js'], function(typesMicrosoftTypescriptEtw,rollupPluginCleanup,isBooleanObject,isBigint,xml2Js){\n\n})","completion":" import typesMicrosoftTypescriptEtw from '@types\/microsoft__typescript-etw'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport isBooleanObject from 'is-boolean-object'\nimport isBigint from 'is-bigint'\nimport xml2Js from 'xml2js'\n\n"}
{"prompt":"define(['tslint-plugin-prettier'], function(tslintPluginPrettier){\n\n})","completion":" import tslintPluginPrettier from 'tslint-plugin-prettier'\n\n"}
{"prompt":"define(['rollup-plugin-bundle-size','js-yaml','dprint','d3-shape','merge2','@yarnpkg\/fslib','vega-hierarchy','acorn-walk','d3-delaunay'], function(rollupPluginBundleSize,jsYaml,dprint,d3Shape,merge2,yarnpkgFslib,vegaHierarchy,acornWalk,d3Delaunay){\n\n})","completion":" import rollupPluginBundleSize from 'rollup-plugin-bundle-size'\nimport jsYaml from 'js-yaml'\nimport dprint from 'dprint'\nimport d3Shape from 'd3-shape'\nimport merge2 from 'merge2'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport vegaHierarchy from 'vega-hierarchy'\nimport acornWalk from 'acorn-walk'\nimport d3Delaunay from 'd3-delaunay'\n\n"}
{"prompt":"define(['@types\/ms','ts-transform-default-export','dprint','d3','d3-force','recast','node-sass','require-main-filename','vega-parser','make-error','start-server-and-test','@types\/react'], function(typesMs,tsTransformDefaultExport,dprint,d3,d3Force,recast,nodeSass,requireMainFilename,vegaParser,makeError,startServerAndTest,typesReact){\n\n})","completion":" import typesMs from '@types\/ms'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport dprint from 'dprint'\nimport d3 from 'd3'\nimport d3Force from 'd3-force'\nimport recast from 'recast'\nimport nodeSass from 'node-sass'\nimport requireMainFilename from 'require-main-filename'\nimport vegaParser from 'vega-parser'\nimport makeError from 'make-error'\nimport startServerAndTest from 'start-server-and-test'\nimport typesReact from '@types\/react'\n\n"}
{"prompt":"define(['ts-transform-default-export','start-server-and-test','create-require'], function(tsTransformDefaultExport,startServerAndTest,createRequire){\n\n})","completion":" import tsTransformDefaultExport from 'ts-transform-default-export'\nimport startServerAndTest from 'start-server-and-test'\nimport createRequire from 'create-require'\n\n"}
{"prompt":"define(['@types\/proper-lockfile','tslint-test-config-non-relative','vinyl','vega-themes','eslint-config-lydell','arg','tslint-consistent-codestyle','vega-functions'], function(typesProperLockfile,tslintTestConfigNonRelative,vinyl,vegaThemes,eslintConfigLydell,arg,tslintConsistentCodestyle,vegaFunctions){\n\n})","completion":" import typesProperLockfile from '@types\/proper-lockfile'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport vinyl from 'vinyl'\nimport vegaThemes from 'vega-themes'\nimport eslintConfigLydell from 'eslint-config-lydell'\nimport arg from 'arg'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport vegaFunctions from 'vega-functions'\n\n"}
{"prompt":"define(['vinyl-sourcemaps-apply','vega-tooltip','github-release-from-changelog','start-server-and-test','eslint-plugin-no-null','@tsconfig\/node14','vega-parser','vega-transforms','vega-schema-url-parser','is-number-object','yargs-test-extends','xml2js','isexe','d3-shape','memfs'], function(vinylSourcemapsApply,vegaTooltip,githubReleaseFromChangelog,startServerAndTest,eslintPluginNoNull,tsconfigNode14,vegaParser,vegaTransforms,vegaSchemaUrlParser,isNumberObject,yargsTestExtends,xml2Js,isexe,d3Shape,memfs){\n\n})","completion":" import vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport vegaTooltip from 'vega-tooltip'\nimport githubReleaseFromChangelog from 'github-release-from-changelog'\nimport startServerAndTest from 'start-server-and-test'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport tsconfigNode14 from '@tsconfig\/node14'\nimport vegaParser from 'vega-parser'\nimport vegaTransforms from 'vega-transforms'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport isNumberObject from 'is-number-object'\nimport yargsTestExtends from 'yargs-test-extends'\nimport xml2Js from 'xml2js'\nimport isexe from 'isexe'\nimport d3Shape from 'd3-shape'\nimport memfs from 'memfs'\n\n"}
{"prompt":"define(['common-tags','@types\/babel__code-frame','isexe','eslint-formatter-autolinkable-stylish','merge2'], function(commonTags,typesBabelCodeFrame,isexe,eslintFormatterAutolinkableStylish,merge2){\n\n})","completion":" import commonTags from 'common-tags'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport isexe from 'isexe'\nimport eslintFormatterAutolinkableStylish from 'eslint-formatter-autolinkable-stylish'\nimport merge2 from 'merge2'\n\n"}
{"prompt":"define(['promise-polyfill'], function(promisePolyfill){\n\n})","completion":" import promisePolyfill from 'promise-polyfill'\n\n"}
{"prompt":"define(['@types\/mkdirp','v8-compile-cache-lib','from','rollup-plugin-sourcemaps','@fimbul\/wotan','vega-encode','webidl2js','yargs-parser','is-boolean-object','unicode-property-value-aliases-ecmascript','array-flat-polyfill','arg','which-boxed-primitive','tslint-config-prettier','vega-util','create-require','fast-json-patch','ts-node-dev','ts-transform-default-export'], function(typesMkdirp,v8CompileCacheLib,from,rollupPluginSourcemaps,fimbulWotan,vegaEncode,webidl2Js,yargsParser,isBooleanObject,unicodePropertyValueAliasesEcmascript,arrayFlatPolyfill,arg,whichBoxedPrimitive,tslintConfigPrettier,vegaUtil,createRequire,fastJsonPatch,tsNodeDev,tsTransformDefaultExport){\n\n})","completion":" import typesMkdirp from '@types\/mkdirp'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport from from 'from'\nimport rollupPluginSourcemaps from 'rollup-plugin-sourcemaps'\nimport fimbulWotan from '@fimbul\/wotan'\nimport vegaEncode from 'vega-encode'\nimport webidl2Js from 'webidl2js'\nimport yargsParser from 'yargs-parser'\nimport isBooleanObject from 'is-boolean-object'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport arg from 'arg'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport tslintConfigPrettier from 'tslint-config-prettier'\nimport vegaUtil from 'vega-util'\nimport createRequire from 'create-require'\nimport fastJsonPatch from 'fast-json-patch'\nimport tsNodeDev from 'ts-node-dev'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\n\n"}
{"prompt":"define(['yargs-parser','yarn-deduplicate','decamelize','ignore'], function(yargsParser,yarnDeduplicate,decamelize,ignore){\n\n})","completion":" import yargsParser from 'yargs-parser'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport decamelize from 'decamelize'\nimport ignore from 'ignore'\n\n"}
{"prompt":"define(['recast','memfs','arg','@yarnpkg\/fslib','vega-runtime','@types\/mkdirp','dts-jest','fancy-log','gulp-insert','jest-canvas-mock','d3-geo-projection','v8-compile-cache-lib','array-flat-polyfill','vega-schema-url-parser','yaml-front-matter','promise-polyfill','from','gulp-sourcemaps','vega-util','merge2'], function(recast,memfs,arg,yarnpkgFslib,vegaRuntime,typesMkdirp,dtsJest,fancyLog,gulpInsert,jestCanvasMock,d3GeoProjection,v8CompileCacheLib,arrayFlatPolyfill,vegaSchemaUrlParser,yamlFrontMatter,promisePolyfill,from,gulpSourcemaps,vegaUtil,merge2){\n\n})","completion":" import recast from 'recast'\nimport memfs from 'memfs'\nimport arg from 'arg'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport vegaRuntime from 'vega-runtime'\nimport typesMkdirp from '@types\/mkdirp'\nimport dtsJest from 'dts-jest'\nimport fancyLog from 'fancy-log'\nimport gulpInsert from 'gulp-insert'\nimport jestCanvasMock from 'jest-canvas-mock'\nimport d3GeoProjection from 'd3-geo-projection'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport promisePolyfill from 'promise-polyfill'\nimport from from 'from'\nimport gulpSourcemaps from 'gulp-sourcemaps'\nimport vegaUtil from 'vega-util'\nimport merge2 from 'merge2'\n\n"}
{"prompt":"define(['is-boolean-object','vega-view-transforms','safe-regex','@types\/gulp','json-stringify-pretty-compact','unicode-property-value-aliases-ecmascript','d3-scale','@types\/npm-packlist','gulp-concat','vega-schema','@types\/puppeteer','promise-polyfill','@fimbul\/wotan','rollup-plugin-bundle-size','ts-clean-built','vega-schema-url-parser','vega-crossfilter'], function(isBooleanObject,vegaViewTransforms,safeRegex,typesGulp,jsonStringifyPrettyCompact,unicodePropertyValueAliasesEcmascript,d3Scale,typesNpmPacklist,gulpConcat,vegaSchema,typesPuppeteer,promisePolyfill,fimbulWotan,rollupPluginBundleSize,tsCleanBuilt,vegaSchemaUrlParser,vegaCrossfilter){\n\n})","completion":" import isBooleanObject from 'is-boolean-object'\nimport vegaViewTransforms from 'vega-view-transforms'\nimport safeRegex from 'safe-regex'\nimport typesGulp from '@types\/gulp'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport d3Scale from 'd3-scale'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport gulpConcat from 'gulp-concat'\nimport vegaSchema from 'vega-schema'\nimport typesPuppeteer from '@types\/puppeteer'\nimport promisePolyfill from 'promise-polyfill'\nimport fimbulWotan from '@fimbul\/wotan'\nimport rollupPluginBundleSize from 'rollup-plugin-bundle-size'\nimport tsCleanBuilt from 'ts-clean-built'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport vegaCrossfilter from 'vega-crossfilter'\n\n"}
{"prompt":"define(['eslint-plugin-no-null','tslint-plugin-prettier','d3-shape','tslint-consistent-codestyle'], function(eslintPluginNoNull,tslintPluginPrettier,d3Shape,tslintConsistentCodestyle){\n\n})","completion":" import eslintPluginNoNull from 'eslint-plugin-no-null'\nimport tslintPluginPrettier from 'tslint-plugin-prettier'\nimport d3Shape from 'd3-shape'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\n\n"}
{"prompt":"define(['tsutils','@types\/clone','typescript-tslint-plugin','node-sass','@types\/ms','eslint-config-lydell','util.promisify','pretty-quick','vega-transforms','vega-projection','is-number-object','@types\/gulp','@types\/gulp-newer','vega-view','prex'], function(tsutils,typesClone,typescriptTslintPlugin,nodeSass,typesMs,eslintConfigLydell,utilPromisify,prettyQuick,vegaTransforms,vegaProjection,isNumberObject,typesGulp,typesGulpNewer,vegaView,prex){\n\n})","completion":" import tsutils from 'tsutils'\nimport typesClone from '@types\/clone'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport nodeSass from 'node-sass'\nimport typesMs from '@types\/ms'\nimport eslintConfigLydell from 'eslint-config-lydell'\nimport utilPromisify from 'util.promisify'\nimport prettyQuick from 'pretty-quick'\nimport vegaTransforms from 'vega-transforms'\nimport vegaProjection from 'vega-projection'\nimport isNumberObject from 'is-number-object'\nimport typesGulp from '@types\/gulp'\nimport typesGulpNewer from '@types\/gulp-newer'\nimport vegaView from 'vega-view'\nimport prex from 'prex'\n\n"}
{"prompt":"define(['vinyl'], function(vinyl){\n\n})","completion":" import vinyl from 'vinyl'\n\n"}
{"prompt":"define(['@tsconfig\/node10','arg','has-ansi','vega-schema','vows','svg2png-many','d3-force','@types\/tape','eslint-config-lydell','@types\/d3','@types\/npm-packlist','path','@types\/clone','vega-runtime'], function(tsconfigNode10,arg,hasAnsi,vegaSchema,vows,svg2PngMany,d3Force,typesTape,eslintConfigLydell,typesD3,typesNpmPacklist,path,typesClone,vegaRuntime){\n\n})","completion":" import tsconfigNode10 from '@tsconfig\/node10'\nimport arg from 'arg'\nimport hasAnsi from 'has-ansi'\nimport vegaSchema from 'vega-schema'\nimport vows from 'vows'\nimport svg2PngMany from 'svg2png-many'\nimport d3Force from 'd3-force'\nimport typesTape from '@types\/tape'\nimport eslintConfigLydell from 'eslint-config-lydell'\nimport typesD3 from '@types\/d3'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport path from 'path'\nimport typesClone from '@types\/clone'\nimport vegaRuntime from 'vega-runtime'\n\n"}
{"prompt":"define(['create-require','highlight.js','d3-scale','vega-wordcloud','@types\/mkdirp','acorn-walk','@types\/merge2'], function(createRequire,highlightJs,d3Scale,vegaWordcloud,typesMkdirp,acornWalk,typesMerge2){\n\n})","completion":" import createRequire from 'create-require'\nimport highlightJs from 'highlight.js'\nimport d3Scale from 'd3-scale'\nimport vegaWordcloud from 'vega-wordcloud'\nimport typesMkdirp from '@types\/mkdirp'\nimport acornWalk from 'acorn-walk'\nimport typesMerge2 from '@types\/merge2'\n\n"}
{"prompt":"define(['d3-geo-projection','vega-projection','@types\/ms'], function(d3GeoProjection,vegaProjection,typesMs){\n\n})","completion":" import d3GeoProjection from 'd3-geo-projection'\nimport vegaProjection from 'vega-projection'\nimport typesMs from '@types\/ms'\n\n"}
{"prompt":"define(['@types\/js-yaml','is-number-object','@types\/gulp-rename','flow-parser','@cspotcode\/source-map-support'], function(typesJsYaml,isNumberObject,typesGulpRename,flowParser,cspotcodeSourceMapSupport){\n\n})","completion":" import typesJsYaml from '@types\/js-yaml'\nimport isNumberObject from 'is-number-object'\nimport typesGulpRename from '@types\/gulp-rename'\nimport flowParser from 'flow-parser'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\n\n"}
{"prompt":"define(['@types\/microsoft__typescript-etw','@types\/js-yaml','safe-regex','require-directory','require-main-filename','is-number-object','arg','@types\/source-map-support','@types\/clone','@cspotcode\/source-map-support','dprint','@types\/q'], function(typesMicrosoftTypescriptEtw,typesJsYaml,safeRegex,requireDirectory,requireMainFilename,isNumberObject,arg,typesSourceMapSupport,typesClone,cspotcodeSourceMapSupport,dprint,typesQ){\n\n})","completion":" import typesMicrosoftTypescriptEtw from '@types\/microsoft__typescript-etw'\nimport typesJsYaml from '@types\/js-yaml'\nimport safeRegex from 'safe-regex'\nimport requireDirectory from 'require-directory'\nimport requireMainFilename from 'require-main-filename'\nimport isNumberObject from 'is-number-object'\nimport arg from 'arg'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport typesClone from '@types\/clone'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport dprint from 'dprint'\nimport typesQ from '@types\/q'\n\n"}
{"prompt":"define(['vega-runtime','d3-geo-projection'], function(vegaRuntime,d3GeoProjection){\n\n})","completion":" import vegaRuntime from 'vega-runtime'\nimport d3GeoProjection from 'd3-geo-projection'\n\n"}
{"prompt":"define(['tslint-config-prettier','@types\/fast-json-stable-stringify','@types\/gulp-concat','gulp-concat','@microsoft\/api-extractor','@types\/source-map-support','path','util.promisify','which-module','d3-force','vega-force','eslint-plugin-no-null'], function(tslintConfigPrettier,typesFastJsonStableStringify,typesGulpConcat,gulpConcat,microsoftApiExtractor,typesSourceMapSupport,path,utilPromisify,whichModule,d3Force,vegaForce,eslintPluginNoNull){\n\n})","completion":" import tslintConfigPrettier from 'tslint-config-prettier'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport gulpConcat from 'gulp-concat'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport path from 'path'\nimport utilPromisify from 'util.promisify'\nimport whichModule from 'which-module'\nimport d3Force from 'd3-force'\nimport vegaForce from 'vega-force'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\n\n"}
{"prompt":"define(['util.promisify','vega-datasets','eslint-config-lydell','eslint-plugin-no-null','clean-ts-built','@types\/mkdirp','vega-label','@types\/q','os-tmpdir','vega-cli','microbundle','@types\/fast-json-stable-stringify','ts-node-dev'], function(utilPromisify,vegaDatasets,eslintConfigLydell,eslintPluginNoNull,cleanTsBuilt,typesMkdirp,vegaLabel,typesQ,osTmpdir,vegaCli,microbundle,typesFastJsonStableStringify,tsNodeDev){\n\n})","completion":" import utilPromisify from 'util.promisify'\nimport vegaDatasets from 'vega-datasets'\nimport eslintConfigLydell from 'eslint-config-lydell'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport cleanTsBuilt from 'clean-ts-built'\nimport typesMkdirp from '@types\/mkdirp'\nimport vegaLabel from 'vega-label'\nimport typesQ from '@types\/q'\nimport osTmpdir from 'os-tmpdir'\nimport vegaCli from 'vega-cli'\nimport microbundle from 'microbundle'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport tsNodeDev from 'ts-node-dev'\n\n"}
{"prompt":"define(['tslint-config-prettier','@types\/gulp-newer','@types\/gulp','hashish','d3-delaunay','yarn-deduplicate','svg2png-many','vega-scale','has-ansi','vega-encode','vega-voronoi','vega-view-transforms','@types\/fast-json-stable-stringify','@types\/gulp-concat','@tsconfig\/node16'], function(tslintConfigPrettier,typesGulpNewer,typesGulp,hashish,d3Delaunay,yarnDeduplicate,svg2PngMany,vegaScale,hasAnsi,vegaEncode,vegaVoronoi,vegaViewTransforms,typesFastJsonStableStringify,typesGulpConcat,tsconfigNode16){\n\n})","completion":" import tslintConfigPrettier from 'tslint-config-prettier'\nimport typesGulpNewer from '@types\/gulp-newer'\nimport typesGulp from '@types\/gulp'\nimport hashish from 'hashish'\nimport d3Delaunay from 'd3-delaunay'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport svg2PngMany from 'svg2png-many'\nimport vegaScale from 'vega-scale'\nimport hasAnsi from 'has-ansi'\nimport vegaEncode from 'vega-encode'\nimport vegaVoronoi from 'vega-voronoi'\nimport vegaViewTransforms from 'vega-view-transforms'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport tsconfigNode16 from '@tsconfig\/node16'\n\n"}
{"prompt":"define(['rollup-plugin-sourcemaps','gulp-newer','vega-hierarchy','yargs-test-extends','vega-force','eslint-config-lydell','cpr','tslint-consistent-codestyle','vega-voronoi','yargs-parser','vega-view','rxjs','vega-expression','pretty-quick','create-require','@types\/react','eslint-plugin-github','@yarnpkg\/fslib','vega-view-transforms','tslint-test-config-non-relative'], function(rollupPluginSourcemaps,gulpNewer,vegaHierarchy,yargsTestExtends,vegaForce,eslintConfigLydell,cpr,tslintConsistentCodestyle,vegaVoronoi,yargsParser,vegaView,rxjs,vegaExpression,prettyQuick,createRequire,typesReact,eslintPluginGithub,yarnpkgFslib,vegaViewTransforms,tslintTestConfigNonRelative){\n\n})","completion":" import rollupPluginSourcemaps from 'rollup-plugin-sourcemaps'\nimport gulpNewer from 'gulp-newer'\nimport vegaHierarchy from 'vega-hierarchy'\nimport yargsTestExtends from 'yargs-test-extends'\nimport vegaForce from 'vega-force'\nimport eslintConfigLydell from 'eslint-config-lydell'\nimport cpr from 'cpr'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport vegaVoronoi from 'vega-voronoi'\nimport yargsParser from 'yargs-parser'\nimport vegaView from 'vega-view'\nimport rxjs from 'rxjs'\nimport vegaExpression from 'vega-expression'\nimport prettyQuick from 'pretty-quick'\nimport createRequire from 'create-require'\nimport typesReact from '@types\/react'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport vegaViewTransforms from 'vega-view-transforms'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\n\n"}
{"prompt":"define(['tsutils','vega-projection','ini','vega-transforms','@tsconfig\/node14','vega-dataflow','@types\/minimist','throat','@fimbul\/valtyr','typescript-tslint-plugin','@tsconfig\/node16','d3-scale','vega-time','@types\/babel__code-frame','vega-schema-url-parser','vega-format','tslint-consistent-codestyle','d3','vega-typings','rollup-plugin-bundle-size'], function(tsutils,vegaProjection,ini,vegaTransforms,tsconfigNode14,vegaDataflow,typesMinimist,throat,fimbulValtyr,typescriptTslintPlugin,tsconfigNode16,d3Scale,vegaTime,typesBabelCodeFrame,vegaSchemaUrlParser,vegaFormat,tslintConsistentCodestyle,d3,vegaTypings,rollupPluginBundleSize){\n\n})","completion":" import tsutils from 'tsutils'\nimport vegaProjection from 'vega-projection'\nimport ini from 'ini'\nimport vegaTransforms from 'vega-transforms'\nimport tsconfigNode14 from '@tsconfig\/node14'\nimport vegaDataflow from 'vega-dataflow'\nimport typesMinimist from '@types\/minimist'\nimport throat from 'throat'\nimport fimbulValtyr from '@fimbul\/valtyr'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport tsconfigNode16 from '@tsconfig\/node16'\nimport d3Scale from 'd3-scale'\nimport vegaTime from 'vega-time'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport vegaFormat from 'vega-format'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport d3 from 'd3'\nimport vegaTypings from 'vega-typings'\nimport rollupPluginBundleSize from 'rollup-plugin-bundle-size'\n\n"}
{"prompt":"define(['@types\/gulp-sourcemaps'], function(typesGulpSourcemaps){\n\n})","completion":" import typesGulpSourcemaps from '@types\/gulp-sourcemaps'\n\n"}
{"prompt":"define(['dprint','acorn-walk','npm-packlist','d3','vega-geo','eslint-formatter-autolinkable-stylish','vega-schema-url-parser','vega-voronoi','@types\/npm-packlist','@types\/proper-lockfile','rxjs','camelcase','vinyl'], function(dprint,acornWalk,npmPacklist,d3,vegaGeo,eslintFormatterAutolinkableStylish,vegaSchemaUrlParser,vegaVoronoi,typesNpmPacklist,typesProperLockfile,rxjs,camelcase,vinyl){\n\n})","completion":" import dprint from 'dprint'\nimport acornWalk from 'acorn-walk'\nimport npmPacklist from 'npm-packlist'\nimport d3 from 'd3'\nimport vegaGeo from 'vega-geo'\nimport eslintFormatterAutolinkableStylish from 'eslint-formatter-autolinkable-stylish'\nimport vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport vegaVoronoi from 'vega-voronoi'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport rxjs from 'rxjs'\nimport camelcase from 'camelcase'\nimport vinyl from 'vinyl'\n\n"}
{"prompt":"define(['jest-canvas-mock','yarn-deduplicate','vega-functions','clean-ts-built','tslint-test-config-non-relative','@types\/proxyquire','which-module','detect-indent','start-server-and-test','node-sass','js-yaml','promise-polyfill','vega-voronoi','vega-runtime','@types\/fast-json-stable-stringify'], function(jestCanvasMock,yarnDeduplicate,vegaFunctions,cleanTsBuilt,tslintTestConfigNonRelative,typesProxyquire,whichModule,detectIndent,startServerAndTest,nodeSass,jsYaml,promisePolyfill,vegaVoronoi,vegaRuntime,typesFastJsonStableStringify){\n\n})","completion":" import jestCanvasMock from 'jest-canvas-mock'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport vegaFunctions from 'vega-functions'\nimport cleanTsBuilt from 'clean-ts-built'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport typesProxyquire from '@types\/proxyquire'\nimport whichModule from 'which-module'\nimport detectIndent from 'detect-indent'\nimport startServerAndTest from 'start-server-and-test'\nimport nodeSass from 'node-sass'\nimport jsYaml from 'js-yaml'\nimport promisePolyfill from 'promise-polyfill'\nimport vegaVoronoi from 'vega-voronoi'\nimport vegaRuntime from 'vega-runtime'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\n\n"}
{"prompt":"define(['@fimbul\/valtyr','yarn','yaml-front-matter','decamelize','vega-runtime'], function(fimbulValtyr,yarn,yamlFrontMatter,decamelize,vegaRuntime){\n\n})","completion":" import fimbulValtyr from '@fimbul\/valtyr'\nimport yarn from 'yarn'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport decamelize from 'decamelize'\nimport vegaRuntime from 'vega-runtime'\n\n"}
{"prompt":"define(['babel-plugin-trace','memfs','homedir-polyfill','@types\/gulp-rename','yargs-test-extends','@types\/npm-packlist','@types\/babel__code-frame','safe-regex','util.promisify','vega-force','proper-lockfile','rollup-plugin-bundle-size','v8-compile-cache-lib','vega-dataflow','path'], function(babelPluginTrace,memfs,homedirPolyfill,typesGulpRename,yargsTestExtends,typesNpmPacklist,typesBabelCodeFrame,safeRegex,utilPromisify,vegaForce,properLockfile,rollupPluginBundleSize,v8CompileCacheLib,vegaDataflow,path){\n\n})","completion":" import babelPluginTrace from 'babel-plugin-trace'\nimport memfs from 'memfs'\nimport homedirPolyfill from 'homedir-polyfill'\nimport typesGulpRename from '@types\/gulp-rename'\nimport yargsTestExtends from 'yargs-test-extends'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport safeRegex from 'safe-regex'\nimport utilPromisify from 'util.promisify'\nimport vegaForce from 'vega-force'\nimport properLockfile from 'proper-lockfile'\nimport rollupPluginBundleSize from 'rollup-plugin-bundle-size'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport vegaDataflow from 'vega-dataflow'\nimport path from 'path'\n\n"}
{"prompt":"define(['stream-spec','yargs-parser','which-boxed-primitive','@types\/microsoft__typescript-etw','typescript-tslint-plugin','eslint-plugin-no-null','d3-geo-projection','@types\/clone','rollup-plugin-bundle-size','gulp-concat','svg2png-many','is-boolean-object','json-stringify-pretty-compact','@octokit\/rest','start-server-and-test'], function(streamSpec,yargsParser,whichBoxedPrimitive,typesMicrosoftTypescriptEtw,typescriptTslintPlugin,eslintPluginNoNull,d3GeoProjection,typesClone,rollupPluginBundleSize,gulpConcat,svg2PngMany,isBooleanObject,jsonStringifyPrettyCompact,octokitRest,startServerAndTest){\n\n})","completion":" import streamSpec from 'stream-spec'\nimport yargsParser from 'yargs-parser'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport typesMicrosoftTypescriptEtw from '@types\/microsoft__typescript-etw'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport d3GeoProjection from 'd3-geo-projection'\nimport typesClone from '@types\/clone'\nimport rollupPluginBundleSize from 'rollup-plugin-bundle-size'\nimport gulpConcat from 'gulp-concat'\nimport svg2PngMany from 'svg2png-many'\nimport isBooleanObject from 'is-boolean-object'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport octokitRest from '@octokit\/rest'\nimport startServerAndTest from 'start-server-and-test'\n\n"}
{"prompt":"define(['yarn-deduplicate','d3-force','builtin-modules','dprint'], function(yarnDeduplicate,d3Force,builtinModules,dprint){\n\n})","completion":" import yarnDeduplicate from 'yarn-deduplicate'\nimport d3Force from 'd3-force'\nimport builtinModules from 'builtin-modules'\nimport dprint from 'dprint'\n\n"}
{"prompt":"define(['vega-statistics','@types\/xml2js','vega-hierarchy','ts-transform-default-export','vega-tooltip','yargs-parser','vega-label','y18n','yarn','jest-canvas-mock','tr46','jest-puppeteer','@types\/gulp-concat','rxjs','unicode-property-aliases-ecmascript','array-flat-polyfill','path'], function(vegaStatistics,typesXml2Js,vegaHierarchy,tsTransformDefaultExport,vegaTooltip,yargsParser,vegaLabel,y18N,yarn,jestCanvasMock,tr46,jestPuppeteer,typesGulpConcat,rxjs,unicodePropertyAliasesEcmascript,arrayFlatPolyfill,path){\n\n})","completion":" import vegaStatistics from 'vega-statistics'\nimport typesXml2Js from '@types\/xml2js'\nimport vegaHierarchy from 'vega-hierarchy'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport vegaTooltip from 'vega-tooltip'\nimport yargsParser from 'yargs-parser'\nimport vegaLabel from 'vega-label'\nimport y18N from 'y18n'\nimport yarn from 'yarn'\nimport jestCanvasMock from 'jest-canvas-mock'\nimport tr46 from 'tr46'\nimport jestPuppeteer from 'jest-puppeteer'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport rxjs from 'rxjs'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport path from 'path'\n\n"}
{"prompt":"define(['@types\/js-yaml','os-tmpdir','prex','require-directory','vega-functions','cliui','eslint-plugin-no-null','clean-ts-built','which-boxed-primitive','flow-parser'], function(typesJsYaml,osTmpdir,prex,requireDirectory,vegaFunctions,cliui,eslintPluginNoNull,cleanTsBuilt,whichBoxedPrimitive,flowParser){\n\n})","completion":" import typesJsYaml from '@types\/js-yaml'\nimport osTmpdir from 'os-tmpdir'\nimport prex from 'prex'\nimport requireDirectory from 'require-directory'\nimport vegaFunctions from 'vega-functions'\nimport cliui from 'cliui'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport cleanTsBuilt from 'clean-ts-built'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport flowParser from 'flow-parser'\n\n"}
{"prompt":"define(['@types\/d3','vega-force','is-boolean-object','y18n','vega-runtime','proper-lockfile','serve','@tsconfig\/node10','vega-lite-dev-config','azure-devops-node-api','@typescript-eslint\/experimental-utils','highlight.js','@tsconfig\/node14','camelcase','vega-util'], function(typesD3,vegaForce,isBooleanObject,y18N,vegaRuntime,properLockfile,serve,tsconfigNode10,vegaLiteDevConfig,azureDevopsNodeApi,typescriptEslintExperimentalUtils,highlightJs,tsconfigNode14,camelcase,vegaUtil){\n\n})","completion":" import typesD3 from '@types\/d3'\nimport vegaForce from 'vega-force'\nimport isBooleanObject from 'is-boolean-object'\nimport y18N from 'y18n'\nimport vegaRuntime from 'vega-runtime'\nimport properLockfile from 'proper-lockfile'\nimport serve from 'serve'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport highlightJs from 'highlight.js'\nimport tsconfigNode14 from '@tsconfig\/node14'\nimport camelcase from 'camelcase'\nimport vegaUtil from 'vega-util'\n\n"}
{"prompt":"define(['vinyl-sourcemaps-apply','d3-force','vega-datasets','recast'], function(vinylSourcemapsApply,d3Force,vegaDatasets,recast){\n\n})","completion":" import vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport d3Force from 'd3-force'\nimport vegaDatasets from 'vega-datasets'\nimport recast from 'recast'\n\n"}
{"prompt":"define(['@types\/react','vega-tooltip','@types\/tape','@cspotcode\/source-map-support','vega-crossfilter','promise-polyfill','webidl2js','d3-geo-projection','colortape','svg2png-many','unicode-property-aliases-ecmascript','vega-parser','ts-node-dev','d3-hierarchy','@tsconfig\/node12','jest-puppeteer'], function(typesReact,vegaTooltip,typesTape,cspotcodeSourceMapSupport,vegaCrossfilter,promisePolyfill,webidl2Js,d3GeoProjection,colortape,svg2PngMany,unicodePropertyAliasesEcmascript,vegaParser,tsNodeDev,d3Hierarchy,tsconfigNode12,jestPuppeteer){\n\n})","completion":" import typesReact from '@types\/react'\nimport vegaTooltip from 'vega-tooltip'\nimport typesTape from '@types\/tape'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport promisePolyfill from 'promise-polyfill'\nimport webidl2Js from 'webidl2js'\nimport d3GeoProjection from 'd3-geo-projection'\nimport colortape from 'colortape'\nimport svg2PngMany from 'svg2png-many'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport vegaParser from 'vega-parser'\nimport tsNodeDev from 'ts-node-dev'\nimport d3Hierarchy from 'd3-hierarchy'\nimport tsconfigNode12 from '@tsconfig\/node12'\nimport jestPuppeteer from 'jest-puppeteer'\n\n"}
{"prompt":"define(['@types\/xml2js','rollup-plugin-bundle-size','ts-transform-default-export','vega-view','@tsconfig\/node10'], function(typesXml2Js,rollupPluginBundleSize,tsTransformDefaultExport,vegaView,tsconfigNode10){\n\n})","completion":" import typesXml2Js from '@types\/xml2js'\nimport rollupPluginBundleSize from 'rollup-plugin-bundle-size'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport vegaView from 'vega-view'\nimport tsconfigNode10 from '@tsconfig\/node10'\n\n"}
{"prompt":"define(['throat'], function(throat){\n\n})","completion":" import throat from 'throat'\n\n"}
{"prompt":"define(['yarn','rollup-plugin-sourcemaps','create-require','isexe','@types\/q','@types\/microsoft__typescript-etw','vega-view','d3','has-ansi','vega-format'], function(yarn,rollupPluginSourcemaps,createRequire,isexe,typesQ,typesMicrosoftTypescriptEtw,vegaView,d3,hasAnsi,vegaFormat){\n\n})","completion":" import yarn from 'yarn'\nimport rollupPluginSourcemaps from 'rollup-plugin-sourcemaps'\nimport createRequire from 'create-require'\nimport isexe from 'isexe'\nimport typesQ from '@types\/q'\nimport typesMicrosoftTypescriptEtw from '@types\/microsoft__typescript-etw'\nimport vegaView from 'vega-view'\nimport d3 from 'd3'\nimport hasAnsi from 'has-ansi'\nimport vegaFormat from 'vega-format'\n\n"}
{"prompt":"define(['vows','ini','eslint-plugin-no-null','@types\/npm-packlist','yarn','is-bigint'], function(vows,ini,eslintPluginNoNull,typesNpmPacklist,yarn,isBigint){\n\n})","completion":" import vows from 'vows'\nimport ini from 'ini'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport yarn from 'yarn'\nimport isBigint from 'is-bigint'\n\n"}
{"prompt":"define(['proper-lockfile','d3-force','vega-regression','vega-loader','homedir-polyfill','has-ansi','@types\/fast-json-stable-stringify','rollup-plugin-cleanup','safe-regex','vega-typings','d3-delaunay','@types\/merge2'], function(properLockfile,d3Force,vegaRegression,vegaLoader,homedirPolyfill,hasAnsi,typesFastJsonStableStringify,rollupPluginCleanup,safeRegex,vegaTypings,d3Delaunay,typesMerge2){\n\n})","completion":" import properLockfile from 'proper-lockfile'\nimport d3Force from 'd3-force'\nimport vegaRegression from 'vega-regression'\nimport vegaLoader from 'vega-loader'\nimport homedirPolyfill from 'homedir-polyfill'\nimport hasAnsi from 'has-ansi'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport safeRegex from 'safe-regex'\nimport vegaTypings from 'vega-typings'\nimport d3Delaunay from 'd3-delaunay'\nimport typesMerge2 from '@types\/merge2'\n\n"}
{"prompt":"define(['tslint-consistent-codestyle','vega-scenegraph','@fimbul\/wotan','d3-delaunay','ignore','vega-statistics','@types\/diff','@types\/clone','common-tags','d3-geo-projection','vega-event-selector','@tsconfig\/node14','dprint','svg2png-many','unicode-property-value-aliases-ecmascript'], function(tslintConsistentCodestyle,vegaScenegraph,fimbulWotan,d3Delaunay,ignore,vegaStatistics,typesDiff,typesClone,commonTags,d3GeoProjection,vegaEventSelector,tsconfigNode14,dprint,svg2PngMany,unicodePropertyValueAliasesEcmascript){\n\n})","completion":" import tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport vegaScenegraph from 'vega-scenegraph'\nimport fimbulWotan from '@fimbul\/wotan'\nimport d3Delaunay from 'd3-delaunay'\nimport ignore from 'ignore'\nimport vegaStatistics from 'vega-statistics'\nimport typesDiff from '@types\/diff'\nimport typesClone from '@types\/clone'\nimport commonTags from 'common-tags'\nimport d3GeoProjection from 'd3-geo-projection'\nimport vegaEventSelector from 'vega-event-selector'\nimport tsconfigNode14 from '@tsconfig\/node14'\nimport dprint from 'dprint'\nimport svg2PngMany from 'svg2png-many'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\n\n"}
{"prompt":"define(['ignore','eslint-formatter-autolinkable-stylish','start-server-and-test','d3-delaunay','tr46','ts-node-dev','get-stream','@types\/ms','os-tmpdir'], function(ignore,eslintFormatterAutolinkableStylish,startServerAndTest,d3Delaunay,tr46,tsNodeDev,getStream,typesMs,osTmpdir){\n\n})","completion":" import ignore from 'ignore'\nimport eslintFormatterAutolinkableStylish from 'eslint-formatter-autolinkable-stylish'\nimport startServerAndTest from 'start-server-and-test'\nimport d3Delaunay from 'd3-delaunay'\nimport tr46 from 'tr46'\nimport tsNodeDev from 'ts-node-dev'\nimport getStream from 'get-stream'\nimport typesMs from '@types\/ms'\nimport osTmpdir from 'os-tmpdir'\n\n"}
{"prompt":"define(['prex','ts-json-schema-generator','tslint-config-prettier','npm-packlist','rxjs','@types\/gulp-sourcemaps','@types\/gulp-newer','vega-canvas','yarn','stream-spec','d3-hierarchy','vega-lite-dev-config','vega-transforms','d3-scale','is-boolean-object','@types\/q'], function(prex,tsJsonSchemaGenerator,tslintConfigPrettier,npmPacklist,rxjs,typesGulpSourcemaps,typesGulpNewer,vegaCanvas,yarn,streamSpec,d3Hierarchy,vegaLiteDevConfig,vegaTransforms,d3Scale,isBooleanObject,typesQ){\n\n})","completion":" import prex from 'prex'\nimport tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport tslintConfigPrettier from 'tslint-config-prettier'\nimport npmPacklist from 'npm-packlist'\nimport rxjs from 'rxjs'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport typesGulpNewer from '@types\/gulp-newer'\nimport vegaCanvas from 'vega-canvas'\nimport yarn from 'yarn'\nimport streamSpec from 'stream-spec'\nimport d3Hierarchy from 'd3-hierarchy'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport vegaTransforms from 'vega-transforms'\nimport d3Scale from 'd3-scale'\nimport isBooleanObject from 'is-boolean-object'\nimport typesQ from '@types\/q'\n\n"}
{"prompt":"define(['proper-lockfile','unicode-property-aliases-ecmascript','d3-geo-projection','gulp-insert','@types\/babel__code-frame','vega-crossfilter','yn','prex','tslint-consistent-codestyle','vega-scenegraph','y18n','azure-devops-node-api','vega-functions','promise-polyfill','ignore','dts-jest','cliui','@types\/proper-lockfile','@types\/npm-packlist','@types\/gulp-concat'], function(properLockfile,unicodePropertyAliasesEcmascript,d3GeoProjection,gulpInsert,typesBabelCodeFrame,vegaCrossfilter,yn,prex,tslintConsistentCodestyle,vegaScenegraph,y18N,azureDevopsNodeApi,vegaFunctions,promisePolyfill,ignore,dtsJest,cliui,typesProperLockfile,typesNpmPacklist,typesGulpConcat){\n\n})","completion":" import properLockfile from 'proper-lockfile'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport d3GeoProjection from 'd3-geo-projection'\nimport gulpInsert from 'gulp-insert'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport yn from 'yn'\nimport prex from 'prex'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport vegaScenegraph from 'vega-scenegraph'\nimport y18N from 'y18n'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport vegaFunctions from 'vega-functions'\nimport promisePolyfill from 'promise-polyfill'\nimport ignore from 'ignore'\nimport dtsJest from 'dts-jest'\nimport cliui from 'cliui'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport typesGulpConcat from '@types\/gulp-concat'\n\n"}
{"prompt":"define(['vega-statistics','tr46','vega-transforms','vega-scenegraph','vega-projection','svg2png-many','vega-dataflow','verup','eslint-plugin-no-null','vega-view','@types\/npm-packlist','@types\/babel__code-frame','@types\/fast-json-stable-stringify'], function(vegaStatistics,tr46,vegaTransforms,vegaScenegraph,vegaProjection,svg2PngMany,vegaDataflow,verup,eslintPluginNoNull,vegaView,typesNpmPacklist,typesBabelCodeFrame,typesFastJsonStableStringify){\n\n})","completion":" import vegaStatistics from 'vega-statistics'\nimport tr46 from 'tr46'\nimport vegaTransforms from 'vega-transforms'\nimport vegaScenegraph from 'vega-scenegraph'\nimport vegaProjection from 'vega-projection'\nimport svg2PngMany from 'svg2png-many'\nimport vegaDataflow from 'vega-dataflow'\nimport verup from 'verup'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport vegaView from 'vega-view'\nimport typesNpmPacklist from '@types\/npm-packlist'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\n\n"}
{"prompt":"define(['@types\/react','@types\/gulp-sourcemaps','builtin-modules','vega-parser','@types\/gulp-concat','rxjs','gulp-sourcemaps','@types\/js-yaml','detect-indent','vega-datasets','promise-polyfill','from','d3-shape','node-sass','vega-format','isexe','@types\/babel__code-frame','vega-expression','gulp-newer','vega-view'], function(typesReact,typesGulpSourcemaps,builtinModules,vegaParser,typesGulpConcat,rxjs,gulpSourcemaps,typesJsYaml,detectIndent,vegaDatasets,promisePolyfill,from,d3Shape,nodeSass,vegaFormat,isexe,typesBabelCodeFrame,vegaExpression,gulpNewer,vegaView){\n\n})","completion":" import typesReact from '@types\/react'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport builtinModules from 'builtin-modules'\nimport vegaParser from 'vega-parser'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport rxjs from 'rxjs'\nimport gulpSourcemaps from 'gulp-sourcemaps'\nimport typesJsYaml from '@types\/js-yaml'\nimport detectIndent from 'detect-indent'\nimport vegaDatasets from 'vega-datasets'\nimport promisePolyfill from 'promise-polyfill'\nimport from from 'from'\nimport d3Shape from 'd3-shape'\nimport nodeSass from 'node-sass'\nimport vegaFormat from 'vega-format'\nimport isexe from 'isexe'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport vegaExpression from 'vega-expression'\nimport gulpNewer from 'gulp-newer'\nimport vegaView from 'vega-view'\n\n"}
{"prompt":"define(['rxjs','eslint-formatter-autolinkable-stylish','prex','vega-datasets','jest-puppeteer','webidl2js','vega-util','os-tmpdir','vega-themes','@types\/minimist','@types\/js-yaml'], function(rxjs,eslintFormatterAutolinkableStylish,prex,vegaDatasets,jestPuppeteer,webidl2Js,vegaUtil,osTmpdir,vegaThemes,typesMinimist,typesJsYaml){\n\n})","completion":" import rxjs from 'rxjs'\nimport eslintFormatterAutolinkableStylish from 'eslint-formatter-autolinkable-stylish'\nimport prex from 'prex'\nimport vegaDatasets from 'vega-datasets'\nimport jestPuppeteer from 'jest-puppeteer'\nimport webidl2Js from 'webidl2js'\nimport vegaUtil from 'vega-util'\nimport osTmpdir from 'os-tmpdir'\nimport vegaThemes from 'vega-themes'\nimport typesMinimist from '@types\/minimist'\nimport typesJsYaml from '@types\/js-yaml'\n\n"}
{"prompt":"define(['homedir-polyfill','microbundle','xml2js','@types\/puppeteer','rxjs','ts-clean-built','vega-expression','vega-parser'], function(homedirPolyfill,microbundle,xml2Js,typesPuppeteer,rxjs,tsCleanBuilt,vegaExpression,vegaParser){\n\n})","completion":" import homedirPolyfill from 'homedir-polyfill'\nimport microbundle from 'microbundle'\nimport xml2Js from 'xml2js'\nimport typesPuppeteer from '@types\/puppeteer'\nimport rxjs from 'rxjs'\nimport tsCleanBuilt from 'ts-clean-built'\nimport vegaExpression from 'vega-expression'\nimport vegaParser from 'vega-parser'\n\n"}
{"prompt":"define(['vega-crossfilter','vega-lite-dev-config','@types\/microsoft__typescript-etw','npm-packlist','detect-indent','vega-util','yarn-deduplicate','d3','is-bigint','github-release-from-changelog','d3-shape','mocha-fivemat-progress-reporter','unicode-property-aliases-ecmascript','homedir-polyfill','vinyl','arg','colortape','@types\/npm-packlist'], function(vegaCrossfilter,vegaLiteDevConfig,typesMicrosoftTypescriptEtw,npmPacklist,detectIndent,vegaUtil,yarnDeduplicate,d3,isBigint,githubReleaseFromChangelog,d3Shape,mochaFivematProgressReporter,unicodePropertyAliasesEcmascript,homedirPolyfill,vinyl,arg,colortape,typesNpmPacklist){\n\n})","completion":" import vegaCrossfilter from 'vega-crossfilter'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport typesMicrosoftTypescriptEtw from '@types\/microsoft__typescript-etw'\nimport npmPacklist from 'npm-packlist'\nimport detectIndent from 'detect-indent'\nimport vegaUtil from 'vega-util'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport d3 from 'd3'\nimport isBigint from 'is-bigint'\nimport githubReleaseFromChangelog from 'github-release-from-changelog'\nimport d3Shape from 'd3-shape'\nimport mochaFivematProgressReporter from 'mocha-fivemat-progress-reporter'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport homedirPolyfill from 'homedir-polyfill'\nimport vinyl from 'vinyl'\nimport arg from 'arg'\nimport colortape from 'colortape'\nimport typesNpmPacklist from '@types\/npm-packlist'\n\n"}
{"prompt":"define(['v8-compile-cache-lib','unicode-property-value-aliases-ecmascript','vega-lite-dev-config','@sindresorhus\/tsconfig','@fimbul\/wotan','microbundle','ts-json-schema-generator','get-caller-file','dts-jest','vega-functions','vega-force','flow-parser','unicode-property-aliases-ecmascript','@microsoft\/api-extractor'], function(v8CompileCacheLib,unicodePropertyValueAliasesEcmascript,vegaLiteDevConfig,sindresorhusTsconfig,fimbulWotan,microbundle,tsJsonSchemaGenerator,getCallerFile,dtsJest,vegaFunctions,vegaForce,flowParser,unicodePropertyAliasesEcmascript,microsoftApiExtractor){\n\n})","completion":" import v8CompileCacheLib from 'v8-compile-cache-lib'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport fimbulWotan from '@fimbul\/wotan'\nimport microbundle from 'microbundle'\nimport tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport getCallerFile from 'get-caller-file'\nimport dtsJest from 'dts-jest'\nimport vegaFunctions from 'vega-functions'\nimport vegaForce from 'vega-force'\nimport flowParser from 'flow-parser'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\n\n"}
{"prompt":"define(['vega-format','vega-force','@types\/q','clean-ts-built','cpr','detect-indent','@types\/microsoft__typescript-etw','@types\/gulp-concat'], function(vegaFormat,vegaForce,typesQ,cleanTsBuilt,cpr,detectIndent,typesMicrosoftTypescriptEtw,typesGulpConcat){\n\n})","completion":" import vegaFormat from 'vega-format'\nimport vegaForce from 'vega-force'\nimport typesQ from '@types\/q'\nimport cleanTsBuilt from 'clean-ts-built'\nimport cpr from 'cpr'\nimport detectIndent from 'detect-indent'\nimport typesMicrosoftTypescriptEtw from '@types\/microsoft__typescript-etw'\nimport typesGulpConcat from '@types\/gulp-concat'\n\n"}
{"prompt":"define(['vega-scenegraph','json-stringify-pretty-compact','@types\/q','memfs','@types\/xml2js','@types\/ms','typescript-tslint-plugin','vega-cli'], function(vegaScenegraph,jsonStringifyPrettyCompact,typesQ,memfs,typesXml2Js,typesMs,typescriptTslintPlugin,vegaCli){\n\n})","completion":" import vegaScenegraph from 'vega-scenegraph'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport typesQ from '@types\/q'\nimport memfs from 'memfs'\nimport typesXml2Js from '@types\/xml2js'\nimport typesMs from '@types\/ms'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport vegaCli from 'vega-cli'\n\n"}
{"prompt":"define(['fancy-log','@types\/babel__code-frame','@types\/microsoft__typescript-etw','@yarnpkg\/fslib','dprint','get-caller-file','@sindresorhus\/tsconfig','vega-encode','@types\/ms','@types\/minimist','babel-plugin-trace','safe-regex','vega-view-transforms'], function(fancyLog,typesBabelCodeFrame,typesMicrosoftTypescriptEtw,yarnpkgFslib,dprint,getCallerFile,sindresorhusTsconfig,vegaEncode,typesMs,typesMinimist,babelPluginTrace,safeRegex,vegaViewTransforms){\n\n})","completion":" import fancyLog from 'fancy-log'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport typesMicrosoftTypescriptEtw from '@types\/microsoft__typescript-etw'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport dprint from 'dprint'\nimport getCallerFile from 'get-caller-file'\nimport sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport vegaEncode from 'vega-encode'\nimport typesMs from '@types\/ms'\nimport typesMinimist from '@types\/minimist'\nimport babelPluginTrace from 'babel-plugin-trace'\nimport safeRegex from 'safe-regex'\nimport vegaViewTransforms from 'vega-view-transforms'\n\n"}
{"prompt":"define(['ts-clean-built','memfs','rollup-plugin-bundle-size'], function(tsCleanBuilt,memfs,rollupPluginBundleSize){\n\n})","completion":" import tsCleanBuilt from 'ts-clean-built'\nimport memfs from 'memfs'\nimport rollupPluginBundleSize from 'rollup-plugin-bundle-size'\n\n"}
{"prompt":"define(['serve','yargs-test-extends','@types\/puppeteer','yarn'], function(serve,yargsTestExtends,typesPuppeteer,yarn){\n\n})","completion":" import serve from 'serve'\nimport yargsTestExtends from 'yargs-test-extends'\nimport typesPuppeteer from '@types\/puppeteer'\nimport yarn from 'yarn'\n\n"}
{"prompt":"define(['browser-sync','vega-selections','eslint-plugin-github','builtin-modules','vega-format','gulp-sourcemaps','ini','vega-encode','d3-geo-projection','flow-parser','@yarnpkg\/fslib','@microsoft\/api-extractor','npm-packlist','typescript-tslint-plugin','vega-typings'], function(browserSync,vegaSelections,eslintPluginGithub,builtinModules,vegaFormat,gulpSourcemaps,ini,vegaEncode,d3GeoProjection,flowParser,yarnpkgFslib,microsoftApiExtractor,npmPacklist,typescriptTslintPlugin,vegaTypings){\n\n})","completion":" import browserSync from 'browser-sync'\nimport vegaSelections from 'vega-selections'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport builtinModules from 'builtin-modules'\nimport vegaFormat from 'vega-format'\nimport gulpSourcemaps from 'gulp-sourcemaps'\nimport ini from 'ini'\nimport vegaEncode from 'vega-encode'\nimport d3GeoProjection from 'd3-geo-projection'\nimport flowParser from 'flow-parser'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\nimport npmPacklist from 'npm-packlist'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport vegaTypings from 'vega-typings'\n\n"}
{"prompt":"define(['v8-compile-cache-lib','serve','d3-scale','json-stringify-pretty-compact','vega-view','npm-packlist','yarn','make-error','tslint-consistent-codestyle','vega-hierarchy'], function(v8CompileCacheLib,serve,d3Scale,jsonStringifyPrettyCompact,vegaView,npmPacklist,yarn,makeError,tslintConsistentCodestyle,vegaHierarchy){\n\n})","completion":" import v8CompileCacheLib from 'v8-compile-cache-lib'\nimport serve from 'serve'\nimport d3Scale from 'd3-scale'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport vegaView from 'vega-view'\nimport npmPacklist from 'npm-packlist'\nimport yarn from 'yarn'\nimport makeError from 'make-error'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport vegaHierarchy from 'vega-hierarchy'\n\n"}
{"prompt":"define(['@tsconfig\/node16','vega-runtime','@tsconfig\/node10','@types\/tape','vega-util','verup','@types\/puppeteer'], function(tsconfigNode16,vegaRuntime,tsconfigNode10,typesTape,vegaUtil,verup,typesPuppeteer){\n\n})","completion":" import tsconfigNode16 from '@tsconfig\/node16'\nimport vegaRuntime from 'vega-runtime'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport typesTape from '@types\/tape'\nimport vegaUtil from 'vega-util'\nimport verup from 'verup'\nimport typesPuppeteer from '@types\/puppeteer'\n\n"}
{"prompt":"define(['eslint-formatter-autolinkable-stylish','npm-packlist','yargs-parser','node-sass','safe-regex','d3-delaunay','path','vega-force','vega-geo','tr46','@octokit\/rest','typescript-tslint-plugin'], function(eslintFormatterAutolinkableStylish,npmPacklist,yargsParser,nodeSass,safeRegex,d3Delaunay,path,vegaForce,vegaGeo,tr46,octokitRest,typescriptTslintPlugin){\n\n})","completion":" import eslintFormatterAutolinkableStylish from 'eslint-formatter-autolinkable-stylish'\nimport npmPacklist from 'npm-packlist'\nimport yargsParser from 'yargs-parser'\nimport nodeSass from 'node-sass'\nimport safeRegex from 'safe-regex'\nimport d3Delaunay from 'd3-delaunay'\nimport path from 'path'\nimport vegaForce from 'vega-force'\nimport vegaGeo from 'vega-geo'\nimport tr46 from 'tr46'\nimport octokitRest from '@octokit\/rest'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\n\n"}
{"prompt":"define(['@fimbul\/wotan'], function(fimbulWotan){\n\n})","completion":" import fimbulWotan from '@fimbul\/wotan'\n\n"}
{"prompt":"define(['create-require','svg2png-many','vega-format','acorn-walk','tslint-consistent-codestyle','xml2js','d3-delaunay','throat','github-release-from-changelog','flow-parser','azure-devops-node-api','vinyl-sourcemaps-apply','@tsconfig\/node14','vega-scale','vega-datasets','webidl-conversions'], function(createRequire,svg2PngMany,vegaFormat,acornWalk,tslintConsistentCodestyle,xml2Js,d3Delaunay,throat,githubReleaseFromChangelog,flowParser,azureDevopsNodeApi,vinylSourcemapsApply,tsconfigNode14,vegaScale,vegaDatasets,webidlConversions){\n\n})","completion":" import createRequire from 'create-require'\nimport svg2PngMany from 'svg2png-many'\nimport vegaFormat from 'vega-format'\nimport acornWalk from 'acorn-walk'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport xml2Js from 'xml2js'\nimport d3Delaunay from 'd3-delaunay'\nimport throat from 'throat'\nimport githubReleaseFromChangelog from 'github-release-from-changelog'\nimport flowParser from 'flow-parser'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport tsconfigNode14 from '@tsconfig\/node14'\nimport vegaScale from 'vega-scale'\nimport vegaDatasets from 'vega-datasets'\nimport webidlConversions from 'webidl-conversions'\n\n"}
{"prompt":"define(['ts-json-schema-generator','vega-loader','js-yaml','prex','@fimbul\/valtyr','vega-typings','has-ansi','vega-statistics','is-boolean-object'], function(tsJsonSchemaGenerator,vegaLoader,jsYaml,prex,fimbulValtyr,vegaTypings,hasAnsi,vegaStatistics,isBooleanObject){\n\n})","completion":" import tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport vegaLoader from 'vega-loader'\nimport jsYaml from 'js-yaml'\nimport prex from 'prex'\nimport fimbulValtyr from '@fimbul\/valtyr'\nimport vegaTypings from 'vega-typings'\nimport hasAnsi from 'has-ansi'\nimport vegaStatistics from 'vega-statistics'\nimport isBooleanObject from 'is-boolean-object'\n\n"}
{"prompt":"define(['ignore','vega-event-selector','require-directory','vega-crossfilter','@types\/gulp','vega-functions'], function(ignore,vegaEventSelector,requireDirectory,vegaCrossfilter,typesGulp,vegaFunctions){\n\n})","completion":" import ignore from 'ignore'\nimport vegaEventSelector from 'vega-event-selector'\nimport requireDirectory from 'require-directory'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport typesGulp from '@types\/gulp'\nimport vegaFunctions from 'vega-functions'\n\n"}
{"prompt":"define(['vega-schema-url-parser','tr46','unicode-property-value-aliases-ecmascript','@types\/source-map-support','azure-devops-node-api','acorn-walk','rxjs','has-ansi','d3-delaunay','@types\/proper-lockfile','serve','@types\/xml2js','array-flat-polyfill','detect-indent'], function(vegaSchemaUrlParser,tr46,unicodePropertyValueAliasesEcmascript,typesSourceMapSupport,azureDevopsNodeApi,acornWalk,rxjs,hasAnsi,d3Delaunay,typesProperLockfile,serve,typesXml2Js,arrayFlatPolyfill,detectIndent){\n\n})","completion":" import vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport tr46 from 'tr46'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport acornWalk from 'acorn-walk'\nimport rxjs from 'rxjs'\nimport hasAnsi from 'has-ansi'\nimport d3Delaunay from 'd3-delaunay'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport serve from 'serve'\nimport typesXml2Js from '@types\/xml2js'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport detectIndent from 'detect-indent'\n\n"}
{"prompt":"define(['gulp-concat','vega-typings','vega-util','vega-geo','yarn','@tsconfig\/node12','tslint-consistent-codestyle','is-bigint'], function(gulpConcat,vegaTypings,vegaUtil,vegaGeo,yarn,tsconfigNode12,tslintConsistentCodestyle,isBigint){\n\n})","completion":" import gulpConcat from 'gulp-concat'\nimport vegaTypings from 'vega-typings'\nimport vegaUtil from 'vega-util'\nimport vegaGeo from 'vega-geo'\nimport yarn from 'yarn'\nimport tsconfigNode12 from '@tsconfig\/node12'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport isBigint from 'is-bigint'\n\n"}
{"prompt":"define(['make-error','get-stream','babel-plugin-trace'], function(makeError,getStream,babelPluginTrace){\n\n})","completion":" import makeError from 'make-error'\nimport getStream from 'get-stream'\nimport babelPluginTrace from 'babel-plugin-trace'\n\n"}
{"prompt":"define(['vega-wordcloud','xml2js','from','@types\/gulp-concat','@octokit\/rest'], function(vegaWordcloud,xml2Js,from,typesGulpConcat,octokitRest){\n\n})","completion":" import vegaWordcloud from 'vega-wordcloud'\nimport xml2Js from 'xml2js'\nimport from from 'from'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport octokitRest from '@octokit\/rest'\n\n"}
{"prompt":"define(['vinyl-sourcemaps-apply','tr46','jest-t-assert','yarn-deduplicate','tslint-plugin-prettier','d3-delaunay','yaml-front-matter'], function(vinylSourcemapsApply,tr46,jestTAssert,yarnDeduplicate,tslintPluginPrettier,d3Delaunay,yamlFrontMatter){\n\n})","completion":" import vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport tr46 from 'tr46'\nimport jestTAssert from 'jest-t-assert'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport tslintPluginPrettier from 'tslint-plugin-prettier'\nimport d3Delaunay from 'd3-delaunay'\nimport yamlFrontMatter from 'yaml-front-matter'\n\n"}
{"prompt":"define(['vega-tooltip'], function(vegaTooltip){\n\n})","completion":" import vegaTooltip from 'vega-tooltip'\n\n"}
{"prompt":"define(['d3-hierarchy','d3','clean-ts-built','@types\/js-yaml','@types\/xml2js','vega-runtime','@types\/clone','@microsoft\/api-extractor','proper-lockfile','@typescript-eslint\/experimental-utils','rollup-plugin-cleanup','vega-scenegraph','typescript-json-schema','yarn','vega-lite-dev-config','vega-event-selector','path','@types\/gulp-newer','@types\/babel__code-frame','vega-encode'], function(d3Hierarchy,d3,cleanTsBuilt,typesJsYaml,typesXml2Js,vegaRuntime,typesClone,microsoftApiExtractor,properLockfile,typescriptEslintExperimentalUtils,rollupPluginCleanup,vegaScenegraph,typescriptJsonSchema,yarn,vegaLiteDevConfig,vegaEventSelector,path,typesGulpNewer,typesBabelCodeFrame,vegaEncode){\n\n})","completion":" import d3Hierarchy from 'd3-hierarchy'\nimport d3 from 'd3'\nimport cleanTsBuilt from 'clean-ts-built'\nimport typesJsYaml from '@types\/js-yaml'\nimport typesXml2Js from '@types\/xml2js'\nimport vegaRuntime from 'vega-runtime'\nimport typesClone from '@types\/clone'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\nimport properLockfile from 'proper-lockfile'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport vegaScenegraph from 'vega-scenegraph'\nimport typescriptJsonSchema from 'typescript-json-schema'\nimport yarn from 'yarn'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport vegaEventSelector from 'vega-event-selector'\nimport path from 'path'\nimport typesGulpNewer from '@types\/gulp-newer'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport vegaEncode from 'vega-encode'\n\n"}
{"prompt":"define(['@octokit\/rest','d3-geo-projection','@types\/clone','dts-jest','is-bigint','acorn-walk'], function(octokitRest,d3GeoProjection,typesClone,dtsJest,isBigint,acornWalk){\n\n})","completion":" import octokitRest from '@octokit\/rest'\nimport d3GeoProjection from 'd3-geo-projection'\nimport typesClone from '@types\/clone'\nimport dtsJest from 'dts-jest'\nimport isBigint from 'is-bigint'\nimport acornWalk from 'acorn-walk'\n\n"}
{"prompt":"define(['node-sass','arg','dts-jest','vega-parser','from','gulp-insert','vega-view','js-yaml','serve','xml2js','typescript-json-schema','ts-node-dev','stream-spec','util.promisify','pretty-quick','cliui','vega-format'], function(nodeSass,arg,dtsJest,vegaParser,from,gulpInsert,vegaView,jsYaml,serve,xml2Js,typescriptJsonSchema,tsNodeDev,streamSpec,utilPromisify,prettyQuick,cliui,vegaFormat){\n\n})","completion":" import nodeSass from 'node-sass'\nimport arg from 'arg'\nimport dtsJest from 'dts-jest'\nimport vegaParser from 'vega-parser'\nimport from from 'from'\nimport gulpInsert from 'gulp-insert'\nimport vegaView from 'vega-view'\nimport jsYaml from 'js-yaml'\nimport serve from 'serve'\nimport xml2Js from 'xml2js'\nimport typescriptJsonSchema from 'typescript-json-schema'\nimport tsNodeDev from 'ts-node-dev'\nimport streamSpec from 'stream-spec'\nimport utilPromisify from 'util.promisify'\nimport prettyQuick from 'pretty-quick'\nimport cliui from 'cliui'\nimport vegaFormat from 'vega-format'\n\n"}
{"prompt":"define(['promise-polyfill','ini','d3','dprint'], function(promisePolyfill,ini,d3,dprint){\n\n})","completion":" import promisePolyfill from 'promise-polyfill'\nimport ini from 'ini'\nimport d3 from 'd3'\nimport dprint from 'dprint'\n\n"}
{"prompt":"define(['util.promisify','github-release-from-changelog','microbundle'], function(utilPromisify,githubReleaseFromChangelog,microbundle){\n\n})","completion":" import utilPromisify from 'util.promisify'\nimport githubReleaseFromChangelog from 'github-release-from-changelog'\nimport microbundle from 'microbundle'\n\n"}
{"prompt":"define(['safe-regex','@microsoft\/api-extractor','babel-plugin-trace','gulp-insert','d3-force'], function(safeRegex,microsoftApiExtractor,babelPluginTrace,gulpInsert,d3Force){\n\n})","completion":" import safeRegex from 'safe-regex'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\nimport babelPluginTrace from 'babel-plugin-trace'\nimport gulpInsert from 'gulp-insert'\nimport d3Force from 'd3-force'\n\n"}
{"prompt":"define(['ts-node-dev','d3-delaunay','browser-sync','@types\/q','@fimbul\/valtyr','d3-scale','vega-loader','acorn-walk','homedir-polyfill','merge2','@types\/js-yaml'], function(tsNodeDev,d3Delaunay,browserSync,typesQ,fimbulValtyr,d3Scale,vegaLoader,acornWalk,homedirPolyfill,merge2,typesJsYaml){\n\n})","completion":" import tsNodeDev from 'ts-node-dev'\nimport d3Delaunay from 'd3-delaunay'\nimport browserSync from 'browser-sync'\nimport typesQ from '@types\/q'\nimport fimbulValtyr from '@fimbul\/valtyr'\nimport d3Scale from 'd3-scale'\nimport vegaLoader from 'vega-loader'\nimport acornWalk from 'acorn-walk'\nimport homedirPolyfill from 'homedir-polyfill'\nimport merge2 from 'merge2'\nimport typesJsYaml from '@types\/js-yaml'\n\n"}
{"prompt":"define(['eslint-plugin-no-null','@cspotcode\/source-map-support','v8-compile-cache-lib','gulp-sourcemaps','decamelize','ts-transform-default-export','js-yaml'], function(eslintPluginNoNull,cspotcodeSourceMapSupport,v8CompileCacheLib,gulpSourcemaps,decamelize,tsTransformDefaultExport,jsYaml){\n\n})","completion":" import eslintPluginNoNull from 'eslint-plugin-no-null'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport gulpSourcemaps from 'gulp-sourcemaps'\nimport decamelize from 'decamelize'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport jsYaml from 'js-yaml'\n\n"}
{"prompt":"define(['vega-view','@types\/babel__code-frame','pretty-quick','vega-dataflow','@tsconfig\/node10','start-server-and-test','from'], function(vegaView,typesBabelCodeFrame,prettyQuick,vegaDataflow,tsconfigNode10,startServerAndTest,from){\n\n})","completion":" import vegaView from 'vega-view'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport prettyQuick from 'pretty-quick'\nimport vegaDataflow from 'vega-dataflow'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport startServerAndTest from 'start-server-and-test'\nimport from from 'from'\n\n"}
{"prompt":"define(['js-yaml','@microsoft\/api-extractor','@types\/proper-lockfile','jest-t-assert','vega-scale','is-number-object','browser-sync','yarn','make-error','stream-spec','vega-time','@cspotcode\/source-map-support','microbundle','vega-projection','tr46','jest-canvas-mock','y18n','vega-parser'], function(jsYaml,microsoftApiExtractor,typesProperLockfile,jestTAssert,vegaScale,isNumberObject,browserSync,yarn,makeError,streamSpec,vegaTime,cspotcodeSourceMapSupport,microbundle,vegaProjection,tr46,jestCanvasMock,y18N,vegaParser){\n\n})","completion":" import jsYaml from 'js-yaml'\nimport microsoftApiExtractor from '@microsoft\/api-extractor'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport jestTAssert from 'jest-t-assert'\nimport vegaScale from 'vega-scale'\nimport isNumberObject from 'is-number-object'\nimport browserSync from 'browser-sync'\nimport yarn from 'yarn'\nimport makeError from 'make-error'\nimport streamSpec from 'stream-spec'\nimport vegaTime from 'vega-time'\nimport cspotcodeSourceMapSupport from '@cspotcode\/source-map-support'\nimport microbundle from 'microbundle'\nimport vegaProjection from 'vega-projection'\nimport tr46 from 'tr46'\nimport jestCanvasMock from 'jest-canvas-mock'\nimport y18N from 'y18n'\nimport vegaParser from 'vega-parser'\n\n"}
{"prompt":"define(['@types\/diff','d3-shape','typescript-tslint-plugin','serve','vega-voronoi','rxjs','ntypescript','vega-cli','arg'], function(typesDiff,d3Shape,typescriptTslintPlugin,serve,vegaVoronoi,rxjs,ntypescript,vegaCli,arg){\n\n})","completion":" import typesDiff from '@types\/diff'\nimport d3Shape from 'd3-shape'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport serve from 'serve'\nimport vegaVoronoi from 'vega-voronoi'\nimport rxjs from 'rxjs'\nimport ntypescript from 'ntypescript'\nimport vegaCli from 'vega-cli'\nimport arg from 'arg'\n\n"}
{"prompt":"define(['vega-force','eslint-plugin-no-null','js-yaml','vega-loader'], function(vegaForce,eslintPluginNoNull,jsYaml,vegaLoader){\n\n})","completion":" import vegaForce from 'vega-force'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport jsYaml from 'js-yaml'\nimport vegaLoader from 'vega-loader'\n\n"}
{"prompt":"define(['svg2png-many','from','arg','yargs-test-extends','vega-regression','yn','vinyl-sourcemaps-apply','fast-json-patch','which-boxed-primitive','@tsconfig\/node10'], function(svg2PngMany,from,arg,yargsTestExtends,vegaRegression,yn,vinylSourcemapsApply,fastJsonPatch,whichBoxedPrimitive,tsconfigNode10){\n\n})","completion":" import svg2PngMany from 'svg2png-many'\nimport from from 'from'\nimport arg from 'arg'\nimport yargsTestExtends from 'yargs-test-extends'\nimport vegaRegression from 'vega-regression'\nimport yn from 'yn'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport fastJsonPatch from 'fast-json-patch'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport tsconfigNode10 from '@tsconfig\/node10'\n\n"}
{"prompt":"define(['vega-regression','@types\/source-map-support','vega-canvas','gulp-concat','v8-compile-cache-lib','proper-lockfile','detect-indent','d3-shape','webidl-conversions','require-main-filename','@tsconfig\/node10','colortape','pretty-quick','dprint','ts-transform-default-export','vega-time'], function(vegaRegression,typesSourceMapSupport,vegaCanvas,gulpConcat,v8CompileCacheLib,properLockfile,detectIndent,d3Shape,webidlConversions,requireMainFilename,tsconfigNode10,colortape,prettyQuick,dprint,tsTransformDefaultExport,vegaTime){\n\n})","completion":" import vegaRegression from 'vega-regression'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport vegaCanvas from 'vega-canvas'\nimport gulpConcat from 'gulp-concat'\nimport v8CompileCacheLib from 'v8-compile-cache-lib'\nimport properLockfile from 'proper-lockfile'\nimport detectIndent from 'detect-indent'\nimport d3Shape from 'd3-shape'\nimport webidlConversions from 'webidl-conversions'\nimport requireMainFilename from 'require-main-filename'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport colortape from 'colortape'\nimport prettyQuick from 'pretty-quick'\nimport dprint from 'dprint'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport vegaTime from 'vega-time'\n\n"}
{"prompt":"define(['vega-datasets'], function(vegaDatasets){\n\n})","completion":" import vegaDatasets from 'vega-datasets'\n\n"}
{"prompt":"define(['@types\/d3','yargs-test-extends','camelcase','vega-dataflow','xml2js','@types\/ms','vega-parser','common-tags','@types\/gulp-newer','@types\/gulp-rename','array-flat-polyfill','flow-parser','hashish','microbundle','@types\/babel__code-frame','gulp-concat','@types\/gulp-concat'], function(typesD3,yargsTestExtends,camelcase,vegaDataflow,xml2Js,typesMs,vegaParser,commonTags,typesGulpNewer,typesGulpRename,arrayFlatPolyfill,flowParser,hashish,microbundle,typesBabelCodeFrame,gulpConcat,typesGulpConcat){\n\n})","completion":" import typesD3 from '@types\/d3'\nimport yargsTestExtends from 'yargs-test-extends'\nimport camelcase from 'camelcase'\nimport vegaDataflow from 'vega-dataflow'\nimport xml2Js from 'xml2js'\nimport typesMs from '@types\/ms'\nimport vegaParser from 'vega-parser'\nimport commonTags from 'common-tags'\nimport typesGulpNewer from '@types\/gulp-newer'\nimport typesGulpRename from '@types\/gulp-rename'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport flowParser from 'flow-parser'\nimport hashish from 'hashish'\nimport microbundle from 'microbundle'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport gulpConcat from 'gulp-concat'\nimport typesGulpConcat from '@types\/gulp-concat'\n\n"}
{"prompt":"define(['babel-plugin-trace','pretty-quick','vows','@types\/proxyquire','hashish','make-error','js-yaml','@types\/fast-json-stable-stringify','json-stringify-pretty-compact'], function(babelPluginTrace,prettyQuick,vows,typesProxyquire,hashish,makeError,jsYaml,typesFastJsonStableStringify,jsonStringifyPrettyCompact){\n\n})","completion":" import babelPluginTrace from 'babel-plugin-trace'\nimport prettyQuick from 'pretty-quick'\nimport vows from 'vows'\nimport typesProxyquire from '@types\/proxyquire'\nimport hashish from 'hashish'\nimport makeError from 'make-error'\nimport jsYaml from 'js-yaml'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\n\n"}
{"prompt":"define(['ignore','acorn-walk','@types\/gulp-concat','vega-event-selector','vega-time','vega-scale','@types\/puppeteer','@types\/fs-extra','@types\/q','require-main-filename','vega-parser','eslint-plugin-github'], function(ignore,acornWalk,typesGulpConcat,vegaEventSelector,vegaTime,vegaScale,typesPuppeteer,typesFsExtra,typesQ,requireMainFilename,vegaParser,eslintPluginGithub){\n\n})","completion":" import ignore from 'ignore'\nimport acornWalk from 'acorn-walk'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport vegaEventSelector from 'vega-event-selector'\nimport vegaTime from 'vega-time'\nimport vegaScale from 'vega-scale'\nimport typesPuppeteer from '@types\/puppeteer'\nimport typesFsExtra from '@types\/fs-extra'\nimport typesQ from '@types\/q'\nimport requireMainFilename from 'require-main-filename'\nimport vegaParser from 'vega-parser'\nimport eslintPluginGithub from 'eslint-plugin-github'\n\n"}
{"prompt":"define(['webidl-conversions','@types\/gulp-rename','js-yaml','@swc\/wasm','memfs'], function(webidlConversions,typesGulpRename,jsYaml,swcWasm,memfs){\n\n})","completion":" import webidlConversions from 'webidl-conversions'\nimport typesGulpRename from '@types\/gulp-rename'\nimport jsYaml from 'js-yaml'\nimport swcWasm from '@swc\/wasm'\nimport memfs from 'memfs'\n\n"}
{"prompt":"define(['@tsconfig\/node16','json-stringify-pretty-compact','vega-scenegraph','unicode-property-value-aliases-ecmascript','vega-selections','d3-delaunay','@types\/merge2','yaml-front-matter','vega-datasets','ts-node-dev','browser-sync','ts-clean-built','@sindresorhus\/tsconfig','d3-shape','node-sass'], function(tsconfigNode16,jsonStringifyPrettyCompact,vegaScenegraph,unicodePropertyValueAliasesEcmascript,vegaSelections,d3Delaunay,typesMerge2,yamlFrontMatter,vegaDatasets,tsNodeDev,browserSync,tsCleanBuilt,sindresorhusTsconfig,d3Shape,nodeSass){\n\n})","completion":" import tsconfigNode16 from '@tsconfig\/node16'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport vegaScenegraph from 'vega-scenegraph'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\nimport vegaSelections from 'vega-selections'\nimport d3Delaunay from 'd3-delaunay'\nimport typesMerge2 from '@types\/merge2'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport vegaDatasets from 'vega-datasets'\nimport tsNodeDev from 'ts-node-dev'\nimport browserSync from 'browser-sync'\nimport tsCleanBuilt from 'ts-clean-built'\nimport sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport d3Shape from 'd3-shape'\nimport nodeSass from 'node-sass'\n\n"}
{"prompt":"define(['ts-node-dev','svg2png-many','@types\/clone','require-main-filename','vega-selections','vega-geo','typescript-tslint-plugin','merge2','vega-hierarchy','vega-voronoi'], function(tsNodeDev,svg2PngMany,typesClone,requireMainFilename,vegaSelections,vegaGeo,typescriptTslintPlugin,merge2,vegaHierarchy,vegaVoronoi){\n\n})","completion":" import tsNodeDev from 'ts-node-dev'\nimport svg2PngMany from 'svg2png-many'\nimport typesClone from '@types\/clone'\nimport requireMainFilename from 'require-main-filename'\nimport vegaSelections from 'vega-selections'\nimport vegaGeo from 'vega-geo'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport merge2 from 'merge2'\nimport vegaHierarchy from 'vega-hierarchy'\nimport vegaVoronoi from 'vega-voronoi'\n\n"}
{"prompt":"define(['rxjs','@typescript-eslint\/experimental-utils','babel-plugin-trace','@types\/gulp-newer','vega-voronoi','d3-force','util.promisify','ts-transform-default-export','has-ansi','d3-hierarchy','ts-clean-built','vega-time','from','jest-t-assert'], function(rxjs,typescriptEslintExperimentalUtils,babelPluginTrace,typesGulpNewer,vegaVoronoi,d3Force,utilPromisify,tsTransformDefaultExport,hasAnsi,d3Hierarchy,tsCleanBuilt,vegaTime,from,jestTAssert){\n\n})","completion":" import rxjs from 'rxjs'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport babelPluginTrace from 'babel-plugin-trace'\nimport typesGulpNewer from '@types\/gulp-newer'\nimport vegaVoronoi from 'vega-voronoi'\nimport d3Force from 'd3-force'\nimport utilPromisify from 'util.promisify'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport hasAnsi from 'has-ansi'\nimport d3Hierarchy from 'd3-hierarchy'\nimport tsCleanBuilt from 'ts-clean-built'\nimport vegaTime from 'vega-time'\nimport from from 'from'\nimport jestTAssert from 'jest-t-assert'\n\n"}
{"prompt":"define(['ts-transform-default-export'], function(tsTransformDefaultExport){\n\n})","completion":" import tsTransformDefaultExport from 'ts-transform-default-export'\n\n"}
{"prompt":"define(['fast-json-patch','promise-polyfill','@types\/ms','fancy-log','ts-transform-default-export','vega-crossfilter','ts-clean-built','@typescript-eslint\/experimental-utils','vega-encode','vega-label','yaml-front-matter','path','vega-voronoi','recast','xml2js','yargs-parser','memfs','vega-wordcloud','gulp-sourcemaps','tslint-test-config-non-relative'], function(fastJsonPatch,promisePolyfill,typesMs,fancyLog,tsTransformDefaultExport,vegaCrossfilter,tsCleanBuilt,typescriptEslintExperimentalUtils,vegaEncode,vegaLabel,yamlFrontMatter,path,vegaVoronoi,recast,xml2Js,yargsParser,memfs,vegaWordcloud,gulpSourcemaps,tslintTestConfigNonRelative){\n\n})","completion":" import fastJsonPatch from 'fast-json-patch'\nimport promisePolyfill from 'promise-polyfill'\nimport typesMs from '@types\/ms'\nimport fancyLog from 'fancy-log'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport vegaCrossfilter from 'vega-crossfilter'\nimport tsCleanBuilt from 'ts-clean-built'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport vegaEncode from 'vega-encode'\nimport vegaLabel from 'vega-label'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport path from 'path'\nimport vegaVoronoi from 'vega-voronoi'\nimport recast from 'recast'\nimport xml2Js from 'xml2js'\nimport yargsParser from 'yargs-parser'\nimport memfs from 'memfs'\nimport vegaWordcloud from 'vega-wordcloud'\nimport gulpSourcemaps from 'gulp-sourcemaps'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\n\n"}
{"prompt":"define(['eslint-plugin-no-null'], function(eslintPluginNoNull){\n\n})","completion":" import eslintPluginNoNull from 'eslint-plugin-no-null'\n\n"}
{"prompt":"define(['@yarnpkg\/fslib','gulp-insert','vega-statistics','yarn','rollup-plugin-cleanup','@octokit\/rest','vega-functions','@fimbul\/valtyr','vega-scenegraph','webidl-conversions'], function(yarnpkgFslib,gulpInsert,vegaStatistics,yarn,rollupPluginCleanup,octokitRest,vegaFunctions,fimbulValtyr,vegaScenegraph,webidlConversions){\n\n})","completion":" import yarnpkgFslib from '@yarnpkg\/fslib'\nimport gulpInsert from 'gulp-insert'\nimport vegaStatistics from 'vega-statistics'\nimport yarn from 'yarn'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport octokitRest from '@octokit\/rest'\nimport vegaFunctions from 'vega-functions'\nimport fimbulValtyr from '@fimbul\/valtyr'\nimport vegaScenegraph from 'vega-scenegraph'\nimport webidlConversions from 'webidl-conversions'\n\n"}
{"prompt":"define(['ntypescript','eslint-plugin-github','vega-regression','from','webidl2js','typescript-tslint-plugin','is-boolean-object','vinyl-sourcemaps-apply','@types\/clone','vega-themes','@types\/tape','d3','vega-label','vega-view-transforms','jest-t-assert'], function(ntypescript,eslintPluginGithub,vegaRegression,from,webidl2Js,typescriptTslintPlugin,isBooleanObject,vinylSourcemapsApply,typesClone,vegaThemes,typesTape,d3,vegaLabel,vegaViewTransforms,jestTAssert){\n\n})","completion":" import ntypescript from 'ntypescript'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport vegaRegression from 'vega-regression'\nimport from from 'from'\nimport webidl2Js from 'webidl2js'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport isBooleanObject from 'is-boolean-object'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport typesClone from '@types\/clone'\nimport vegaThemes from 'vega-themes'\nimport typesTape from '@types\/tape'\nimport d3 from 'd3'\nimport vegaLabel from 'vega-label'\nimport vegaViewTransforms from 'vega-view-transforms'\nimport jestTAssert from 'jest-t-assert'\n\n"}
{"prompt":"define(['ts-node-dev','verup','vega-runtime','@types\/d3','azure-devops-node-api','ntypescript','rxjs','acorn-walk'], function(tsNodeDev,verup,vegaRuntime,typesD3,azureDevopsNodeApi,ntypescript,rxjs,acornWalk){\n\n})","completion":" import tsNodeDev from 'ts-node-dev'\nimport verup from 'verup'\nimport vegaRuntime from 'vega-runtime'\nimport typesD3 from '@types\/d3'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport ntypescript from 'ntypescript'\nimport rxjs from 'rxjs'\nimport acornWalk from 'acorn-walk'\n\n"}
{"prompt":"define(['@types\/fs-extra','vega-expression','jest-canvas-mock','vega-lite-dev-config','ntypescript','y18n','browser-sync','eslint-plugin-github','vega-schema','gulp-newer','promise-polyfill','d3-scale','pretty-quick','arg','clean-ts-built','vega-runtime','vega-regression','vega-format','vinyl-sourcemaps-apply','ts-node-dev'], function(typesFsExtra,vegaExpression,jestCanvasMock,vegaLiteDevConfig,ntypescript,y18N,browserSync,eslintPluginGithub,vegaSchema,gulpNewer,promisePolyfill,d3Scale,prettyQuick,arg,cleanTsBuilt,vegaRuntime,vegaRegression,vegaFormat,vinylSourcemapsApply,tsNodeDev){\n\n})","completion":" import typesFsExtra from '@types\/fs-extra'\nimport vegaExpression from 'vega-expression'\nimport jestCanvasMock from 'jest-canvas-mock'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport ntypescript from 'ntypescript'\nimport y18N from 'y18n'\nimport browserSync from 'browser-sync'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport vegaSchema from 'vega-schema'\nimport gulpNewer from 'gulp-newer'\nimport promisePolyfill from 'promise-polyfill'\nimport d3Scale from 'd3-scale'\nimport prettyQuick from 'pretty-quick'\nimport arg from 'arg'\nimport cleanTsBuilt from 'clean-ts-built'\nimport vegaRuntime from 'vega-runtime'\nimport vegaRegression from 'vega-regression'\nimport vegaFormat from 'vega-format'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport tsNodeDev from 'ts-node-dev'\n\n"}
{"prompt":"define(['webidl2js','vega-regression','svg2png-many','rxjs','detect-indent','path','serve','vega-parser','from','fancy-log','@sindresorhus\/tsconfig','@octokit\/rest','is-bigint','typescript-json-schema','vows','array-flat-polyfill','webidl-conversions','@types\/diff'], function(webidl2Js,vegaRegression,svg2PngMany,rxjs,detectIndent,path,serve,vegaParser,from,fancyLog,sindresorhusTsconfig,octokitRest,isBigint,typescriptJsonSchema,vows,arrayFlatPolyfill,webidlConversions,typesDiff){\n\n})","completion":" import webidl2Js from 'webidl2js'\nimport vegaRegression from 'vega-regression'\nimport svg2PngMany from 'svg2png-many'\nimport rxjs from 'rxjs'\nimport detectIndent from 'detect-indent'\nimport path from 'path'\nimport serve from 'serve'\nimport vegaParser from 'vega-parser'\nimport from from 'from'\nimport fancyLog from 'fancy-log'\nimport sindresorhusTsconfig from '@sindresorhus\/tsconfig'\nimport octokitRest from '@octokit\/rest'\nimport isBigint from 'is-bigint'\nimport typescriptJsonSchema from 'typescript-json-schema'\nimport vows from 'vows'\nimport arrayFlatPolyfill from 'array-flat-polyfill'\nimport webidlConversions from 'webidl-conversions'\nimport typesDiff from '@types\/diff'\n\n"}
{"prompt":"define(['vega-util','jest-t-assert','ignore','@fimbul\/valtyr','cliui','vega-dataflow','@types\/puppeteer','memfs'], function(vegaUtil,jestTAssert,ignore,fimbulValtyr,cliui,vegaDataflow,typesPuppeteer,memfs){\n\n})","completion":" import vegaUtil from 'vega-util'\nimport jestTAssert from 'jest-t-assert'\nimport ignore from 'ignore'\nimport fimbulValtyr from '@fimbul\/valtyr'\nimport cliui from 'cliui'\nimport vegaDataflow from 'vega-dataflow'\nimport typesPuppeteer from '@types\/puppeteer'\nimport memfs from 'memfs'\n\n"}
{"prompt":"define(['vega-typings','proper-lockfile','yargs-test-extends','webidl2js','cliui','vega-format'], function(vegaTypings,properLockfile,yargsTestExtends,webidl2Js,cliui,vegaFormat){\n\n})","completion":" import vegaTypings from 'vega-typings'\nimport properLockfile from 'proper-lockfile'\nimport yargsTestExtends from 'yargs-test-extends'\nimport webidl2Js from 'webidl2js'\nimport cliui from 'cliui'\nimport vegaFormat from 'vega-format'\n\n"}
{"prompt":"define(['vega-transforms','node-sass','@tsconfig\/node10','start-server-and-test','d3-hierarchy','cpr'], function(vegaTransforms,nodeSass,tsconfigNode10,startServerAndTest,d3Hierarchy,cpr){\n\n})","completion":" import vegaTransforms from 'vega-transforms'\nimport nodeSass from 'node-sass'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport startServerAndTest from 'start-server-and-test'\nimport d3Hierarchy from 'd3-hierarchy'\nimport cpr from 'cpr'\n\n"}
{"prompt":"define(['vega-cli','@yarnpkg\/fslib','builtin-modules','vega-format','vega-loader','get-stream','vega-encode','@types\/babel__code-frame','jest-t-assert','arg'], function(vegaCli,yarnpkgFslib,builtinModules,vegaFormat,vegaLoader,getStream,vegaEncode,typesBabelCodeFrame,jestTAssert,arg){\n\n})","completion":" import vegaCli from 'vega-cli'\nimport yarnpkgFslib from '@yarnpkg\/fslib'\nimport builtinModules from 'builtin-modules'\nimport vegaFormat from 'vega-format'\nimport vegaLoader from 'vega-loader'\nimport getStream from 'get-stream'\nimport vegaEncode from 'vega-encode'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport jestTAssert from 'jest-t-assert'\nimport arg from 'arg'\n\n"}
{"prompt":"define(['@types\/proper-lockfile','promise-polyfill','json-stringify-pretty-compact','vega-view-transforms','@types\/fs-extra','browser-sync','common-tags','fancy-log','merge2','d3-geo-projection','vega-canvas','@types\/clone','typescript-tslint-plugin','@types\/diff','@types\/source-map-support'], function(typesProperLockfile,promisePolyfill,jsonStringifyPrettyCompact,vegaViewTransforms,typesFsExtra,browserSync,commonTags,fancyLog,merge2,d3GeoProjection,vegaCanvas,typesClone,typescriptTslintPlugin,typesDiff,typesSourceMapSupport){\n\n})","completion":" import typesProperLockfile from '@types\/proper-lockfile'\nimport promisePolyfill from 'promise-polyfill'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport vegaViewTransforms from 'vega-view-transforms'\nimport typesFsExtra from '@types\/fs-extra'\nimport browserSync from 'browser-sync'\nimport commonTags from 'common-tags'\nimport fancyLog from 'fancy-log'\nimport merge2 from 'merge2'\nimport d3GeoProjection from 'd3-geo-projection'\nimport vegaCanvas from 'vega-canvas'\nimport typesClone from '@types\/clone'\nimport typescriptTslintPlugin from 'typescript-tslint-plugin'\nimport typesDiff from '@types\/diff'\nimport typesSourceMapSupport from '@types\/source-map-support'\n\n"}
{"prompt":"define(['highlight.js','d3','yn','ntypescript','@types\/react','stream-spec','has-ansi'], function(highlightJs,d3,yn,ntypescript,typesReact,streamSpec,hasAnsi){\n\n})","completion":" import highlightJs from 'highlight.js'\nimport d3 from 'd3'\nimport yn from 'yn'\nimport ntypescript from 'ntypescript'\nimport typesReact from '@types\/react'\nimport streamSpec from 'stream-spec'\nimport hasAnsi from 'has-ansi'\n\n"}
{"prompt":"define(['vega-schema-url-parser','vega-regression'], function(vegaSchemaUrlParser,vegaRegression){\n\n})","completion":" import vegaSchemaUrlParser from 'vega-schema-url-parser'\nimport vegaRegression from 'vega-regression'\n\n"}
{"prompt":"define(['prex','create-require','gulp-newer','vega-event-selector','tslint-plugin-prettier','vega-expression','gulp-sourcemaps','azure-devops-node-api','ntypescript','npm-packlist','@tsconfig\/node14','ts-json-schema-generator','vows','yaml-front-matter','node-sass'], function(prex,createRequire,gulpNewer,vegaEventSelector,tslintPluginPrettier,vegaExpression,gulpSourcemaps,azureDevopsNodeApi,ntypescript,npmPacklist,tsconfigNode14,tsJsonSchemaGenerator,vows,yamlFrontMatter,nodeSass){\n\n})","completion":" import prex from 'prex'\nimport createRequire from 'create-require'\nimport gulpNewer from 'gulp-newer'\nimport vegaEventSelector from 'vega-event-selector'\nimport tslintPluginPrettier from 'tslint-plugin-prettier'\nimport vegaExpression from 'vega-expression'\nimport gulpSourcemaps from 'gulp-sourcemaps'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport ntypescript from 'ntypescript'\nimport npmPacklist from 'npm-packlist'\nimport tsconfigNode14 from '@tsconfig\/node14'\nimport tsJsonSchemaGenerator from 'ts-json-schema-generator'\nimport vows from 'vows'\nimport yamlFrontMatter from 'yaml-front-matter'\nimport nodeSass from 'node-sass'\n\n"}
{"prompt":"define(['d3-scale','@types\/gulp-sourcemaps','gulp-insert','get-caller-file','ts-node-dev','@types\/mkdirp','ts-clean-built','@types\/clone','vega-cli','npm-packlist','@types\/q','eslint-plugin-github','os-tmpdir','vega-label'], function(d3Scale,typesGulpSourcemaps,gulpInsert,getCallerFile,tsNodeDev,typesMkdirp,tsCleanBuilt,typesClone,vegaCli,npmPacklist,typesQ,eslintPluginGithub,osTmpdir,vegaLabel){\n\n})","completion":" import d3Scale from 'd3-scale'\nimport typesGulpSourcemaps from '@types\/gulp-sourcemaps'\nimport gulpInsert from 'gulp-insert'\nimport getCallerFile from 'get-caller-file'\nimport tsNodeDev from 'ts-node-dev'\nimport typesMkdirp from '@types\/mkdirp'\nimport tsCleanBuilt from 'ts-clean-built'\nimport typesClone from '@types\/clone'\nimport vegaCli from 'vega-cli'\nimport npmPacklist from 'npm-packlist'\nimport typesQ from '@types\/q'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport osTmpdir from 'os-tmpdir'\nimport vegaLabel from 'vega-label'\n\n"}
{"prompt":"define(['tsutils'], function(tsutils){\n\n})","completion":" import tsutils from 'tsutils'\n\n"}
{"prompt":"define(['is-boolean-object','@types\/tape'], function(isBooleanObject,typesTape){\n\n})","completion":" import isBooleanObject from 'is-boolean-object'\nimport typesTape from '@types\/tape'\n\n"}
{"prompt":"define(['create-require','yn','recast','tslint-test-config-non-relative','has-ansi','pretty-quick','eslint-plugin-no-null','vega-lite-dev-config','@types\/gulp-rename','vega-statistics','azure-devops-node-api','d3-delaunay','ignore','vega-themes'], function(createRequire,yn,recast,tslintTestConfigNonRelative,hasAnsi,prettyQuick,eslintPluginNoNull,vegaLiteDevConfig,typesGulpRename,vegaStatistics,azureDevopsNodeApi,d3Delaunay,ignore,vegaThemes){\n\n})","completion":" import createRequire from 'create-require'\nimport yn from 'yn'\nimport recast from 'recast'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport hasAnsi from 'has-ansi'\nimport prettyQuick from 'pretty-quick'\nimport eslintPluginNoNull from 'eslint-plugin-no-null'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport typesGulpRename from '@types\/gulp-rename'\nimport vegaStatistics from 'vega-statistics'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport d3Delaunay from 'd3-delaunay'\nimport ignore from 'ignore'\nimport vegaThemes from 'vega-themes'\n\n"}
{"prompt":"define(['vega-hierarchy','path','vega-scale','cpr','babel-plugin-trace','ts-clean-built','has-ansi','vega-wordcloud'], function(vegaHierarchy,path,vegaScale,cpr,babelPluginTrace,tsCleanBuilt,hasAnsi,vegaWordcloud){\n\n})","completion":" import vegaHierarchy from 'vega-hierarchy'\nimport path from 'path'\nimport vegaScale from 'vega-scale'\nimport cpr from 'cpr'\nimport babelPluginTrace from 'babel-plugin-trace'\nimport tsCleanBuilt from 'ts-clean-built'\nimport hasAnsi from 'has-ansi'\nimport vegaWordcloud from 'vega-wordcloud'\n\n"}
{"prompt":"define(['@types\/minimist','jest-t-assert'], function(typesMinimist,jestTAssert){\n\n})","completion":" import typesMinimist from '@types\/minimist'\nimport jestTAssert from 'jest-t-assert'\n\n"}
{"prompt":"define(['vega-encode','@fimbul\/valtyr','cliui','get-caller-file','gulp-sourcemaps','@types\/mkdirp','flow-parser','is-bigint','webidl-conversions','d3-scale','vega-tooltip','ini'], function(vegaEncode,fimbulValtyr,cliui,getCallerFile,gulpSourcemaps,typesMkdirp,flowParser,isBigint,webidlConversions,d3Scale,vegaTooltip,ini){\n\n})","completion":" import vegaEncode from 'vega-encode'\nimport fimbulValtyr from '@fimbul\/valtyr'\nimport cliui from 'cliui'\nimport getCallerFile from 'get-caller-file'\nimport gulpSourcemaps from 'gulp-sourcemaps'\nimport typesMkdirp from '@types\/mkdirp'\nimport flowParser from 'flow-parser'\nimport isBigint from 'is-bigint'\nimport webidlConversions from 'webidl-conversions'\nimport d3Scale from 'd3-scale'\nimport vegaTooltip from 'vega-tooltip'\nimport ini from 'ini'\n\n"}
{"prompt":"define(['vega-lite-dev-config','vega-format','@types\/clone','vega-geo','d3-shape','@types\/js-yaml','d3-delaunay','hashish','from','node-sass','@types\/proper-lockfile','vega-force','@types\/react','eslint-config-lydell','throat'], function(vegaLiteDevConfig,vegaFormat,typesClone,vegaGeo,d3Shape,typesJsYaml,d3Delaunay,hashish,from,nodeSass,typesProperLockfile,vegaForce,typesReact,eslintConfigLydell,throat){\n\n})","completion":" import vegaLiteDevConfig from 'vega-lite-dev-config'\nimport vegaFormat from 'vega-format'\nimport typesClone from '@types\/clone'\nimport vegaGeo from 'vega-geo'\nimport d3Shape from 'd3-shape'\nimport typesJsYaml from '@types\/js-yaml'\nimport d3Delaunay from 'd3-delaunay'\nimport hashish from 'hashish'\nimport from from 'from'\nimport nodeSass from 'node-sass'\nimport typesProperLockfile from '@types\/proper-lockfile'\nimport vegaForce from 'vega-force'\nimport typesReact from '@types\/react'\nimport eslintConfigLydell from 'eslint-config-lydell'\nimport throat from 'throat'\n\n"}
{"prompt":"define(['yn','vega-time','ts-node-dev','recast','ts-clean-built'], function(yn,vegaTime,tsNodeDev,recast,tsCleanBuilt){\n\n})","completion":" import yn from 'yn'\nimport vegaTime from 'vega-time'\nimport tsNodeDev from 'ts-node-dev'\nimport recast from 'recast'\nimport tsCleanBuilt from 'ts-clean-built'\n\n"}
{"prompt":"define(['is-boolean-object','which-module','@types\/babel__code-frame','d3','eslint-plugin-github','homedir-polyfill','@types\/fast-json-stable-stringify','json-stringify-pretty-compact','@types\/tape','pretty-quick','@types\/diff','rollup-plugin-cleanup','d3-geo-projection','arg','yaml-front-matter'], function(isBooleanObject,whichModule,typesBabelCodeFrame,d3,eslintPluginGithub,homedirPolyfill,typesFastJsonStableStringify,jsonStringifyPrettyCompact,typesTape,prettyQuick,typesDiff,rollupPluginCleanup,d3GeoProjection,arg,yamlFrontMatter){\n\n})","completion":" import isBooleanObject from 'is-boolean-object'\nimport whichModule from 'which-module'\nimport typesBabelCodeFrame from '@types\/babel__code-frame'\nimport d3 from 'd3'\nimport eslintPluginGithub from 'eslint-plugin-github'\nimport homedirPolyfill from 'homedir-polyfill'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport jsonStringifyPrettyCompact from 'json-stringify-pretty-compact'\nimport typesTape from '@types\/tape'\nimport prettyQuick from 'pretty-quick'\nimport typesDiff from '@types\/diff'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport d3GeoProjection from 'd3-geo-projection'\nimport arg from 'arg'\nimport yamlFrontMatter from 'yaml-front-matter'\n\n"}
{"prompt":"define(['os-tmpdir','colortape','dprint','arg','clean-ts-built','common-tags','@types\/microsoft__typescript-etw','decamelize','@tsconfig\/node10','which-boxed-primitive','@types\/gulp-rename'], function(osTmpdir,colortape,dprint,arg,cleanTsBuilt,commonTags,typesMicrosoftTypescriptEtw,decamelize,tsconfigNode10,whichBoxedPrimitive,typesGulpRename){\n\n})","completion":" import osTmpdir from 'os-tmpdir'\nimport colortape from 'colortape'\nimport dprint from 'dprint'\nimport arg from 'arg'\nimport cleanTsBuilt from 'clean-ts-built'\nimport commonTags from 'common-tags'\nimport typesMicrosoftTypescriptEtw from '@types\/microsoft__typescript-etw'\nimport decamelize from 'decamelize'\nimport tsconfigNode10 from '@tsconfig\/node10'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\nimport typesGulpRename from '@types\/gulp-rename'\n\n"}
{"prompt":"define(['rollup-plugin-bundle-size'], function(rollupPluginBundleSize){\n\n})","completion":" import rollupPluginBundleSize from 'rollup-plugin-bundle-size'\n\n"}
{"prompt":"define(['yaml-front-matter','tr46','ignore','vega-label','require-directory','is-bigint','serve','vega-util'], function(yamlFrontMatter,tr46,ignore,vegaLabel,requireDirectory,isBigint,serve,vegaUtil){\n\n})","completion":" import yamlFrontMatter from 'yaml-front-matter'\nimport tr46 from 'tr46'\nimport ignore from 'ignore'\nimport vegaLabel from 'vega-label'\nimport requireDirectory from 'require-directory'\nimport isBigint from 'is-bigint'\nimport serve from 'serve'\nimport vegaUtil from 'vega-util'\n\n"}
{"prompt":"define(['d3','jest-puppeteer','tr46','vega-wordcloud','@types\/tape','clean-ts-built','tslint-consistent-codestyle','@types\/proxyquire','eslint-formatter-autolinkable-stylish','ts-transform-default-export','vega-parser','@types\/gulp-rename','unicode-property-value-aliases-ecmascript'], function(d3,jestPuppeteer,tr46,vegaWordcloud,typesTape,cleanTsBuilt,tslintConsistentCodestyle,typesProxyquire,eslintFormatterAutolinkableStylish,tsTransformDefaultExport,vegaParser,typesGulpRename,unicodePropertyValueAliasesEcmascript){\n\n})","completion":" import d3 from 'd3'\nimport jestPuppeteer from 'jest-puppeteer'\nimport tr46 from 'tr46'\nimport vegaWordcloud from 'vega-wordcloud'\nimport typesTape from '@types\/tape'\nimport cleanTsBuilt from 'clean-ts-built'\nimport tslintConsistentCodestyle from 'tslint-consistent-codestyle'\nimport typesProxyquire from '@types\/proxyquire'\nimport eslintFormatterAutolinkableStylish from 'eslint-formatter-autolinkable-stylish'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport vegaParser from 'vega-parser'\nimport typesGulpRename from '@types\/gulp-rename'\nimport unicodePropertyValueAliasesEcmascript from 'unicode-property-value-aliases-ecmascript'\n\n"}
{"prompt":"define(['camelcase','rollup-plugin-cleanup','fast-json-patch','ts-transform-default-export','@swc\/wasm','@typescript-eslint\/experimental-utils','@types\/gulp-concat','tslint-test-config-non-relative','vega-lite-dev-config','@types\/merge2','@types\/fast-json-stable-stringify','azure-devops-node-api','webidl2js','webidl-conversions','which-boxed-primitive'], function(camelcase,rollupPluginCleanup,fastJsonPatch,tsTransformDefaultExport,swcWasm,typescriptEslintExperimentalUtils,typesGulpConcat,tslintTestConfigNonRelative,vegaLiteDevConfig,typesMerge2,typesFastJsonStableStringify,azureDevopsNodeApi,webidl2Js,webidlConversions,whichBoxedPrimitive){\n\n})","completion":" import camelcase from 'camelcase'\nimport rollupPluginCleanup from 'rollup-plugin-cleanup'\nimport fastJsonPatch from 'fast-json-patch'\nimport tsTransformDefaultExport from 'ts-transform-default-export'\nimport swcWasm from '@swc\/wasm'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport typesGulpConcat from '@types\/gulp-concat'\nimport tslintTestConfigNonRelative from 'tslint-test-config-non-relative'\nimport vegaLiteDevConfig from 'vega-lite-dev-config'\nimport typesMerge2 from '@types\/merge2'\nimport typesFastJsonStableStringify from '@types\/fast-json-stable-stringify'\nimport azureDevopsNodeApi from 'azure-devops-node-api'\nimport webidl2Js from 'webidl2js'\nimport webidlConversions from 'webidl-conversions'\nimport whichBoxedPrimitive from 'which-boxed-primitive'\n\n"}
{"prompt":"define(['vega-time','vega-label','decamelize','yarn-deduplicate','jest-puppeteer','tslint-config-prettier','xml2js','github-release-from-changelog','npm-packlist','vinyl-sourcemaps-apply','throat','d3-force','common-tags','vega-cli','typescript-json-schema','@types\/gulp-newer','@types\/puppeteer','@types\/minimist','detect-indent'], function(vegaTime,vegaLabel,decamelize,yarnDeduplicate,jestPuppeteer,tslintConfigPrettier,xml2Js,githubReleaseFromChangelog,npmPacklist,vinylSourcemapsApply,throat,d3Force,commonTags,vegaCli,typescriptJsonSchema,typesGulpNewer,typesPuppeteer,typesMinimist,detectIndent){\n\n})","completion":" import vegaTime from 'vega-time'\nimport vegaLabel from 'vega-label'\nimport decamelize from 'decamelize'\nimport yarnDeduplicate from 'yarn-deduplicate'\nimport jestPuppeteer from 'jest-puppeteer'\nimport tslintConfigPrettier from 'tslint-config-prettier'\nimport xml2Js from 'xml2js'\nimport githubReleaseFromChangelog from 'github-release-from-changelog'\nimport npmPacklist from 'npm-packlist'\nimport vinylSourcemapsApply from 'vinyl-sourcemaps-apply'\nimport throat from 'throat'\nimport d3Force from 'd3-force'\nimport commonTags from 'common-tags'\nimport vegaCli from 'vega-cli'\nimport typescriptJsonSchema from 'typescript-json-schema'\nimport typesGulpNewer from '@types\/gulp-newer'\nimport typesPuppeteer from '@types\/puppeteer'\nimport typesMinimist from '@types\/minimist'\nimport detectIndent from 'detect-indent'\n\n"}
{"prompt":"define(['colortape','jest-puppeteer','unicode-property-aliases-ecmascript','@types\/source-map-support','@typescript-eslint\/experimental-utils','vega-encode'], function(colortape,jestPuppeteer,unicodePropertyAliasesEcmascript,typesSourceMapSupport,typescriptEslintExperimentalUtils,vegaEncode){\n\n})","completion":" import colortape from 'colortape'\nimport jestPuppeteer from 'jest-puppeteer'\nimport unicodePropertyAliasesEcmascript from 'unicode-property-aliases-ecmascript'\nimport typesSourceMapSupport from '@types\/source-map-support'\nimport typescriptEslintExperimentalUtils from '@typescript-eslint\/experimental-utils'\nimport vegaEncode from 'vega-encode'\n\n"}
